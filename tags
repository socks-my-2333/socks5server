!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCESS_ONCE	uv/unix/internal.h	55;"	d
ADDR_SIZE	uv/unix/aix.c	1047;"	d	file:
ADDR_SIZE	uv/unix/aix.c	1117;"	d	file:
ARRAY_SIZE	uv/uv-common.h	48;"	d
ASSERT	defs.h	123;"	d
ASSERT	defs.h	129;"	d
ATTRIBUTE_FORMAT_PRINTF	defs.h	97;"	d
ATTRIBUTE_FORMAT_PRINTF	defs.h	99;"	d
BASE64_CDECODE_H	include/b64/cdecode.h	9;"	d
BASE64_CENCODE_H	include/b64/cencode.h	9;"	d
BASE64_DECODE_H	include/b64/decode.h	9;"	d
BASE64_ENCODE_H	include/b64/encode.h	9;"	d
CAST	uv/unix/linux-inotify.c	46;"	d	file:
CHARS_PER_LINE	b64/cencode.c	/^const int CHARS_PER_LINE = 72;$/;"	v
CHECK	defs.h	124;"	d
CHECK	defs.h	130;"	d
CLOCK_BOOTTIME	uv/unix/linux-core.c	68;"	d	file:
CLOCK_MONOTONIC_COARSE	uv/unix/linux-core.c	60;"	d	file:
CONTAINER_OF	defs.h	142;"	d
CPUSTATES	uv/unix/freebsd.c	48;"	d	file:
CP_IDLE	uv/unix/freebsd.c	54;"	d	file:
CP_INTR	uv/unix/freebsd.c	55;"	d	file:
CP_NICE	uv/unix/freebsd.c	52;"	d	file:
CP_SYS	uv/unix/freebsd.c	53;"	d	file:
CP_USER	uv/unix/freebsd.c	51;"	d	file:
DEBUG_CHECKS	defs.h	127;"	d
DEBUG_CHECKS	defs.h	131;"	d
DEFAULT_BIND_HOST	main.c	32;"	d	file:
DEFAULT_BIND_PORT	main.c	34;"	d	file:
DEFAULT_IDLE_TIMEOUT	main.c	35;"	d	file:
DEFS_H_	defs.h	23;"	d
EQ	uv/unix/aix.c	65;"	d	file:
F_DUP2FD_CLOEXEC	uv/unix/core.c	70;"	d	file:
HAVE_DIRENT_TYPES	include/uv-unix.h	163;"	d
HAVE_IFADDRS_H	uv/unix/linux-core.c	39;"	d	file:
HAVE_IFADDRS_H	uv/unix/linux-core.c	43;"	d	file:
HAVE_PREADV	uv/unix/fs.c	52;"	d	file:
HAVE_PREADV	uv/unix/fs.c	54;"	d	file:
HEAP_EXPORT	uv/heap-inl.h	/^HEAP_EXPORT(struct heap_node* heap_min(const struct heap* heap)) {$/;"	f
HEAP_EXPORT	uv/heap-inl.h	/^HEAP_EXPORT(void heap_dequeue(struct heap* heap, heap_compare_fn less_than)) {$/;"	f
HEAP_EXPORT	uv/heap-inl.h	/^HEAP_EXPORT(void heap_init(struct heap* heap)) {$/;"	f
HEAP_EXPORT	uv/heap-inl.h	/^HEAP_EXPORT(void heap_insert(struct heap* heap,$/;"	f
HEAP_EXPORT	uv/heap-inl.h	/^HEAP_EXPORT(void heap_remove(struct heap* heap,$/;"	f
HEAP_EXPORT	uv/heap-inl.h	22;"	d
HEAP_EXPORT	uv/heap-inl.h	243;"	d
HEAP_EXPORT	uv/heap-inl.h	24;"	d
INET6_ADDRSTRLEN	server.c	28;"	d	file:
INIT	uv/unix/fs.c	61;"	d	file:
IPV6_ADD_MEMBERSHIP	uv/unix/udp.c	32;"	d	file:
IPV6_DROP_MEMBERSHIP	uv/unix/udp.c	36;"	d	file:
LIBRARIES	b64/Makefile	/^LIBRARIES = libb64.a$/;"	m
LINK.o	b64/Makefile	/^LINK.o = gcc$/;"	m
MAX_THREADPOOL_SIZE	uv/threadpool.c	42;"	d	file:
MSAN_ACTIVE	uv/unix/linux-syscalls.c	31;"	d	file:
NANOSEC	uv/unix/freebsd.c	44;"	d	file:
NANOSEC	uv/unix/freebsd.c	45;"	d	file:
NANOSEC	uv/unix/netbsd.c	46;"	d	file:
NANOSEC	uv/unix/netbsd.c	47;"	d	file:
NANOSEC	uv/unix/openbsd.c	43;"	d	file:
NANOSEC	uv/unix/openbsd.c	44;"	d	file:
NANOSEC	uv/unix/thread.c	31;"	d	file:
NANOSEC	uv/unix/thread.c	32;"	d	file:
NI_MAXHOST	include/uv-unix.h	64;"	d
NI_MAXSERV	include/uv-unix.h	68;"	d
NL_RETURN	c-callstack.h	28;"	d
NL_RETURN	c-callstack.h	32;"	d
NetlinkList	uv/unix/android-ifaddrs.c	/^typedef struct NetlinkList$/;"	s	file:
NetlinkList	uv/unix/android-ifaddrs.c	/^} NetlinkList;$/;"	t	typeref:struct:NetlinkList	file:
O_CLOEXEC	uv/unix/internal.h	126;"	d
PATH	uv/unix/fs.c	76;"	d	file:
PATH2	uv/unix/fs.c	91;"	d	file:
PORT_DELETED	uv/unix/sunos.c	49;"	d	file:
PORT_FIRED	uv/unix/sunos.c	46;"	d	file:
PORT_LOADED	uv/unix/sunos.c	48;"	d	file:
PORT_UNUSED	uv/unix/sunos.c	47;"	d	file:
POST	uv/unix/fs.c	113;"	d	file:
PROCFS_FILE_OFFSET_BITS_HACK	uv/unix/sunos.c	52;"	d	file:
PROCFS_FILE_OFFSET_BITS_HACK	uv/unix/sunos.c	55;"	d	file:
QUEUE	uv/queue.h	/^typedef void *QUEUE[2];$/;"	t
QUEUE_ADD	uv/queue.h	52;"	d
QUEUE_DATA	uv/queue.h	30;"	d
QUEUE_EMPTY	uv/queue.h	39;"	d
QUEUE_FOREACH	uv/queue.h	36;"	d
QUEUE_HEAD	uv/queue.h	42;"	d
QUEUE_H_	uv/queue.h	17;"	d
QUEUE_INIT	uv/queue.h	45;"	d
QUEUE_INSERT_HEAD	uv/queue.h	83;"	d
QUEUE_INSERT_TAIL	uv/queue.h	92;"	d
QUEUE_MOVE	uv/queue.h	72;"	d
QUEUE_NEXT	uv/queue.h	24;"	d
QUEUE_NEXT_PREV	uv/queue.h	27;"	d
QUEUE_PREV	uv/queue.h	25;"	d
QUEUE_PREV_NEXT	uv/queue.h	26;"	d
QUEUE_REMOVE	uv/queue.h	101;"	d
QUEUE_SPLIT	uv/queue.h	61;"	d
RB_AUGMENT	include/tree.h	339;"	d
RB_BLACK	include/tree.h	310;"	d
RB_COLOR	include/tree.h	323;"	d
RB_EMPTY	include/tree.h	325;"	d
RB_ENTRY	include/tree.h	312;"	d
RB_FIND	include/tree.h	731;"	d
RB_FOREACH	include/tree.h	738;"	d
RB_FOREACH_FROM	include/tree.h	743;"	d
RB_FOREACH_REVERSE	include/tree.h	753;"	d
RB_FOREACH_REVERSE_FROM	include/tree.h	758;"	d
RB_FOREACH_REVERSE_SAFE	include/tree.h	763;"	d
RB_FOREACH_SAFE	include/tree.h	748;"	d
RB_GENERATE	include/tree.h	402;"	d
RB_GENERATE_INTERNAL	include/tree.h	406;"	d
RB_GENERATE_STATIC	include/tree.h	404;"	d
RB_HEAD	include/tree.h	298;"	d
RB_INF	include/tree.h	727;"	d
RB_INIT	include/tree.h	306;"	d
RB_INITIALIZER	include/tree.h	303;"	d
RB_INSERT	include/tree.h	729;"	d
RB_LEFT	include/tree.h	320;"	d
RB_MAX	include/tree.h	736;"	d
RB_MIN	include/tree.h	735;"	d
RB_NEGINF	include/tree.h	726;"	d
RB_NEXT	include/tree.h	733;"	d
RB_NFIND	include/tree.h	732;"	d
RB_PARENT	include/tree.h	322;"	d
RB_PREV	include/tree.h	734;"	d
RB_PROTOTYPE	include/tree.h	383;"	d
RB_PROTOTYPE_INTERNAL	include/tree.h	387;"	d
RB_PROTOTYPE_STATIC	include/tree.h	385;"	d
RB_RED	include/tree.h	311;"	d
RB_REMOVE	include/tree.h	730;"	d
RB_RIGHT	include/tree.h	321;"	d
RB_ROOT	include/tree.h	324;"	d
RB_ROTATE_LEFT	include/tree.h	342;"	d
RB_ROTATE_RIGHT	include/tree.h	362;"	d
RB_SET	include/tree.h	327;"	d
RB_SET_BLACKRED	include/tree.h	333;"	d
RDWR_BUF_SIZE	uv/unix/aix.c	64;"	d	file:
ROUND_UP	uv/unix/internal.h	58;"	d
S5_AUTH_GSSAPI	s5.h	/^  S5_AUTH_GSSAPI = 1 << 1,$/;"	e	enum:__anon10
S5_AUTH_NONE	s5.h	/^  S5_AUTH_NONE = 1 << 0,$/;"	e	enum:__anon10
S5_AUTH_PASSWD	s5.h	/^  S5_AUTH_PASSWD = 1 << 2$/;"	e	enum:__anon10
S5_ERR_GEN	s5.c	294;"	d	file:
S5_ERR_GEN	s5.c	299;"	d	file:
S5_ERR_GEN	s5.h	38;"	d
S5_ERR_GEN	s5.h	40;"	d
S5_ERR_MAP	s5.h	/^  S5_ERR_MAP(S5_ERR_GEN)$/;"	e	enum:__anon9
S5_ERR_MAP	s5.h	28;"	d
S5_H_	s5.h	23;"	d
SAVE_ERRNO	uv/unix/internal.h	68;"	d
SIZE	b64/b64.c	28;"	d	file:
SIZE	sutil.c	10;"	d	file:
SOURCES	Makefile	/^SOURCES := main.c client.c defs.h s5.c s5.h server.c util.c sutil.c \\$/;"	m
SOURCES	b64/Makefile	/^SOURCES = cdecode.c  cencode.c$/;"	m
SPLAY_ASSEMBLE	include/tree.h	112;"	d
SPLAY_EMPTY	include/tree.h	85;"	d
SPLAY_ENTRY	include/tree.h	76;"	d
SPLAY_FIND	include/tree.h	285;"	d
SPLAY_FOREACH	include/tree.h	292;"	d
SPLAY_GENERATE	include/tree.h	163;"	d
SPLAY_HEAD	include/tree.h	64;"	d
SPLAY_INF	include/tree.h	281;"	d
SPLAY_INIT	include/tree.h	72;"	d
SPLAY_INITIALIZER	include/tree.h	69;"	d
SPLAY_INSERT	include/tree.h	283;"	d
SPLAY_LEFT	include/tree.h	82;"	d
SPLAY_LINKLEFT	include/tree.h	100;"	d
SPLAY_LINKRIGHT	include/tree.h	106;"	d
SPLAY_MAX	include/tree.h	289;"	d
SPLAY_MIN	include/tree.h	287;"	d
SPLAY_NEGINF	include/tree.h	280;"	d
SPLAY_NEXT	include/tree.h	286;"	d
SPLAY_PROTOTYPE	include/tree.h	121;"	d
SPLAY_REMOVE	include/tree.h	284;"	d
SPLAY_RIGHT	include/tree.h	83;"	d
SPLAY_ROOT	include/tree.h	84;"	d
SPLAY_ROTATE_LEFT	include/tree.h	94;"	d
SPLAY_ROTATE_RIGHT	include/tree.h	88;"	d
STATIC_ASSERT	uv/uv-common.h	53;"	d
SUTIL_H_	sutil.h	2;"	d
TARGETS	b64/Makefile	/^TARGETS = $(LIBRARIES)$/;"	m
UNREACHABLE	defs.h	134;"	d
UNREACHABLE	uv/unix/internal.h	61;"	d
UV_ASYNC_PRIVATE_FIELDS	include/uv-unix.h	311;"	d
UV_ASYNC_PRIVATE_FIELDS	include/uv.h	1468;"	d
UV_ATOMIC_OPS_H_	uv/unix/atomic-ops.h	17;"	d
UV_CHANGE	include/uv.h	/^  UV_CHANGE = 2$/;"	e	enum:uv_fs_event
UV_CHECK_PRIVATE_FIELDS	include/uv-unix.h	303;"	d
UV_CHECK_PRIVATE_FIELDS	include/uv.h	1466;"	d
UV_CLOCK_FAST	uv/unix/internal.h	/^  UV_CLOCK_FAST = 1      \/* Use the fastest clock with <= 1ms granularity. *\/$/;"	e	enum:__anon3
UV_CLOCK_PRECISE	uv/unix/internal.h	/^  UV_CLOCK_PRECISE = 0,  \/* Use the highest resolution clock available. *\/$/;"	e	enum:__anon3
UV_CLOSED	uv/unix/internal.h	/^  UV_CLOSED               = 0x02,   \/* close(2) finished. *\/$/;"	e	enum:__anon1
UV_CLOSING	uv/unix/internal.h	/^  UV_CLOSING              = 0x01,   \/* uv_close() called but not finished. *\/$/;"	e	enum:__anon1
UV_COMMON_H_	uv/uv-common.h	28;"	d
UV_CONNECT_PRIVATE_FIELDS	include/uv-unix.h	254;"	d
UV_CREATE_PIPE	include/uv.h	/^  UV_CREATE_PIPE    = 0x01,$/;"	e	enum:__anon30
UV_DEC_BACKLOG	uv/unix/stream.c	503;"	d	file:
UV_DEC_BACKLOG	uv/unix/stream.c	505;"	d	file:
UV_DEC_BACKLOG	uv/unix/stream.c	568;"	d	file:
UV_DESTRUCTOR	uv/threadpool.c	/^UV_DESTRUCTOR(static void cleanup(void)) {$/;"	f
UV_DESTRUCTOR	uv/unix/internal.h	84;"	d
UV_DESTRUCTOR	uv/unix/internal.h	87;"	d
UV_DESTRUCTOR	uv/unix/proctitle.c	/^UV_DESTRUCTOR(static void free_args_mem(void)) {$/;"	f
UV_DIRENT_BLOCK	include/uv.h	/^  UV_DIRENT_BLOCK$/;"	e	enum:__anon34
UV_DIRENT_CHAR	include/uv.h	/^  UV_DIRENT_CHAR,$/;"	e	enum:__anon34
UV_DIRENT_DIR	include/uv.h	/^  UV_DIRENT_DIR,$/;"	e	enum:__anon34
UV_DIRENT_FIFO	include/uv.h	/^  UV_DIRENT_FIFO,$/;"	e	enum:__anon34
UV_DIRENT_FILE	include/uv.h	/^  UV_DIRENT_FILE,$/;"	e	enum:__anon34
UV_DIRENT_LINK	include/uv.h	/^  UV_DIRENT_LINK,$/;"	e	enum:__anon34
UV_DIRENT_SOCKET	include/uv.h	/^  UV_DIRENT_SOCKET,$/;"	e	enum:__anon34
UV_DIRENT_UNKNOWN	include/uv.h	/^  UV_DIRENT_UNKNOWN,$/;"	e	enum:__anon34
UV_DYNAMIC	include/uv-unix.h	202;"	d
UV_ERRNO_H_	include/uv-errno.h	23;"	d
UV_ERRNO_MAP	include/uv.h	/^  UV_ERRNO_MAP(XX)$/;"	e	enum:__anon21
UV_ERRNO_MAP	include/uv.h	66;"	d
UV_ERRNO_MAX	include/uv.h	/^  UV_ERRNO_MAX = UV__EOF - 1$/;"	e	enum:__anon21
UV_ERR_NAME_GEN	uv/uv-common.c	151;"	d	file:
UV_ERR_NAME_GEN	uv/uv-common.c	158;"	d	file:
UV_EXTERN	include/uv.h	34;"	d
UV_EXTERN	include/uv.h	37;"	d
UV_EXTERN	include/uv.h	40;"	d
UV_EXTERN	include/uv.h	43;"	d
UV_EXTERN	include/uv.h	45;"	d
UV_FILE	include/uv.h	/^  UV_FILE,$/;"	e	enum:__anon22
UV_FS_ACCESS	include/uv.h	/^  UV_FS_ACCESS,$/;"	e	enum:__anon37
UV_FS_CHMOD	include/uv.h	/^  UV_FS_CHMOD,$/;"	e	enum:__anon37
UV_FS_CHOWN	include/uv.h	/^  UV_FS_CHOWN,$/;"	e	enum:__anon37
UV_FS_CLOSE	include/uv.h	/^  UV_FS_CLOSE,$/;"	e	enum:__anon37
UV_FS_CUSTOM	include/uv.h	/^  UV_FS_CUSTOM,$/;"	e	enum:__anon37
UV_FS_EVENT_PRIVATE_FIELDS	include/uv-unix.h	379;"	d
UV_FS_EVENT_PRIVATE_FIELDS	include/uv.h	1474;"	d
UV_FS_EVENT_RECURSIVE	include/uv.h	/^  UV_FS_EVENT_RECURSIVE = 4$/;"	e	enum:uv_fs_event_flags
UV_FS_EVENT_STAT	include/uv.h	/^  UV_FS_EVENT_STAT = 2,$/;"	e	enum:uv_fs_event_flags
UV_FS_EVENT_WATCH_ENTRY	include/uv.h	/^  UV_FS_EVENT_WATCH_ENTRY = 1,$/;"	e	enum:uv_fs_event_flags
UV_FS_FCHMOD	include/uv.h	/^  UV_FS_FCHMOD,$/;"	e	enum:__anon37
UV_FS_FCHOWN	include/uv.h	/^  UV_FS_FCHOWN,$/;"	e	enum:__anon37
UV_FS_FDATASYNC	include/uv.h	/^  UV_FS_FDATASYNC,$/;"	e	enum:__anon37
UV_FS_FSTAT	include/uv.h	/^  UV_FS_FSTAT,$/;"	e	enum:__anon37
UV_FS_FSYNC	include/uv.h	/^  UV_FS_FSYNC,$/;"	e	enum:__anon37
UV_FS_FTRUNCATE	include/uv.h	/^  UV_FS_FTRUNCATE,$/;"	e	enum:__anon37
UV_FS_FUTIME	include/uv.h	/^  UV_FS_FUTIME,$/;"	e	enum:__anon37
UV_FS_LINK	include/uv.h	/^  UV_FS_LINK,$/;"	e	enum:__anon37
UV_FS_LSTAT	include/uv.h	/^  UV_FS_LSTAT,$/;"	e	enum:__anon37
UV_FS_MKDIR	include/uv.h	/^  UV_FS_MKDIR,$/;"	e	enum:__anon37
UV_FS_MKDTEMP	include/uv.h	/^  UV_FS_MKDTEMP,$/;"	e	enum:__anon37
UV_FS_OPEN	include/uv.h	/^  UV_FS_OPEN,$/;"	e	enum:__anon37
UV_FS_PRIVATE_FIELDS	include/uv-unix.h	345;"	d
UV_FS_READ	include/uv.h	/^  UV_FS_READ,$/;"	e	enum:__anon37
UV_FS_READLINK	include/uv.h	/^  UV_FS_READLINK,$/;"	e	enum:__anon37
UV_FS_REALPATH	include/uv.h	/^  UV_FS_REALPATH$/;"	e	enum:__anon37
UV_FS_RENAME	include/uv.h	/^  UV_FS_RENAME,$/;"	e	enum:__anon37
UV_FS_REQ_PRIVATE_FIELDS	include/uv.h	1472;"	d
UV_FS_RMDIR	include/uv.h	/^  UV_FS_RMDIR,$/;"	e	enum:__anon37
UV_FS_SCANDIR	include/uv.h	/^  UV_FS_SCANDIR,$/;"	e	enum:__anon37
UV_FS_SENDFILE	include/uv.h	/^  UV_FS_SENDFILE,$/;"	e	enum:__anon37
UV_FS_STAT	include/uv.h	/^  UV_FS_STAT,$/;"	e	enum:__anon37
UV_FS_SYMLINK	include/uv.h	/^  UV_FS_SYMLINK,$/;"	e	enum:__anon37
UV_FS_SYMLINK_DIR	include/uv.h	1226;"	d
UV_FS_SYMLINK_JUNCTION	include/uv.h	1232;"	d
UV_FS_UNKNOWN	include/uv.h	/^  UV_FS_UNKNOWN = -1,$/;"	e	enum:__anon37
UV_FS_UNLINK	include/uv.h	/^  UV_FS_UNLINK,$/;"	e	enum:__anon37
UV_FS_UTIME	include/uv.h	/^  UV_FS_UTIME,$/;"	e	enum:__anon37
UV_FS_WRITE	include/uv.h	/^  UV_FS_WRITE,$/;"	e	enum:__anon37
UV_GETADDRINFO_PRIVATE_FIELDS	include/uv-unix.h	323;"	d
UV_GETADDRINFO_PRIVATE_FIELDS	include/uv.h	1470;"	d
UV_GETNAMEINFO_PRIVATE_FIELDS	include/uv-unix.h	332;"	d
UV_GETNAMEINFO_PRIVATE_FIELDS	include/uv.h	1471;"	d
UV_H	include/uv.h	25;"	d
UV_HANDLE_FIELDS	include/uv.h	401;"	d
UV_HANDLE_IPV6	uv/unix/internal.h	/^  UV_HANDLE_IPV6          = 0x10000, \/* Handle is bound to a IPv6 socket. *\/$/;"	e	enum:__anon1
UV_HANDLE_PRIVATE_FIELDS	include/uv-unix.h	268;"	d
UV_HANDLE_TYPE_MAP	include/uv.h	/^  UV_HANDLE_TYPE_MAP(XX)$/;"	e	enum:__anon22
UV_HANDLE_TYPE_MAP	include/uv.h	144;"	d
UV_HANDLE_TYPE_MAX	include/uv.h	/^  UV_HANDLE_TYPE_MAX$/;"	e	enum:__anon22
UV_HANDLE_TYPE_PRIVATE	include/uv.h	1460;"	d
UV_IDLE_PRIVATE_FIELDS	include/uv-unix.h	307;"	d
UV_IDLE_PRIVATE_FIELDS	include/uv.h	1467;"	d
UV_IGNORE	include/uv.h	/^  UV_IGNORE         = 0x00,$/;"	e	enum:__anon30
UV_INHERIT_FD	include/uv.h	/^  UV_INHERIT_FD     = 0x02,$/;"	e	enum:__anon30
UV_INHERIT_STREAM	include/uv.h	/^  UV_INHERIT_STREAM = 0x04,$/;"	e	enum:__anon30
UV_IO_PRIVATE_PLATFORM_FIELDS	include/uv-unix.h	72;"	d
UV_JOIN_GROUP	include/uv.h	/^  UV_JOIN_GROUP$/;"	e	enum:__anon28
UV_LEAVE_GROUP	include/uv.h	/^  UV_LEAVE_GROUP = 0,$/;"	e	enum:__anon28
UV_LINUX_H	include/uv-linux.h	23;"	d
UV_LINUX_SYSCALL_H_	uv/unix/linux-syscalls.h	23;"	d
UV_LOOP_BLOCK_SIGNAL	include/uv.h	/^  UV_LOOP_BLOCK_SIGNAL$/;"	e	enum:__anon24
UV_LOOP_BLOCK_SIGPROF	uv/unix/internal.h	/^  UV_LOOP_BLOCK_SIGPROF = 1$/;"	e	enum:__anon2
UV_LOOP_PRIVATE_FIELDS	include/uv-unix.h	209;"	d
UV_LOOP_PRIVATE_FIELDS	include/uv.h	1476;"	d
UV_LOOP_PRIVATE_PLATFORM_FIELDS	include/uv.h	1477;"	d
UV_LOOP_WATCHER_DEFINE	uv/unix/loop-watcher.c	25;"	d	file:
UV_ONCE_INIT	include/uv-unix.h	130;"	d
UV_PIPE_PRIVATE_FIELDS	include/uv-unix.h	293;"	d
UV_PLATFORM_FS_EVENT_FIELDS	include/uv-linux.h	30;"	d
UV_PLATFORM_FS_EVENT_FIELDS	include/uv-unix.h	113;"	d
UV_PLATFORM_LOOP_FIELDS	include/uv-linux.h	25;"	d
UV_PLATFORM_LOOP_FIELDS	include/uv-unix.h	109;"	d
UV_PLATFORM_SEM_T	include/uv-unix.h	105;"	d
UV_POLL_PRIVATE_FIELDS	include/uv-unix.h	296;"	d
UV_PREPARE_PRIVATE_FIELDS	include/uv-unix.h	299;"	d
UV_PREPARE_PRIVATE_FIELDS	include/uv.h	1465;"	d
UV_PRIVATE_REQ_TYPES	include/uv-unix.h	244;"	d
UV_PROCESS_DETACHED	include/uv.h	/^  UV_PROCESS_DETACHED = (1 << 3),$/;"	e	enum:uv_process_flags
UV_PROCESS_PRIVATE_FIELDS	include/uv-unix.h	341;"	d
UV_PROCESS_SETGID	include/uv.h	/^  UV_PROCESS_SETGID = (1 << 1),$/;"	e	enum:uv_process_flags
UV_PROCESS_SETUID	include/uv.h	/^  UV_PROCESS_SETUID = (1 << 0),$/;"	e	enum:uv_process_flags
UV_PROCESS_WINDOWS_HIDE	include/uv.h	/^  UV_PROCESS_WINDOWS_HIDE = (1 << 4)$/;"	e	enum:uv_process_flags
UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS	include/uv.h	/^  UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS = (1 << 2),$/;"	e	enum:uv_process_flags
UV_READABLE	include/uv.h	/^  UV_READABLE = 1,$/;"	e	enum:uv_poll_event
UV_READABLE_PIPE	include/uv.h	/^  UV_READABLE_PIPE  = 0x10,$/;"	e	enum:__anon30
UV_RENAME	include/uv.h	/^  UV_RENAME = 1,$/;"	e	enum:uv_fs_event
UV_REQ_FIELDS	include/uv.h	369;"	d
UV_REQ_PRIVATE_FIELDS	include/uv-unix.h	242;"	d
UV_REQ_PRIVATE_FIELDS	include/uv.h	1462;"	d
UV_REQ_TYPE_MAP	include/uv.h	/^  UV_REQ_TYPE_MAP(XX)$/;"	e	enum:__anon23
UV_REQ_TYPE_MAP	include/uv.h	162;"	d
UV_REQ_TYPE_MAX	include/uv.h	/^  UV_REQ_TYPE_MAX$/;"	e	enum:__anon23
UV_REQ_TYPE_PRIVATE	include/uv-unix.h	240;"	d
UV_REQ_TYPE_PRIVATE	include/uv.h	/^  UV_REQ_TYPE_PRIVATE$/;"	e	enum:__anon23
UV_REQ_TYPE_PRIVATE	include/uv.h	1461;"	d
UV_RUN_DEFAULT	include/uv.h	/^  UV_RUN_DEFAULT = 0,$/;"	e	enum:__anon25
UV_RUN_NOWAIT	include/uv.h	/^  UV_RUN_NOWAIT$/;"	e	enum:__anon25
UV_RUN_ONCE	include/uv.h	/^  UV_RUN_ONCE,$/;"	e	enum:__anon25
UV_SHUTDOWN_PRIVATE_FIELDS	include/uv-unix.h	257;"	d
UV_SIGNAL_PRIVATE_FIELDS	include/uv-unix.h	367;"	d
UV_SIGNAL_PRIVATE_FIELDS	include/uv.h	1475;"	d
UV_SPINLOCK_H_	uv/unix/spinlock.h	17;"	d
UV_SPINLOCK_INITIALIZER	uv/unix/spinlock.h	22;"	d
UV_SRC_HEAP_H_	uv/heap-inl.h	17;"	d
UV_STREAM_BLOCKING	uv/unix/internal.h	/^  UV_STREAM_BLOCKING      = 0x80,   \/* Synchronous writes. *\/$/;"	e	enum:__anon1
UV_STREAM_FIELDS	include/uv.h	442;"	d
UV_STREAM_PRIVATE_FIELDS	include/uv-unix.h	272;"	d
UV_STREAM_PRIVATE_FIELDS	include/uv.h	1463;"	d
UV_STREAM_PRIVATE_PLATFORM_FIELDS	include/uv-unix.h	117;"	d
UV_STREAM_READABLE	uv/unix/internal.h	/^  UV_STREAM_READABLE      = 0x20,   \/* The stream is readable *\/$/;"	e	enum:__anon1
UV_STREAM_READING	uv/unix/internal.h	/^  UV_STREAM_READING       = 0x04,   \/* uv_read_start() called. *\/$/;"	e	enum:__anon1
UV_STREAM_READ_EOF	uv/unix/internal.h	/^  UV_STREAM_READ_EOF      = 0x200,  \/* read(2) read EOF. *\/$/;"	e	enum:__anon1
UV_STREAM_READ_PARTIAL	uv/unix/internal.h	/^  UV_STREAM_READ_PARTIAL  = 0x100,  \/* read(2) read less than requested. *\/$/;"	e	enum:__anon1
UV_STREAM_SHUT	uv/unix/internal.h	/^  UV_STREAM_SHUT          = 0x10,   \/* Write side closed. *\/$/;"	e	enum:__anon1
UV_STREAM_SHUTTING	uv/unix/internal.h	/^  UV_STREAM_SHUTTING      = 0x08,   \/* uv_shutdown() called but not complete. *\/$/;"	e	enum:__anon1
UV_STREAM_WRITABLE	uv/unix/internal.h	/^  UV_STREAM_WRITABLE      = 0x40,   \/* The stream is writable *\/$/;"	e	enum:__anon1
UV_STRERROR_GEN	uv/uv-common.c	161;"	d	file:
UV_STRERROR_GEN	uv/uv-common.c	168;"	d	file:
UV_STRINGIFY	uv/version.c	24;"	d	file:
UV_STRINGIFY_HELPER	uv/version.c	25;"	d	file:
UV_SYSCALL_BASE	uv/unix/linux-syscalls.c	44;"	d	file:
UV_SYSCALL_BASE	uv/unix/linux-syscalls.c	46;"	d	file:
UV_TCP_IPV6ONLY	include/uv.h	/^  UV_TCP_IPV6ONLY = 1$/;"	e	enum:uv_tcp_flags
UV_TCP_KEEPALIVE	uv/unix/internal.h	/^  UV_TCP_KEEPALIVE        = 0x800,  \/* Turn on keep-alive. *\/$/;"	e	enum:__anon1
UV_TCP_NODELAY	uv/unix/internal.h	/^  UV_TCP_NODELAY          = 0x400,  \/* Disable Nagle. *\/$/;"	e	enum:__anon1
UV_TCP_PRIVATE_FIELDS	include/uv-unix.h	284;"	d
UV_TCP_PRIVATE_FIELDS	include/uv.h	1464;"	d
UV_TCP_SINGLE_ACCEPT	uv/unix/internal.h	/^  UV_TCP_SINGLE_ACCEPT    = 0x1000, \/* Only accept() when idle. *\/$/;"	e	enum:__anon1
UV_THREADPOOL_H_	include/uv-threadpool.h	28;"	d
UV_TIMER_PRIVATE_FIELDS	include/uv-unix.h	316;"	d
UV_TIMER_PRIVATE_FIELDS	include/uv.h	1469;"	d
UV_TREE_H_	include/tree.h	27;"	d
UV_TTY_MODE_IO	include/uv.h	/^  UV_TTY_MODE_IO$/;"	e	enum:__anon29
UV_TTY_MODE_NORMAL	include/uv.h	/^  UV_TTY_MODE_NORMAL,$/;"	e	enum:__anon29
UV_TTY_MODE_RAW	include/uv.h	/^  UV_TTY_MODE_RAW,$/;"	e	enum:__anon29
UV_TTY_PRIVATE_FIELDS	include/uv-unix.h	363;"	d
UV_UDP_IPV6ONLY	include/uv.h	/^  UV_UDP_IPV6ONLY = 1,$/;"	e	enum:uv_udp_flags
UV_UDP_PARTIAL	include/uv.h	/^  UV_UDP_PARTIAL = 2,$/;"	e	enum:uv_udp_flags
UV_UDP_PRIVATE_FIELDS	include/uv-unix.h	286;"	d
UV_UDP_PROCESSING	uv/unix/internal.h	/^  UV_UDP_PROCESSING       = 0x20000  \/* Handle is running the send callback queue. *\/$/;"	e	enum:__anon1
UV_UDP_REUSEADDR	include/uv.h	/^  UV_UDP_REUSEADDR = 4$/;"	e	enum:uv_udp_flags
UV_UDP_SEND_PRIVATE_FIELDS	include/uv-unix.h	259;"	d
UV_UNIX_H	include/uv-unix.h	23;"	d
UV_UNIX_INTERNAL_H_	uv/unix/internal.h	23;"	d
UV_UNKNOWN_HANDLE	include/uv.h	/^  UV_UNKNOWN_HANDLE = 0,$/;"	e	enum:__anon22
UV_UNKNOWN_REQ	include/uv.h	/^  UV_UNKNOWN_REQ = 0,$/;"	e	enum:__anon23
UV_UNUSED	uv/unix/atomic-ops.h	/^UV_UNUSED(static int cmpxchgi(int* ptr, int oldval, int newval)) {$/;"	f
UV_UNUSED	uv/unix/atomic-ops.h	/^UV_UNUSED(static long cmpxchgl(long* ptr, long oldval, long newval)) {$/;"	f
UV_UNUSED	uv/unix/atomic-ops.h	/^UV_UNUSED(static void cpu_relax(void)) {$/;"	f
UV_UNUSED	uv/unix/internal.h	/^UV_UNUSED(static char* uv__basename_r(const char* path)) {$/;"	f
UV_UNUSED	uv/unix/internal.h	/^UV_UNUSED(static void uv__req_init(uv_loop_t* loop,$/;"	f
UV_UNUSED	uv/unix/internal.h	/^UV_UNUSED(static void uv__update_time(uv_loop_t* loop)) {$/;"	f
UV_UNUSED	uv/unix/internal.h	85;"	d
UV_UNUSED	uv/unix/internal.h	88;"	d
UV_UNUSED	uv/unix/spinlock.h	/^UV_UNUSED(static int uv_spinlock_trylock(uv_spinlock_t* spinlock)) {$/;"	f
UV_UNUSED	uv/unix/spinlock.h	/^UV_UNUSED(static void uv_spinlock_init(uv_spinlock_t* spinlock)) {$/;"	f
UV_UNUSED	uv/unix/spinlock.h	/^UV_UNUSED(static void uv_spinlock_lock(uv_spinlock_t* spinlock)) {$/;"	f
UV_UNUSED	uv/unix/spinlock.h	/^UV_UNUSED(static void uv_spinlock_unlock(uv_spinlock_t* spinlock)) {$/;"	f
UV_VERSION_H	include/uv-version.h	23;"	d
UV_VERSION_HEX	include/uv-version.h	39;"	d
UV_VERSION_IS_RELEASE	include/uv-version.h	36;"	d
UV_VERSION_MAJOR	include/uv-version.h	33;"	d
UV_VERSION_MINOR	include/uv-version.h	34;"	d
UV_VERSION_PATCH	include/uv-version.h	35;"	d
UV_VERSION_STRING	uv/version.c	32;"	d	file:
UV_VERSION_STRING	uv/version.c	34;"	d	file:
UV_VERSION_STRING_BASE	uv/version.c	27;"	d	file:
UV_VERSION_SUFFIX	include/uv-version.h	37;"	d
UV_WORK_PRIVATE_FIELDS	include/uv-unix.h	360;"	d
UV_WORK_PRIVATE_FIELDS	include/uv.h	1473;"	d
UV_WRITABLE	include/uv.h	/^  UV_WRITABLE = 2$/;"	e	enum:uv_poll_event
UV_WRITABLE_PIPE	include/uv.h	/^  UV_WRITABLE_PIPE  = 0x20$/;"	e	enum:__anon30
UV_WRITE_PRIVATE_FIELDS	include/uv-unix.h	246;"	d
UV__CMSG_FD_COUNT	uv/unix/stream.c	1031;"	d	file:
UV__CMSG_FD_COUNT	uv/unix/stream.c	1190;"	d	file:
UV__CMSG_FD_SIZE	uv/unix/stream.c	1032;"	d	file:
UV__CMSG_FD_SIZE	uv/unix/stream.c	1191;"	d	file:
UV__DT_BLOCK	include/uv-unix.h	195;"	d
UV__DT_BLOCK	include/uv-unix.h	197;"	d
UV__DT_CHAR	include/uv-unix.h	190;"	d
UV__DT_CHAR	include/uv-unix.h	192;"	d
UV__DT_DIR	include/uv-unix.h	170;"	d
UV__DT_DIR	include/uv-unix.h	172;"	d
UV__DT_FIFO	include/uv-unix.h	180;"	d
UV__DT_FIFO	include/uv-unix.h	182;"	d
UV__DT_FILE	include/uv-unix.h	165;"	d
UV__DT_FILE	include/uv-unix.h	167;"	d
UV__DT_LINK	include/uv-unix.h	175;"	d
UV__DT_LINK	include/uv-unix.h	177;"	d
UV__DT_SOCKET	include/uv-unix.h	185;"	d
UV__DT_SOCKET	include/uv-unix.h	187;"	d
UV__E2BIG	include/uv-errno.h	49;"	d
UV__E2BIG	include/uv-errno.h	51;"	d
UV__EACCES	include/uv-errno.h	55;"	d
UV__EACCES	include/uv-errno.h	57;"	d
UV__EADDRINUSE	include/uv-errno.h	61;"	d
UV__EADDRINUSE	include/uv-errno.h	63;"	d
UV__EADDRNOTAVAIL	include/uv-errno.h	67;"	d
UV__EADDRNOTAVAIL	include/uv-errno.h	69;"	d
UV__EAFNOSUPPORT	include/uv-errno.h	73;"	d
UV__EAFNOSUPPORT	include/uv-errno.h	75;"	d
UV__EAGAIN	include/uv-errno.h	79;"	d
UV__EAGAIN	include/uv-errno.h	81;"	d
UV__EAI_ADDRFAMILY	include/uv-errno.h	30;"	d
UV__EAI_AGAIN	include/uv-errno.h	31;"	d
UV__EAI_BADFLAGS	include/uv-errno.h	32;"	d
UV__EAI_BADHINTS	include/uv-errno.h	42;"	d
UV__EAI_CANCELED	include/uv-errno.h	33;"	d
UV__EAI_FAIL	include/uv-errno.h	34;"	d
UV__EAI_FAMILY	include/uv-errno.h	35;"	d
UV__EAI_MEMORY	include/uv-errno.h	36;"	d
UV__EAI_NODATA	include/uv-errno.h	37;"	d
UV__EAI_NONAME	include/uv-errno.h	38;"	d
UV__EAI_OVERFLOW	include/uv-errno.h	39;"	d
UV__EAI_PROTOCOL	include/uv-errno.h	43;"	d
UV__EAI_SERVICE	include/uv-errno.h	40;"	d
UV__EAI_SOCKTYPE	include/uv-errno.h	41;"	d
UV__EALREADY	include/uv-errno.h	85;"	d
UV__EALREADY	include/uv-errno.h	87;"	d
UV__EBADF	include/uv-errno.h	91;"	d
UV__EBADF	include/uv-errno.h	93;"	d
UV__EBUSY	include/uv-errno.h	97;"	d
UV__EBUSY	include/uv-errno.h	99;"	d
UV__ECANCELED	include/uv-errno.h	103;"	d
UV__ECANCELED	include/uv-errno.h	105;"	d
UV__ECHARSET	include/uv-errno.h	109;"	d
UV__ECHARSET	include/uv-errno.h	111;"	d
UV__ECONNABORTED	include/uv-errno.h	115;"	d
UV__ECONNABORTED	include/uv-errno.h	117;"	d
UV__ECONNREFUSED	include/uv-errno.h	121;"	d
UV__ECONNREFUSED	include/uv-errno.h	123;"	d
UV__ECONNRESET	include/uv-errno.h	127;"	d
UV__ECONNRESET	include/uv-errno.h	129;"	d
UV__EDESTADDRREQ	include/uv-errno.h	133;"	d
UV__EDESTADDRREQ	include/uv-errno.h	135;"	d
UV__EEXIST	include/uv-errno.h	139;"	d
UV__EEXIST	include/uv-errno.h	141;"	d
UV__EFAULT	include/uv-errno.h	145;"	d
UV__EFAULT	include/uv-errno.h	147;"	d
UV__EFBIG	include/uv-errno.h	373;"	d
UV__EFBIG	include/uv-errno.h	375;"	d
UV__EFD_CLOEXEC	uv/unix/linux-syscalls.h	56;"	d
UV__EFD_NONBLOCK	uv/unix/linux-syscalls.h	57;"	d
UV__EHOSTDOWN	include/uv-errno.h	407;"	d
UV__EHOSTDOWN	include/uv-errno.h	413;"	d
UV__EHOSTDOWN	include/uv-errno.h	415;"	d
UV__EHOSTUNREACH	include/uv-errno.h	151;"	d
UV__EHOSTUNREACH	include/uv-errno.h	153;"	d
UV__EINTR	include/uv-errno.h	157;"	d
UV__EINTR	include/uv-errno.h	159;"	d
UV__EINVAL	include/uv-errno.h	163;"	d
UV__EINVAL	include/uv-errno.h	165;"	d
UV__EIO	include/uv-errno.h	169;"	d
UV__EIO	include/uv-errno.h	171;"	d
UV__EISCONN	include/uv-errno.h	175;"	d
UV__EISCONN	include/uv-errno.h	177;"	d
UV__EISDIR	include/uv-errno.h	181;"	d
UV__EISDIR	include/uv-errno.h	183;"	d
UV__ELOOP	include/uv-errno.h	187;"	d
UV__ELOOP	include/uv-errno.h	189;"	d
UV__EMFILE	include/uv-errno.h	193;"	d
UV__EMFILE	include/uv-errno.h	195;"	d
UV__EMLINK	include/uv-errno.h	397;"	d
UV__EMLINK	include/uv-errno.h	399;"	d
UV__EMSGSIZE	include/uv-errno.h	199;"	d
UV__EMSGSIZE	include/uv-errno.h	201;"	d
UV__ENAMETOOLONG	include/uv-errno.h	205;"	d
UV__ENAMETOOLONG	include/uv-errno.h	207;"	d
UV__ENETDOWN	include/uv-errno.h	211;"	d
UV__ENETDOWN	include/uv-errno.h	213;"	d
UV__ENETUNREACH	include/uv-errno.h	217;"	d
UV__ENETUNREACH	include/uv-errno.h	219;"	d
UV__ENFILE	include/uv-errno.h	223;"	d
UV__ENFILE	include/uv-errno.h	225;"	d
UV__ENOBUFS	include/uv-errno.h	229;"	d
UV__ENOBUFS	include/uv-errno.h	231;"	d
UV__ENODEV	include/uv-errno.h	235;"	d
UV__ENODEV	include/uv-errno.h	237;"	d
UV__ENOENT	include/uv-errno.h	241;"	d
UV__ENOENT	include/uv-errno.h	243;"	d
UV__ENOMEM	include/uv-errno.h	247;"	d
UV__ENOMEM	include/uv-errno.h	249;"	d
UV__ENONET	include/uv-errno.h	253;"	d
UV__ENONET	include/uv-errno.h	255;"	d
UV__ENOPROTOOPT	include/uv-errno.h	379;"	d
UV__ENOPROTOOPT	include/uv-errno.h	381;"	d
UV__ENOSPC	include/uv-errno.h	259;"	d
UV__ENOSPC	include/uv-errno.h	261;"	d
UV__ENOSYS	include/uv-errno.h	265;"	d
UV__ENOSYS	include/uv-errno.h	267;"	d
UV__ENOTCONN	include/uv-errno.h	271;"	d
UV__ENOTCONN	include/uv-errno.h	273;"	d
UV__ENOTDIR	include/uv-errno.h	277;"	d
UV__ENOTDIR	include/uv-errno.h	279;"	d
UV__ENOTEMPTY	include/uv-errno.h	283;"	d
UV__ENOTEMPTY	include/uv-errno.h	285;"	d
UV__ENOTSOCK	include/uv-errno.h	289;"	d
UV__ENOTSOCK	include/uv-errno.h	291;"	d
UV__ENOTSUP	include/uv-errno.h	295;"	d
UV__ENOTSUP	include/uv-errno.h	297;"	d
UV__ENXIO	include/uv-errno.h	391;"	d
UV__ENXIO	include/uv-errno.h	393;"	d
UV__EOF	include/uv-errno.h	27;"	d
UV__EPERM	include/uv-errno.h	301;"	d
UV__EPERM	include/uv-errno.h	303;"	d
UV__EPIPE	include/uv-errno.h	307;"	d
UV__EPIPE	include/uv-errno.h	309;"	d
UV__EPOLLERR	uv/unix/linux-syscalls.h	77;"	d
UV__EPOLLET	uv/unix/linux-syscalls.h	80;"	d
UV__EPOLLHUP	uv/unix/linux-syscalls.h	78;"	d
UV__EPOLLIN	uv/unix/linux-syscalls.h	75;"	d
UV__EPOLLONESHOT	uv/unix/linux-syscalls.h	79;"	d
UV__EPOLLOUT	uv/unix/linux-syscalls.h	76;"	d
UV__EPOLL_CLOEXEC	uv/unix/linux-syscalls.h	70;"	d
UV__EPOLL_CTL_ADD	uv/unix/linux-syscalls.h	71;"	d
UV__EPOLL_CTL_DEL	uv/unix/linux-syscalls.h	72;"	d
UV__EPOLL_CTL_MOD	uv/unix/linux-syscalls.h	73;"	d
UV__EPROTO	include/uv-errno.h	313;"	d
UV__EPROTO	include/uv-errno.h	315;"	d
UV__EPROTONOSUPPORT	include/uv-errno.h	319;"	d
UV__EPROTONOSUPPORT	include/uv-errno.h	321;"	d
UV__EPROTOTYPE	include/uv-errno.h	325;"	d
UV__EPROTOTYPE	include/uv-errno.h	327;"	d
UV__ERANGE	include/uv-errno.h	385;"	d
UV__ERANGE	include/uv-errno.h	387;"	d
UV__EROFS	include/uv-errno.h	331;"	d
UV__EROFS	include/uv-errno.h	333;"	d
UV__ESHUTDOWN	include/uv-errno.h	337;"	d
UV__ESHUTDOWN	include/uv-errno.h	339;"	d
UV__ESPIPE	include/uv-errno.h	343;"	d
UV__ESPIPE	include/uv-errno.h	345;"	d
UV__ESRCH	include/uv-errno.h	349;"	d
UV__ESRCH	include/uv-errno.h	351;"	d
UV__ETIMEDOUT	include/uv-errno.h	355;"	d
UV__ETIMEDOUT	include/uv-errno.h	357;"	d
UV__ETXTBSY	include/uv-errno.h	361;"	d
UV__ETXTBSY	include/uv-errno.h	363;"	d
UV__EXDEV	include/uv-errno.h	367;"	d
UV__EXDEV	include/uv-errno.h	369;"	d
UV__FSEVENTS_PROCESS	uv/unix/fsevents.c	153;"	d	file:
UV__F_NONBLOCK	uv/unix/internal.h	257;"	d
UV__F_NONBLOCK	uv/unix/internal.h	259;"	d
UV__HANDLE_ACTIVE	uv/uv-common.h	/^  UV__HANDLE_ACTIVE   = 0x4000,$/;"	e	enum:__anon7
UV__HANDLE_ACTIVE	uv/uv-common.h	65;"	d
UV__HANDLE_CLOSING	uv/uv-common.h	/^  UV__HANDLE_CLOSING  = 0 \/* no-op on unix *\/$/;"	e	enum:__anon7
UV__HANDLE_CLOSING	uv/uv-common.h	67;"	d
UV__HANDLE_INTERNAL	uv/uv-common.h	/^  UV__HANDLE_INTERNAL = 0x8000,$/;"	e	enum:__anon7
UV__HANDLE_INTERNAL	uv/uv-common.h	64;"	d
UV__HANDLE_REF	uv/uv-common.h	/^  UV__HANDLE_REF      = 0x2000,$/;"	e	enum:__anon7
UV__HANDLE_REF	uv/uv-common.h	66;"	d
UV__INET6_ADDRSTRLEN	uv/inet.c	31;"	d	file:
UV__INET_ADDRSTRLEN	uv/inet.c	30;"	d	file:
UV__IN_ACCESS	uv/unix/linux-syscalls.h	83;"	d
UV__IN_ATTRIB	uv/unix/linux-syscalls.h	85;"	d
UV__IN_CLOEXEC	uv/unix/linux-syscalls.h	59;"	d
UV__IN_CLOSE_NOWRITE	uv/unix/linux-syscalls.h	87;"	d
UV__IN_CLOSE_WRITE	uv/unix/linux-syscalls.h	86;"	d
UV__IN_CREATE	uv/unix/linux-syscalls.h	91;"	d
UV__IN_DELETE	uv/unix/linux-syscalls.h	92;"	d
UV__IN_DELETE_SELF	uv/unix/linux-syscalls.h	93;"	d
UV__IN_MODIFY	uv/unix/linux-syscalls.h	84;"	d
UV__IN_MOVED_FROM	uv/unix/linux-syscalls.h	89;"	d
UV__IN_MOVED_TO	uv/unix/linux-syscalls.h	90;"	d
UV__IN_MOVE_SELF	uv/unix/linux-syscalls.h	94;"	d
UV__IN_NONBLOCK	uv/unix/linux-syscalls.h	60;"	d
UV__IN_OPEN	uv/unix/linux-syscalls.h	88;"	d
UV__O_CLOEXEC	uv/unix/core.c	63;"	d	file:
UV__O_CLOEXEC	uv/unix/linux-syscalls.h	35;"	d
UV__O_CLOEXEC	uv/unix/linux-syscalls.h	37;"	d
UV__O_CLOEXEC	uv/unix/linux-syscalls.h	39;"	d
UV__O_CLOEXEC	uv/unix/linux-syscalls.h	41;"	d
UV__O_NONBLOCK	uv/unix/linux-syscalls.h	45;"	d
UV__O_NONBLOCK	uv/unix/linux-syscalls.h	47;"	d
UV__O_NONBLOCK	uv/unix/linux-syscalls.h	49;"	d
UV__O_NONBLOCK	uv/unix/linux-syscalls.h	51;"	d
UV__O_NONBLOCK	uv/unix/linux-syscalls.h	53;"	d
UV__POLLERR	uv/unix/internal.h	101;"	d
UV__POLLERR	uv/unix/internal.h	114;"	d
UV__POLLERR	uv/unix/internal.h	94;"	d
UV__POLLHUP	uv/unix/internal.h	102;"	d
UV__POLLHUP	uv/unix/internal.h	118;"	d
UV__POLLHUP	uv/unix/internal.h	95;"	d
UV__POLLIN	uv/unix/internal.h	106;"	d
UV__POLLIN	uv/unix/internal.h	92;"	d
UV__POLLIN	uv/unix/internal.h	99;"	d
UV__POLLOUT	uv/unix/internal.h	100;"	d
UV__POLLOUT	uv/unix/internal.h	110;"	d
UV__POLLOUT	uv/unix/internal.h	93;"	d
UV__SOCK_CLOEXEC	uv/unix/core.c	67;"	d	file:
UV__SOCK_CLOEXEC	uv/unix/linux-syscalls.h	62;"	d
UV__SOCK_NONBLOCK	uv/unix/core.c	66;"	d	file:
UV__SOCK_NONBLOCK	uv/unix/linux-syscalls.h	64;"	d
UV__SOCK_NONBLOCK	uv/unix/linux-syscalls.h	66;"	d
UV__UNKNOWN	include/uv-errno.h	28;"	d
UV__UNUSED	include/tree.h	31;"	d
UV__UNUSED	include/tree.h	33;"	d
V	uv/unix/fsevents.c	532;"	d	file:
V	uv/unix/fsevents.c	559;"	d	file:
X	uv/unix/fs.c	880;"	d	file:
X	uv/unix/fs.c	916;"	d	file:
X	uv/uv-common.c	373;"	d	file:
X	uv/uv-common.c	375;"	d	file:
XX	include/uv.h	1435;"	d
XX	include/uv.h	1443;"	d
XX	include/uv.h	174;"	d
XX	include/uv.h	176;"	d
XX	include/uv.h	182;"	d
XX	include/uv.h	184;"	d
XX	include/uv.h	191;"	d
XX	include/uv.h	193;"	d
XX	uv/uv-common.c	106;"	d	file:
XX	uv/uv-common.c	124;"	d	file:
_FILE_OFFSET_BITS	uv/unix/sunos.c	53;"	d	file:
_FILE_OFFSET_BITS	uv/unix/sunos.c	61;"	d	file:
_GNU_SOURCE	uv/unix/getaddrinfo.c	25;"	d	file:
_GNU_SOURCE	uv/unix/linux-syscalls.h	25;"	d
_GNU_SOURCE	uv/unix/linux-syscalls.h	26;"	d
_NANOLAT_C_CALLSTACK_H_	c-callstack.h	2;"	d
__NR_accept4	uv/unix/linux-syscalls.c	52;"	d	file:
__NR_accept4	uv/unix/linux-syscalls.c	56;"	d	file:
__NR_dup3	uv/unix/linux-syscalls.c	232;"	d	file:
__NR_dup3	uv/unix/linux-syscalls.c	234;"	d	file:
__NR_dup3	uv/unix/linux-syscalls.c	236;"	d	file:
__NR_epoll_create	uv/unix/linux-syscalls.c	82;"	d	file:
__NR_epoll_create	uv/unix/linux-syscalls.c	84;"	d	file:
__NR_epoll_create	uv/unix/linux-syscalls.c	86;"	d	file:
__NR_epoll_create1	uv/unix/linux-syscalls.c	92;"	d	file:
__NR_epoll_create1	uv/unix/linux-syscalls.c	94;"	d	file:
__NR_epoll_create1	uv/unix/linux-syscalls.c	96;"	d	file:
__NR_epoll_ctl	uv/unix/linux-syscalls.c	102;"	d	file:
__NR_epoll_ctl	uv/unix/linux-syscalls.c	104;"	d	file:
__NR_epoll_ctl	uv/unix/linux-syscalls.c	106;"	d	file:
__NR_epoll_pwait	uv/unix/linux-syscalls.c	122;"	d	file:
__NR_epoll_pwait	uv/unix/linux-syscalls.c	124;"	d	file:
__NR_epoll_pwait	uv/unix/linux-syscalls.c	126;"	d	file:
__NR_epoll_wait	uv/unix/linux-syscalls.c	112;"	d	file:
__NR_epoll_wait	uv/unix/linux-syscalls.c	114;"	d	file:
__NR_epoll_wait	uv/unix/linux-syscalls.c	116;"	d	file:
__NR_eventfd	uv/unix/linux-syscalls.c	62;"	d	file:
__NR_eventfd	uv/unix/linux-syscalls.c	64;"	d	file:
__NR_eventfd	uv/unix/linux-syscalls.c	66;"	d	file:
__NR_eventfd2	uv/unix/linux-syscalls.c	72;"	d	file:
__NR_eventfd2	uv/unix/linux-syscalls.c	74;"	d	file:
__NR_eventfd2	uv/unix/linux-syscalls.c	76;"	d	file:
__NR_inotify_add_watch	uv/unix/linux-syscalls.c	152;"	d	file:
__NR_inotify_add_watch	uv/unix/linux-syscalls.c	154;"	d	file:
__NR_inotify_add_watch	uv/unix/linux-syscalls.c	156;"	d	file:
__NR_inotify_init	uv/unix/linux-syscalls.c	132;"	d	file:
__NR_inotify_init	uv/unix/linux-syscalls.c	134;"	d	file:
__NR_inotify_init	uv/unix/linux-syscalls.c	136;"	d	file:
__NR_inotify_init1	uv/unix/linux-syscalls.c	142;"	d	file:
__NR_inotify_init1	uv/unix/linux-syscalls.c	144;"	d	file:
__NR_inotify_init1	uv/unix/linux-syscalls.c	146;"	d	file:
__NR_inotify_rm_watch	uv/unix/linux-syscalls.c	162;"	d	file:
__NR_inotify_rm_watch	uv/unix/linux-syscalls.c	164;"	d	file:
__NR_inotify_rm_watch	uv/unix/linux-syscalls.c	166;"	d	file:
__NR_pipe2	uv/unix/linux-syscalls.c	172;"	d	file:
__NR_pipe2	uv/unix/linux-syscalls.c	174;"	d	file:
__NR_pipe2	uv/unix/linux-syscalls.c	176;"	d	file:
__NR_preadv	uv/unix/linux-syscalls.c	212;"	d	file:
__NR_preadv	uv/unix/linux-syscalls.c	214;"	d	file:
__NR_preadv	uv/unix/linux-syscalls.c	216;"	d	file:
__NR_pwritev	uv/unix/linux-syscalls.c	222;"	d	file:
__NR_pwritev	uv/unix/linux-syscalls.c	224;"	d	file:
__NR_pwritev	uv/unix/linux-syscalls.c	226;"	d	file:
__NR_recvmmsg	uv/unix/linux-syscalls.c	182;"	d	file:
__NR_recvmmsg	uv/unix/linux-syscalls.c	184;"	d	file:
__NR_recvmmsg	uv/unix/linux-syscalls.c	186;"	d	file:
__NR_sendmmsg	uv/unix/linux-syscalls.c	192;"	d	file:
__NR_sendmmsg	uv/unix/linux-syscalls.c	194;"	d	file:
__NR_sendmmsg	uv/unix/linux-syscalls.c	196;"	d	file:
__NR_socketcall	uv/unix/linux-syscalls.c	38;"	d	file:
__NR_utimensat	uv/unix/linux-syscalls.c	202;"	d	file:
__NR_utimensat	uv/unix/linux-syscalls.c	204;"	d	file:
__NR_utimensat	uv/unix/linux-syscalls.c	206;"	d	file:
__sync_val_compare_and_swap	uv/unix/atomic-ops.h	23;"	d
_buffersize	include/b64/decode.h	/^		int _buffersize;$/;"	m	struct:base64::decoder
_buffersize	include/b64/encode.h	/^		int _buffersize;$/;"	m	struct:base64::encoder
_getprogname	main.c	/^const char *_getprogname(void) {$/;"	f
_state	include/b64/decode.h	/^		base64_decodestate _state;$/;"	m	struct:base64::decoder
_state	include/b64/encode.h	/^		base64_encodestate _state;$/;"	m	struct:base64::encoder
active_handles	include/uv.h	/^  unsigned int active_handles;$/;"	m	struct:uv_loop_s
active_reqs	include/uv.h	/^  void* active_reqs[2];$/;"	m	struct:uv_loop_s
addToEnd	uv/unix/android-ifaddrs.c	/^static void addToEnd(struct ifaddrs **p_resultList, struct ifaddrs *p_entry)$/;"	f	file:
addr	defs.h	/^    struct sockaddr addr;$/;"	m	union:__anon42::__anon44	typeref:struct:__anon42::__anon44::sockaddr
addr4	defs.h	/^    struct sockaddr_in addr4;$/;"	m	union:__anon42::__anon44	typeref:struct:__anon42::__anon44::sockaddr_in
addr6	defs.h	/^    struct sockaddr_in6 addr6;$/;"	m	union:__anon42::__anon44	typeref:struct:__anon42::__anon44::sockaddr_in6
address	include/uv.h	/^  } address;$/;"	m	struct:uv_interface_address_s	typeref:union:uv_interface_address_s::__anon32
address4	include/uv.h	/^    struct sockaddr_in address4;$/;"	m	union:uv_interface_address_s::__anon32	typeref:struct:uv_interface_address_s::__anon32::sockaddr_in
address6	include/uv.h	/^    struct sockaddr_in6 address6;$/;"	m	union:uv_interface_address_s::__anon32	typeref:struct:uv_interface_address_s::__anon32::sockaddr_in6
addrinfo_req	defs.h	/^    uv_getaddrinfo_t addrinfo_req;$/;"	m	union:__anon42::__anon44
after_work_cb	include/uv.h	/^  uv_after_work_cb after_work_cb;$/;"	m	struct:uv_work_s
arg	uv/unix/thread.c	/^  void* arg;$/;"	m	struct:thread_ctx	file:
arg0	s5.h	/^  uint32_t arg0;  \/* Scratch space for the state machine. *\/$/;"	m	struct:__anon14
arg1	s5.h	/^  uint32_t arg1;  \/* Scratch space for the state machine. *\/$/;"	m	struct:__anon14
args	include/uv.h	/^  char** args;$/;"	m	struct:uv_process_options_s
args_mem	uv/unix/proctitle.c	/^static void* args_mem;$/;"	v	file:
async	uv/unix/stream.c	/^  uv_async_t async;$/;"	m	struct:uv__stream_select_s	file:
async_sem	uv/unix/stream.c	/^  uv_sem_t async_sem;$/;"	m	struct:uv__stream_select_s	file:
atyp	s5.h	/^  uint8_t atyp;$/;"	m	struct:__anon14
base	include/uv-unix.h	/^  char* base;$/;"	m	struct:uv_buf_t
base64	include/b64/decode.h	/^namespace base64$/;"	n
base64	include/b64/encode.h	/^namespace base64$/;"	n
base64_decode_block	b64/cdecode.c	/^int base64_decode_block(const char* code_in, const int length_in, char* plaintext_out, base64_decodestate* state_in)$/;"	f
base64_decode_value	b64/cdecode.c	/^int base64_decode_value(char value_in)$/;"	f
base64_decodestate	include/b64/cdecode.h	/^} base64_decodestate;$/;"	t	typeref:struct:__anon20
base64_decodestep	include/b64/cdecode.h	/^} base64_decodestep;$/;"	t	typeref:enum:__anon19
base64_encode_block	b64/cencode.c	/^int base64_encode_block(const char* plaintext_in, int length_in, char* code_out, base64_encodestate* state_in)$/;"	f
base64_encode_blockend	b64/cencode.c	/^int base64_encode_blockend(char* code_out, base64_encodestate* state_in)$/;"	f
base64_encode_value	b64/cencode.c	/^char base64_encode_value(char value_in)$/;"	f
base64_encodestate	include/b64/cencode.h	/^} base64_encodestate;$/;"	t	typeref:struct:__anon18
base64_encodestep	include/b64/cencode.h	/^} base64_encodestep;$/;"	t	typeref:enum:__anon17
base64_init_decodestate	b64/cdecode.c	/^void base64_init_decodestate(base64_decodestate* state_in)$/;"	f
base64_init_encodestate	b64/cencode.c	/^void base64_init_encodestate(base64_encodestate* state_in)$/;"	f
bind_host	defs.h	/^  const char *bind_host;$/;"	m	struct:__anon40
bind_port	defs.h	/^  unsigned short bind_port;$/;"	m	struct:__anon40
buf	defs.h	/^    char buf[2048];  \/* Scratch space. Used to read data into. *\/$/;"	m	union:__anon42::__anon44
busy_polling	uv/fs-poll.c	/^  int busy_polling;$/;"	m	struct:poll_ctx	file:
c_busy	client.c	/^  c_busy,  \/* Busy; waiting for incoming data or for a write to complete. *\/$/;"	e	enum:conn_state	file:
c_dead	client.c	/^  c_dead$/;"	e	enum:conn_state	file:
c_done	client.c	/^  c_done,  \/* Done; read incoming data or write finished. *\/$/;"	e	enum:conn_state	file:
c_stop	client.c	/^  c_stop,  \/* Stopped. *\/$/;"	e	enum:conn_state	file:
calcAddrLen	uv/unix/android-ifaddrs.c	/^static size_t calcAddrLen(sa_family_t p_family, int p_dataSize)$/;"	f	file:
can_access	server.c	/^int can_access(const server_ctx *sx,$/;"	f
can_auth_none	server.c	/^int can_auth_none(const server_ctx *sx, const client_ctx *cx) {$/;"	f
can_auth_passwd	server.c	/^int can_auth_passwd(const server_ctx *sx, const client_ctx *cx) {$/;"	f
cb	include/uv-unix.h	/^  uv__async_cb cb;$/;"	m	struct:uv__async
cb	include/uv-unix.h	/^  uv__io_cb cb;$/;"	m	struct:uv__io_s
cb	include/uv.h	/^  uv_connect_cb cb;$/;"	m	struct:uv_connect_s
cb	include/uv.h	/^  uv_fs_cb cb;$/;"	m	struct:uv_fs_s
cb	include/uv.h	/^  uv_shutdown_cb cb;$/;"	m	struct:uv_shutdown_s
cb	include/uv.h	/^  uv_udp_send_cb cb;$/;"	m	struct:uv_udp_send_s
cb	include/uv.h	/^  uv_write_cb cb;$/;"	m	struct:uv_write_s
client	defs.h	/^  struct client_ctx *client;  \/* Backlink to owning client context. *\/$/;"	m	struct:__anon42	typeref:struct:__anon42::client_ctx
client_ctx	defs.h	/^typedef struct client_ctx {$/;"	s
client_ctx	defs.h	/^} client_ctx;$/;"	t	typeref:struct:client_ctx
client_finish_init	client.c	/^void client_finish_init(server_ctx *sx, client_ctx *cx) {$/;"	f
close_sem	uv/unix/stream.c	/^  uv_sem_t close_sem;$/;"	m	struct:uv__stream_select_s	file:
cmd	s5.h	/^  uint8_t cmd;$/;"	m	struct:__anon14
compare_watchers	uv/unix/linux-inotify.c	/^static int compare_watchers(const struct watcher_list* a,$/;"	f	file:
cond	uv/threadpool.c	/^static uv_cond_t cond;$/;"	v	file:
config	server.c	/^  server_config config;$/;"	m	struct:__anon15	file:
conn	defs.h	/^} conn;$/;"	t	typeref:struct:__anon42
conn_alloc	client.c	/^static void conn_alloc(uv_handle_t *handle, size_t size, uv_buf_t *buf) {$/;"	f	file:
conn_close	client.c	/^static void conn_close(conn *c) {$/;"	f	file:
conn_close_done	client.c	/^static void conn_close_done(uv_handle_t *handle) {$/;"	f	file:
conn_closed	client.c	/^int conn_closed(conn *c) {$/;"	f
conn_connect	client.c	/^static int conn_connect(conn *c) {$/;"	f	file:
conn_connect_done	client.c	/^static void conn_connect_done(uv_connect_t *req, int status) {$/;"	f	file:
conn_cycle	client.c	/^static int conn_cycle(const char *who, conn *a, conn *b) {$/;"	f	file:
conn_getaddrinfo	client.c	/^static void conn_getaddrinfo(conn *c, const char *hostname) {$/;"	f	file:
conn_getaddrinfo_done	client.c	/^static void conn_getaddrinfo_done(uv_getaddrinfo_t *req,$/;"	f	file:
conn_read	client.c	/^static void conn_read(conn *c) {$/;"	f	file:
conn_read_done	client.c	/^static void conn_read_done(uv_stream_t *handle,$/;"	f	file:
conn_state	client.c	/^enum conn_state {$/;"	g	file:
conn_timer_expire	client.c	/^static void conn_timer_expire(uv_timer_t *handle) { \/\/, int status) {$/;"	f	file:
conn_timer_reset	client.c	/^static void conn_timer_reset(conn *c) {$/;"	f	file:
conn_write	client.c	/^static void conn_write(conn *c, const void *data, unsigned int len) {$/;"	f	file:
conn_write_done	client.c	/^static void conn_write_done(uv_write_t *req, int status) {$/;"	f	file:
connect_req	defs.h	/^    uv_connect_t connect_req;$/;"	m	union:__anon42::__anon44
container_of	uv/uv-common.h	50;"	d
cookie	uv/unix/linux-syscalls.h	/^  uint32_t cookie;$/;"	m	struct:uv__inotify_event
count	include/uv-unix.h	/^  unsigned int count;$/;"	m	struct:__anon38
cpu_times	include/uv.h	/^  } cpu_times;$/;"	m	struct:uv_cpu_info_s	typeref:struct:uv_cpu_info_s::uv_cpu_times_s
cwd	include/uv.h	/^  const char* cwd;$/;"	m	struct:uv_process_options_s
daddr	s5.h	/^  uint8_t daddr[257];  \/* TODO(bnoordhuis) Merge with username\/password. *\/$/;"	m	struct:__anon14
data	include/uv.h	/^  void* data;$/;"	m	struct:uv_loop_s
data	include/uv.h	/^  } data;$/;"	m	struct:uv_stdio_container_s	typeref:union:uv_stdio_container_s::__anon31
data	uv/unix/linux-syscalls.h	/^  uint64_t data;$/;"	m	struct:uv__epoll_event
decode	b64/b64.c	/^char* decode(const char* input)$/;"	f
decode	include/b64/decode.h	/^		int decode(char value_in)$/;"	f	struct:base64::decoder
decode	include/b64/decode.h	/^		int decode(const char* code_in, const int length_in, char* plaintext_out)$/;"	f	struct:base64::decoder
decode	include/b64/decode.h	/^		void decode(std::istream& istream_in, std::ostream& ostream_in)$/;"	f	struct:base64::decoder
decoder	include/b64/decode.h	/^		decoder(int buffersize_in = BUFFERSIZE)$/;"	f	struct:base64::decoder
decoder	include/b64/decode.h	/^	struct decoder$/;"	s	namespace:base64
default_loop_ptr	uv/uv-common.c	/^static uv_loop_t* default_loop_ptr;$/;"	v	file:
default_loop_struct	uv/uv-common.c	/^static uv_loop_t default_loop_struct;$/;"	v	file:
default_threads	uv/threadpool.c	/^static uv_thread_t default_threads[4];$/;"	v	file:
do_almost_dead	client.c	/^static int do_almost_dead(client_ctx *cx) {$/;"	f	file:
do_bind	server.c	/^static void do_bind(uv_getaddrinfo_t *req, int status, struct addrinfo *addrs) {$/;"	f	file:
do_handshake	client.c	/^static int do_handshake(client_ctx *cx) {$/;"	f	file:
do_handshake_auth	client.c	/^static int do_handshake_auth(client_ctx *cx) {$/;"	f	file:
do_kill	client.c	/^static int do_kill(client_ctx *cx) {$/;"	f	file:
do_next	client.c	/^static void do_next(client_ctx *cx) {$/;"	f	file:
do_proxy	client.c	/^static int do_proxy(client_ctx *cx) {$/;"	f	file:
do_proxy_start	client.c	/^static int do_proxy_start(client_ctx *cx) {$/;"	f	file:
do_req_connect	client.c	/^static int do_req_connect(client_ctx *cx) {$/;"	f	file:
do_req_connect_start	client.c	/^static int do_req_connect_start(client_ctx *cx) {$/;"	f	file:
do_req_lookup	client.c	/^static int do_req_lookup(client_ctx *cx) {$/;"	f	file:
do_req_parse	client.c	/^static int do_req_parse(client_ctx *cx) {$/;"	f	file:
do_req_start	client.c	/^static int do_req_start(client_ctx *cx) {$/;"	f	file:
done	include/uv-threadpool.h	/^  void (*done)(struct uv__work *w, int status);$/;"	m	struct:uv__work
dport	s5.h	/^  uint16_t dport;$/;"	m	struct:__anon14
encode	b64/b64.c	/^char* encode(const char* input)$/;"	f
encode	include/b64/encode.h	/^		int encode(char value_in)$/;"	f	struct:base64::encoder
encode	include/b64/encode.h	/^		int encode(const char* code_in, const int length_in, char* plaintext_out)$/;"	f	struct:base64::encoder
encode	include/b64/encode.h	/^		void encode(std::istream& istream_in, std::ostream& ostream_in)$/;"	f	struct:base64::encoder
encode_end	include/b64/encode.h	/^		int encode_end(char* plaintext_out)$/;"	f	struct:base64::encoder
encoder	include/b64/encode.h	/^		encoder(int buffersize_in = BUFFERSIZE)$/;"	f	struct:base64::encoder
encoder	include/b64/encode.h	/^	struct encoder$/;"	s	namespace:base64
entry	uv/unix/thread.c	/^  void (*entry)(void* arg);$/;"	m	struct:thread_ctx	file:
env	include/uv.h	/^  char** env;$/;"	m	struct:uv_process_options_s
environ	uv/unix/process.c	38;"	d	file:
errmsg	include/uv-unix.h	/^  char* errmsg;$/;"	m	struct:__anon39
events	include/uv-unix.h	/^  unsigned int events;  \/* Current event mask. *\/$/;"	m	struct:uv__io_s
events	uv/unix/fsevents.c	/^  int events;$/;"	m	struct:uv__fsevents_event_s	file:
events	uv/unix/linux-syscalls.h	/^  uint32_t events;$/;"	m	struct:uv__epoll_event
events	uv/unix/stream.c	/^  int events;$/;"	m	struct:uv__stream_select_s	file:
exit_cb	include/uv.h	/^  uv_exit_cb exit_cb; \/* Called after the process exits. *\/$/;"	m	struct:uv_process_options_s
exit_cb	include/uv.h	/^  uv_exit_cb exit_cb;$/;"	m	struct:uv_process_s
exit_message	uv/threadpool.c	/^static QUEUE exit_message;$/;"	v	file:
fake_fd	uv/unix/stream.c	/^  int fake_fd;$/;"	m	struct:uv__stream_select_s	file:
fd	include/uv-unix.h	/^  int fd;$/;"	m	struct:uv__io_s
fd	include/uv.h	/^    int fd;$/;"	m	union:uv_stdio_container_s::__anon31
fd	uv/unix/stream.c	/^  int fd;$/;"	m	struct:uv__stream_select_s	file:
fds	uv/unix/internal.h	/^  int fds[1];$/;"	m	struct:uv__stream_queued_fds_s
file	include/uv.h	/^  const char* file;   \/* Path to program to execute. *\/$/;"	m	struct:uv_process_options_s
findInterface	uv/unix/android-ifaddrs.c	/^static struct ifaddrs *findInterface(int p_index, struct ifaddrs **p_links, int p_numLinks)$/;"	f	file:
find_watcher	uv/unix/linux-inotify.c	/^static struct watcher_list* find_watcher(uv_loop_t* loop, int wd) {$/;"	f	file:
flags	include/uv.h	/^  unsigned int flags;$/;"	m	struct:uv_process_options_s
flags	include/uv.h	/^  uv_stdio_flags flags;$/;"	m	struct:uv_stdio_container_s
freeResultList	uv/unix/android-ifaddrs.c	/^static void freeResultList(NetlinkList *p_list)$/;"	f	file:
freeifaddrs	uv/unix/android-ifaddrs.c	/^void freeifaddrs(struct ifaddrs *ifa)$/;"	f
fs_req	uv/fs-poll.c	/^  uv_fs_t fs_req; \/* TODO(bnoordhuis) mark fs_req internal *\/$/;"	m	struct:poll_ctx	file:
fs_type	include/uv.h	/^  uv_fs_type fs_type;$/;"	m	struct:uv_fs_s
fsevent_handle_count	uv/unix/fsevents.c	/^  unsigned int fsevent_handle_count;$/;"	m	struct:uv__cf_loop_state_s	file:
fsevent_handles	uv/unix/fsevents.c	/^  void* fsevent_handles[2];$/;"	m	struct:uv__cf_loop_state_s	file:
fsevent_mutex	uv/unix/fsevents.c	/^  uv_mutex_t fsevent_mutex;$/;"	m	struct:uv__cf_loop_state_s	file:
fsevent_need_reschedule	uv/unix/fsevents.c	/^  int fsevent_need_reschedule;$/;"	m	struct:uv__cf_loop_state_s	file:
fsevent_sem	uv/unix/fsevents.c	/^  uv_sem_t fsevent_sem;$/;"	m	struct:uv__cf_loop_state_s	file:
fsevent_stream	uv/unix/fsevents.c	/^  FSEventStreamRef fsevent_stream;$/;"	m	struct:uv__cf_loop_state_s	file:
getNetlinkResponse	uv/unix/android-ifaddrs.c	/^static struct nlmsghdr *getNetlinkResponse(int p_socket, int *p_size, int *p_done)$/;"	f	file:
getResultList	uv/unix/android-ifaddrs.c	/^static NetlinkList *getResultList(int p_socket, int p_request)$/;"	f	file:
get_bind_ip	client.c	/^int get_bind_ip(client_ctx *cx, char *bind_ip, int len) {$/;"	f
getaddrinfo_req	server.c	/^  uv_getaddrinfo_t getaddrinfo_req;$/;"	m	struct:__anon15	file:
getifaddrs	uv/unix/android-ifaddrs.c	/^int getifaddrs(struct ifaddrs **ifap)$/;"	f
gid	include/uv.h	/^  uv_gid_t gid;$/;"	m	struct:uv_process_options_s
handle	defs.h	/^    uv_handle_t handle;$/;"	m	union:__anon42::__anon43
handle	defs.h	/^  } handle;$/;"	m	struct:__anon42	typeref:union:__anon42::__anon43
handle	include/uv-unix.h	/^  void* handle;$/;"	m	struct:__anon39
handle	include/uv.h	/^  uv_stream_t* handle;$/;"	m	struct:uv_connect_s
handle	include/uv.h	/^  uv_stream_t* handle;$/;"	m	struct:uv_shutdown_s
handle	include/uv.h	/^  uv_stream_t* handle;$/;"	m	struct:uv_write_s
handle	include/uv.h	/^  uv_udp_t* handle;$/;"	m	struct:uv_udp_send_s
handle	uv/unix/fsevents.c	/^  uv_fs_event_t* handle;$/;"	m	struct:uv__cf_loop_signal_s	file:
handle	uv/unix/signal.c	/^  uv_signal_t* handle;$/;"	m	struct:__anon5	file:
handle_queue	include/uv.h	/^  void* handle_queue[2];$/;"	m	struct:uv_loop_s
heap	uv/heap-inl.h	/^struct heap {$/;"	s
heap_compare_fn	uv/heap-inl.h	/^typedef int (*heap_compare_fn)(const struct heap_node* a,$/;"	t
heap_node	uv/heap-inl.h	/^struct heap_node {$/;"	s
heap_node_swap	uv/heap-inl.h	/^static void heap_node_swap(struct heap* heap,$/;"	f
idle	include/uv.h	/^    uint64_t idle;$/;"	m	struct:uv_cpu_info_s::uv_cpu_times_s
idle_threads	uv/threadpool.c	/^static unsigned int idle_threads;$/;"	v	file:
idle_timeout	defs.h	/^  unsigned int idle_timeout;  \/* Connection idle timeout in ms. *\/$/;"	m	struct:__anon41
idle_timeout	defs.h	/^  unsigned int idle_timeout;$/;"	m	struct:__anon40
idle_timeout	defs.h	/^  unsigned int idle_timeout;$/;"	m	struct:__anon42
incoming	defs.h	/^  conn incoming;  \/* Connection with the SOCKS client. *\/$/;"	m	struct:client_ctx
inet_ntop4	uv/inet.c	/^static int inet_ntop4(const unsigned char *src, char *dst, size_t size) {$/;"	f	file:
inet_ntop6	uv/inet.c	/^static int inet_ntop6(const unsigned char *src, char *dst, size_t size) {$/;"	f	file:
inet_pton4	uv/inet.c	/^static int inet_pton4(const char *src, unsigned char *dst) {$/;"	f	file:
inet_pton6	uv/inet.c	/^static int inet_pton6(const char *src, unsigned char *dst) {$/;"	f	file:
init_inotify	uv/unix/linux-inotify.c	/^static int init_inotify(uv_loop_t* loop) {$/;"	f	file:
init_once	uv/threadpool.c	/^static void init_once(void) {$/;"	f	file:
initialized	uv/threadpool.c	/^static volatile int initialized;$/;"	v	file:
inline	uv/unix/internal.h	33;"	d
int_fd	uv/unix/stream.c	/^  int int_fd;$/;"	m	struct:uv__stream_select_s	file:
interpretAddr	uv/unix/android-ifaddrs.c	/^static int interpretAddr(struct nlmsghdr *p_hdr, struct ifaddrs **p_resultList, int p_numLinks)$/;"	f	file:
interpretAddrs	uv/unix/android-ifaddrs.c	/^static int interpretAddrs(int p_socket, NetlinkList *p_netlinkList, struct ifaddrs **p_resultList, int p_numLinks)$/;"	f	file:
interpretLink	uv/unix/android-ifaddrs.c	/^static int interpretLink(struct nlmsghdr *p_hdr, struct ifaddrs **p_resultList)$/;"	f	file:
interpretLinks	uv/unix/android-ifaddrs.c	/^static int interpretLinks(int p_socket, NetlinkList *p_netlinkList, struct ifaddrs **p_resultList)$/;"	f	file:
interval	uv/fs-poll.c	/^  unsigned int interval;$/;"	m	struct:poll_ctx	file:
io_watcher	include/uv-unix.h	/^  uv__io_t io_watcher;$/;"	m	struct:uv__async
ipc	include/uv.h	/^  int ipc; \/* non-zero if this pipe is used for passing handles *\/$/;"	m	struct:uv_pipe_s
irq	include/uv.h	/^    uint64_t irq;$/;"	m	struct:uv_cpu_info_s::uv_cpu_times_s
is_internal	include/uv.h	/^  int is_internal;$/;"	m	struct:uv_interface_address_s
iterating	uv/unix/linux-inotify.c	/^  int iterating;$/;"	m	struct:watcher_list	file:
kFSEventStreamCreateFlagFileEvents	uv/unix/internal.h	/^static const int kFSEventStreamCreateFlagFileEvents = 0x00000010;$/;"	v
kFSEventStreamEventFlagItemChangeOwner	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemChangeOwner = 0x00004000;$/;"	v
kFSEventStreamEventFlagItemCreated	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemCreated = 0x00000100;$/;"	v
kFSEventStreamEventFlagItemFinderInfoMod	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemFinderInfoMod = 0x00002000;$/;"	v
kFSEventStreamEventFlagItemInodeMetaMod	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemInodeMetaMod = 0x00000400;$/;"	v
kFSEventStreamEventFlagItemIsDir	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemIsDir = 0x00020000;$/;"	v
kFSEventStreamEventFlagItemIsFile	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemIsFile = 0x00010000;$/;"	v
kFSEventStreamEventFlagItemIsSymlink	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemIsSymlink = 0x00040000;$/;"	v
kFSEventStreamEventFlagItemModified	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemModified = 0x00001000;$/;"	v
kFSEventStreamEventFlagItemRemoved	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemRemoved = 0x00000200;$/;"	v
kFSEventStreamEventFlagItemRenamed	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemRenamed = 0x00000800;$/;"	v
kFSEventStreamEventFlagItemXattrMod	uv/unix/internal.h	/^static const int kFSEventStreamEventFlagItemXattrMod = 0x00008000;$/;"	v
kFSEventsModified	uv/unix/fsevents.c	54;"	d	file:
kFSEventsRenamed	uv/unix/fsevents.c	60;"	d	file:
kFSEventsSystem	uv/unix/fsevents.c	64;"	d	file:
kUVCFLoopSignalClosing	uv/unix/fsevents.c	/^  kUVCFLoopSignalClosing$/;"	e	enum:uv__cf_loop_signal_type_e	file:
kUVCFLoopSignalRegular	uv/unix/fsevents.c	/^  kUVCFLoopSignalRegular,$/;"	e	enum:uv__cf_loop_signal_type_e	file:
left	uv/heap-inl.h	/^  struct heap_node* left;$/;"	m	struct:heap_node	typeref:struct:heap_node::heap_node
len	include/uv-unix.h	/^  size_t len;$/;"	m	struct:uv_buf_t
len	uv/unix/linux-syscalls.h	/^  uint32_t len;$/;"	m	struct:uv__inotify_event
len	uv/unix/proctitle.c	/^  size_t len;$/;"	m	struct:__anon4	file:
local_calloc	uv/uv-common.c	/^  uv_calloc_func local_calloc;$/;"	m	struct:__anon8	file:
local_free	uv/uv-common.c	/^  uv_free_func local_free;$/;"	m	struct:__anon8	file:
local_malloc	uv/uv-common.c	/^  uv_malloc_func local_malloc;$/;"	m	struct:__anon8	file:
local_realloc	uv/uv-common.c	/^  uv_realloc_func local_realloc;$/;"	m	struct:__anon8	file:
lock	uv/unix/spinlock.h	/^  int lock;$/;"	m	struct:__anon6
loop	defs.h	/^  uv_loop_t *loop;$/;"	m	struct:__anon41
loop	include/uv-threadpool.h	/^  struct uv_loop_s* loop;$/;"	m	struct:uv__work	typeref:struct:uv__work::uv_loop_s
loop	include/uv.h	/^  uv_loop_t* loop;$/;"	m	struct:uv_fs_s
loop	include/uv.h	/^  uv_loop_t* loop;$/;"	m	struct:uv_getaddrinfo_s
loop	include/uv.h	/^  uv_loop_t* loop;$/;"	m	struct:uv_getnameinfo_s
loop	include/uv.h	/^  uv_loop_t* loop;$/;"	m	struct:uv_work_s
loop	server.c	/^  uv_loop_t *loop;$/;"	m	struct:__anon15	file:
loop	uv/fs-poll.c	/^  uv_loop_t* loop;$/;"	m	struct:poll_ctx	file:
loop	uv/unix/fsevents.c	/^  CFRunLoopRef loop;$/;"	m	struct:uv__cf_loop_state_s	file:
m_data	uv/unix/android-ifaddrs.c	/^    struct nlmsghdr *m_data;$/;"	m	struct:NetlinkList	typeref:struct:NetlinkList::nlmsghdr	file:
m_next	uv/unix/android-ifaddrs.c	/^    struct NetlinkList *m_next;$/;"	m	struct:NetlinkList	typeref:struct:NetlinkList::NetlinkList	file:
m_size	uv/unix/android-ifaddrs.c	/^    unsigned int m_size;$/;"	m	struct:NetlinkList	file:
main	main.c	/^int main(int argc, char **argv) {$/;"	f
main	test.c	/^int main() {$/;"	f
main	test_b64.c	/^int main()$/;"	f
makeSockaddr	uv/unix/android-ifaddrs.c	/^static void makeSockaddr(sa_family_t p_family, struct sockaddr *p_dest, void *p_data, size_t p_size)$/;"	f	file:
mask	uv/unix/linux-syscalls.h	/^  uint32_t mask;$/;"	m	struct:uv__inotify_event
maxSize	uv/unix/android-ifaddrs.c	/^static size_t maxSize(size_t a, size_t b)$/;"	f	file:
maybe_free_watcher_list	uv/unix/linux-inotify.c	/^static void maybe_free_watcher_list(struct watcher_list* w, uv_loop_t* loop) {$/;"	f	file:
maybe_new_socket	uv/unix/tcp.c	/^static int maybe_new_socket(uv_tcp_t* handle, int domain, int flags) {$/;"	f	file:
maybe_new_socket_ex	uv/unix/tcp.c	/^int maybe_new_socket_ex(uv_tcp_t* handle, int domain, int flags) {$/;"	f
maybe_resize	uv/unix/core.c	/^static void maybe_resize(uv_loop_t* loop, unsigned int len) {$/;"	f	file:
member	uv/unix/fsevents.c	/^  QUEUE member;$/;"	m	struct:uv__cf_loop_signal_s	file:
member	uv/unix/fsevents.c	/^  QUEUE member;$/;"	m	struct:uv__fsevents_event_s	file:
methods	s5.h	/^  uint8_t methods;$/;"	m	struct:__anon14
min	uv/heap-inl.h	/^  struct heap_node* min;$/;"	m	struct:heap	typeref:struct:heap::heap_node
model	include/uv.h	/^  char* model;$/;"	m	struct:uv_cpu_info_s
msg_hdr	uv/unix/linux-syscalls.h	/^  struct msghdr msg_hdr;$/;"	m	struct:uv__mmsghdr	typeref:struct:uv__mmsghdr::msghdr
msg_len	uv/unix/linux-syscalls.h	/^  unsigned int msg_len;$/;"	m	struct:uv__mmsghdr
mutex	include/uv-unix.h	/^  uv_mutex_t mutex;$/;"	m	struct:__anon38
mutex	uv/threadpool.c	/^static uv_mutex_t mutex;$/;"	v	file:
n	include/uv-unix.h	/^  unsigned int n;$/;"	m	struct:__anon38
name	include/uv.h	/^  char* name;$/;"	m	struct:uv_interface_address_s
name	include/uv.h	/^  const char* name;$/;"	m	struct:uv_dirent_s
nelts	uv/heap-inl.h	/^  unsigned int nelts;$/;"	m	struct:heap
netlink_recv	uv/unix/android-ifaddrs.c	/^static int netlink_recv(int p_socket, void *p_buffer, size_t p_len)$/;"	f	file:
netlink_send	uv/unix/android-ifaddrs.c	/^static int netlink_send(int p_socket, int p_request)$/;"	f	file:
netlink_socket	uv/unix/android-ifaddrs.c	/^static int netlink_socket(void)$/;"	f	file:
netmask	include/uv.h	/^  } netmask;$/;"	m	struct:uv_interface_address_s	typeref:union:uv_interface_address_s::__anon33
netmask4	include/uv.h	/^    struct sockaddr_in netmask4;$/;"	m	union:uv_interface_address_s::__anon33	typeref:struct:uv_interface_address_s::__anon33::sockaddr_in
netmask6	include/uv.h	/^    struct sockaddr_in6 netmask6;$/;"	m	union:uv_interface_address_s::__anon33	typeref:struct:uv_interface_address_s::__anon33::sockaddr_in6
newListItem	uv/unix/android-ifaddrs.c	/^static NetlinkList *newListItem(struct nlmsghdr *p_data, unsigned int p_size)$/;"	f	file:
new_inotify_fd	uv/unix/linux-inotify.c	/^static int new_inotify_fd(void) {$/;"	f	file:
next_power_of_two	uv/unix/core.c	/^static unsigned int next_power_of_two(unsigned int val) {$/;"	f	file:
nice	include/uv.h	/^    uint64_t nice;$/;"	m	struct:uv_cpu_info_s::uv_cpu_times_s
nthreads	uv/threadpool.c	/^static unsigned int nthreads;$/;"	v	file:
offset	uv/unix/internal.h	/^  unsigned int offset;$/;"	m	struct:uv__stream_queued_fds_s
offsetof	uv/unix/core.c	/^STATIC_ASSERT(offsetof(uv_buf_t, base) == offsetof(struct iovec, iov_base));$/;"	v
offsetof	uv/unix/core.c	/^STATIC_ASSERT(offsetof(uv_buf_t, len) == offsetof(struct iovec, iov_len));$/;"	v
on_connection	server.c	/^static void on_connection(uv_stream_t *server, int status) {$/;"	f	file:
once	uv/threadpool.c	/^static uv_once_t once = UV_ONCE_INIT;$/;"	v	file:
orig_termios	uv/unix/tty.c	/^static struct termios orig_termios;$/;"	v	typeref:struct:termios	file:
orig_termios_fd	uv/unix/tty.c	/^static int orig_termios_fd = -1;$/;"	v	file:
outgoing	defs.h	/^  conn outgoing;  \/* Connection with upstream. *\/$/;"	m	struct:client_ctx
pCFArrayCreate	uv/unix/fsevents.c	/^static CFArrayRef (*pCFArrayCreate)(CFAllocatorRef,$/;"	v	file:
pCFRelease	uv/unix/fsevents.c	/^static void (*pCFRelease)(CFTypeRef);$/;"	v	file:
pCFRunLoopAddSource	uv/unix/fsevents.c	/^static void (*pCFRunLoopAddSource)(CFRunLoopRef,$/;"	v	file:
pCFRunLoopGetCurrent	uv/unix/fsevents.c	/^static CFRunLoopRef (*pCFRunLoopGetCurrent)(void);$/;"	v	file:
pCFRunLoopRemoveSource	uv/unix/fsevents.c	/^static void (*pCFRunLoopRemoveSource)(CFRunLoopRef,$/;"	v	file:
pCFRunLoopRun	uv/unix/fsevents.c	/^static void (*pCFRunLoopRun)(void);$/;"	v	file:
pCFRunLoopSourceCreate	uv/unix/fsevents.c	/^static CFRunLoopSourceRef (*pCFRunLoopSourceCreate)(CFAllocatorRef,$/;"	v	file:
pCFRunLoopSourceSignal	uv/unix/fsevents.c	/^static void (*pCFRunLoopSourceSignal)(CFRunLoopSourceRef);$/;"	v	file:
pCFRunLoopStop	uv/unix/fsevents.c	/^static void (*pCFRunLoopStop)(CFRunLoopRef);$/;"	v	file:
pCFRunLoopWakeUp	uv/unix/fsevents.c	/^static void (*pCFRunLoopWakeUp)(CFRunLoopRef);$/;"	v	file:
pCFStringCreateWithFileSystemRepresentation	uv/unix/fsevents.c	/^static CFStringRef (*pCFStringCreateWithFileSystemRepresentation)($/;"	v	file:
pCFStringGetSystemEncoding	uv/unix/fsevents.c	/^static CFStringEncoding (*pCFStringGetSystemEncoding)(void);$/;"	v	file:
pFSEventStreamCreate	uv/unix/fsevents.c	/^static FSEventStreamRef (*pFSEventStreamCreate)(CFAllocatorRef,$/;"	v	file:
pFSEventStreamFlushSync	uv/unix/fsevents.c	/^static void (*pFSEventStreamFlushSync)(FSEventStreamRef);$/;"	v	file:
pFSEventStreamInvalidate	uv/unix/fsevents.c	/^static void (*pFSEventStreamInvalidate)(FSEventStreamRef);$/;"	v	file:
pFSEventStreamRelease	uv/unix/fsevents.c	/^static void (*pFSEventStreamRelease)(FSEventStreamRef);$/;"	v	file:
pFSEventStreamScheduleWithRunLoop	uv/unix/fsevents.c	/^static void (*pFSEventStreamScheduleWithRunLoop)(FSEventStreamRef,$/;"	v	file:
pFSEventStreamStart	uv/unix/fsevents.c	/^static Boolean (*pFSEventStreamStart)(FSEventStreamRef);$/;"	v	file:
pFSEventStreamStop	uv/unix/fsevents.c	/^static void (*pFSEventStreamStop)(FSEventStreamRef);$/;"	v	file:
parent	uv/heap-inl.h	/^  struct heap_node* parent;$/;"	m	struct:heap_node	typeref:struct:heap_node::heap_node
parent_handle	uv/fs-poll.c	/^  uv_fs_poll_t* parent_handle; \/* NULL if parent has been stopped or closed *\/$/;"	m	struct:poll_ctx	file:
parse_opts	main.c	/^static void parse_opts(server_config *cf, int argc, char **argv) {$/;"	f	file:
parser	defs.h	/^  s5_ctx parser;  \/* The SOCKS protocol parser. *\/$/;"	m	struct:client_ctx
passlen	s5.h	/^  uint8_t passlen;$/;"	m	struct:__anon14
password	s5.h	/^  uint8_t password[257];$/;"	m	struct:__anon14
path	include/uv.h	/^  char* path;$/;"	m	struct:uv_fs_event_s
path	include/uv.h	/^  const char* path;$/;"	m	struct:uv_fs_s
path	uv/fs-poll.c	/^  char path[1]; \/* variable length *\/$/;"	m	struct:poll_ctx	file:
path	uv/unix/fsevents.c	/^  char path[1];$/;"	m	struct:uv__fsevents_event_s	file:
path	uv/unix/linux-inotify.c	/^  char* path;$/;"	m	struct:watcher_list	file:
pending_queue	include/uv-unix.h	/^  void* pending_queue[2];$/;"	m	struct:uv__io_s
pevents	include/uv-unix.h	/^  unsigned int pevents; \/* Pending event mask i.e. mask at next tick. *\/$/;"	m	struct:uv__io_s
phys_addr	include/uv.h	/^  char phys_addr[6];$/;"	m	struct:uv_interface_address_s
pid	include/uv.h	/^  int pid;$/;"	m	struct:uv_process_s
pkCFRunLoopDefaultMode	uv/unix/fsevents.c	/^static CFStringRef (*pkCFRunLoopDefaultMode);$/;"	v	file:
plainchar	include/b64/cdecode.h	/^	char plainchar;$/;"	m	struct:__anon20
poll_cb	include/uv.h	/^  uv_poll_cb poll_cb;$/;"	m	struct:uv_poll_s
poll_cb	uv/fs-poll.c	/^  uv_fs_poll_cb poll_cb;$/;"	m	struct:poll_ctx	file:
poll_cb	uv/fs-poll.c	/^static void poll_cb(uv_fs_t* req) {$/;"	f	file:
poll_ctx	include/uv.h	/^  void* poll_ctx;$/;"	m	struct:uv_fs_poll_s
poll_ctx	uv/fs-poll.c	/^struct poll_ctx {$/;"	s	file:
post	uv/threadpool.c	/^static void post(QUEUE* q) {$/;"	f	file:
pr_do	util.c	/^static void pr_do(FILE *stream,$/;"	f	file:
pr_err	util.c	/^void pr_err(const char *fmt, ...) {$/;"	f
pr_err_f	util.c	/^void pr_err_f(const char *fmt, ...) {$/;"	f
pr_info	util.c	/^void pr_info(const char *fmt, ...) {$/;"	f
pr_warn	util.c	/^void pr_warn(const char *fmt, ...) {$/;"	f
print_stack	sutil.c	/^print_stack(void)$/;"	f
process_title	uv/unix/freebsd.c	/^static char *process_title;$/;"	v	file:
process_title	uv/unix/netbsd.c	/^static char *process_title;$/;"	v	file:
process_title	uv/unix/openbsd.c	/^static char *process_title;$/;"	v	file:
process_title	uv/unix/proctitle.c	/^} process_title;$/;"	v	typeref:struct:__anon4	file:
progname	main.c	/^static const char *progname = __FILE__;  \/* Reset in main(). *\/$/;"	v	file:
pthread_barrier_destroy	uv/unix/pthread-fixes.c	/^int pthread_barrier_destroy(pthread_barrier_t *barrier) {$/;"	f
pthread_barrier_init	uv/unix/pthread-fixes.c	/^int pthread_barrier_init(pthread_barrier_t* barrier,$/;"	f
pthread_barrier_wait	uv/unix/pthread-fixes.c	/^int pthread_barrier_wait(pthread_barrier_t* barrier) {$/;"	f
pthread_yield	uv/unix/pthread-fixes.c	/^int pthread_yield(void) {$/;"	f
ptr	include/uv.h	/^  void* ptr;$/;"	m	struct:uv_fs_s
rbh_root	uv/unix/linux-inotify.c	/^  struct watcher_list* rbh_root;$/;"	m	struct:watcher_root	typeref:struct:watcher_root::watcher_list	file:
rdstate	defs.h	/^  unsigned char rdstate;$/;"	m	struct:__anon42
read_cpufreq	uv/unix/linux-core.c	/^static unsigned long read_cpufreq(unsigned int cpunum) {$/;"	f	file:
read_models	uv/unix/linux-core.c	/^static int read_models(unsigned int numcpus, uv_cpu_info_t* ci) {$/;"	f	file:
read_speeds	uv/unix/linux-core.c	/^static void read_speeds(unsigned int numcpus, uv_cpu_info_t* ci) {$/;"	f	file:
read_times	uv/unix/linux-core.c	/^static int read_times(unsigned int numcpus, uv_cpu_info_t* ci) {$/;"	f	file:
req	defs.h	/^    uv_req_t req;$/;"	m	union:__anon42::__anon44
reqevents	uv/unix/internal.h	46;"	d
result	defs.h	/^  ssize_t result;$/;"	m	struct:__anon42
result	include/b64/cencode.h	/^	char result;$/;"	m	struct:__anon18
result	include/uv.h	/^  ssize_t result;$/;"	m	struct:uv_fs_s
right	uv/heap-inl.h	/^  struct heap_node* right;$/;"	m	struct:heap_node	typeref:struct:heap_node::heap_node
rtnevents	uv/unix/internal.h	47;"	d
ru_idrss	include/uv.h	/^   uint64_t ru_idrss;     \/* integral unshared data size *\/$/;"	m	struct:__anon36
ru_inblock	include/uv.h	/^   uint64_t ru_inblock;   \/* block input operations *\/$/;"	m	struct:__anon36
ru_isrss	include/uv.h	/^   uint64_t ru_isrss;     \/* integral unshared stack size *\/$/;"	m	struct:__anon36
ru_ixrss	include/uv.h	/^   uint64_t ru_ixrss;     \/* integral shared memory size *\/$/;"	m	struct:__anon36
ru_majflt	include/uv.h	/^   uint64_t ru_majflt;    \/* page faults (hard page faults) *\/$/;"	m	struct:__anon36
ru_maxrss	include/uv.h	/^   uint64_t ru_maxrss;    \/* maximum resident set size *\/$/;"	m	struct:__anon36
ru_minflt	include/uv.h	/^   uint64_t ru_minflt;    \/* page reclaims (soft page faults) *\/$/;"	m	struct:__anon36
ru_msgrcv	include/uv.h	/^   uint64_t ru_msgrcv;    \/* IPC messages received *\/$/;"	m	struct:__anon36
ru_msgsnd	include/uv.h	/^   uint64_t ru_msgsnd;    \/* IPC messages sent *\/$/;"	m	struct:__anon36
ru_nivcsw	include/uv.h	/^   uint64_t ru_nivcsw;    \/* involuntary context switches *\/$/;"	m	struct:__anon36
ru_nsignals	include/uv.h	/^   uint64_t ru_nsignals;  \/* signals received *\/$/;"	m	struct:__anon36
ru_nswap	include/uv.h	/^   uint64_t ru_nswap;     \/* swaps *\/$/;"	m	struct:__anon36
ru_nvcsw	include/uv.h	/^   uint64_t ru_nvcsw;     \/* voluntary context switches *\/$/;"	m	struct:__anon36
ru_oublock	include/uv.h	/^   uint64_t ru_oublock;   \/* block output operations *\/$/;"	m	struct:__anon36
ru_stime	include/uv.h	/^   uv_timeval_t ru_stime; \/* system CPU time used *\/$/;"	m	struct:__anon36
ru_utime	include/uv.h	/^   uv_timeval_t ru_utime; \/* user CPU time used *\/$/;"	m	struct:__anon36
s5_atyp	s5.h	/^} s5_atyp;$/;"	t	typeref:enum:__anon12
s5_atyp_host	s5.h	/^  s5_atyp_host$/;"	e	enum:__anon12
s5_atyp_ipv4	s5.h	/^  s5_atyp_ipv4,$/;"	e	enum:__anon12
s5_atyp_ipv6	s5.h	/^  s5_atyp_ipv6,$/;"	e	enum:__anon12
s5_auth_allow	s5.h	/^  s5_auth_allow,$/;"	e	enum:__anon11
s5_auth_deny	s5.h	/^  s5_auth_deny$/;"	e	enum:__anon11
s5_auth_method	s5.h	/^} s5_auth_method;$/;"	t	typeref:enum:__anon10
s5_auth_methods	s5.c	/^unsigned int s5_auth_methods(const s5_ctx *cx) {$/;"	f
s5_auth_pw_passlen	s5.c	/^  s5_auth_pw_passlen,$/;"	e	enum:__anon16	file:
s5_auth_pw_password	s5.c	/^  s5_auth_pw_password,$/;"	e	enum:__anon16	file:
s5_auth_pw_userlen	s5.c	/^  s5_auth_pw_userlen,$/;"	e	enum:__anon16	file:
s5_auth_pw_username	s5.c	/^  s5_auth_pw_username,$/;"	e	enum:__anon16	file:
s5_auth_pw_version	s5.c	/^  s5_auth_pw_version,$/;"	e	enum:__anon16	file:
s5_auth_result	s5.h	/^} s5_auth_result;$/;"	t	typeref:enum:__anon11
s5_cmd	s5.h	/^} s5_cmd;$/;"	t	typeref:enum:__anon13
s5_cmd_tcp_bind	s5.h	/^  s5_cmd_tcp_bind,$/;"	e	enum:__anon13
s5_cmd_tcp_connect	s5.h	/^  s5_cmd_tcp_connect,$/;"	e	enum:__anon13
s5_cmd_udp_assoc	s5.h	/^  s5_cmd_udp_assoc$/;"	e	enum:__anon13
s5_ctx	s5.h	/^} s5_ctx;$/;"	t	typeref:struct:__anon14
s5_dead	s5.c	/^  s5_dead$/;"	e	enum:__anon16	file:
s5_err	s5.h	/^} s5_err;$/;"	t	typeref:enum:__anon9
s5_init	s5.c	/^void s5_init(s5_ctx *cx) {$/;"	f
s5_max_errors	s5.h	/^  s5_max_errors$/;"	e	enum:__anon9
s5_methods	s5.c	/^  s5_methods,$/;"	e	enum:__anon16	file:
s5_nmethods	s5.c	/^  s5_nmethods,$/;"	e	enum:__anon16	file:
s5_parse	s5.c	/^s5_err s5_parse(s5_ctx *cx, uint8_t **data, size_t *size) {$/;"	f
s5_req_atyp	s5.c	/^  s5_req_atyp,$/;"	e	enum:__anon16	file:
s5_req_atyp_host	s5.c	/^  s5_req_atyp_host,$/;"	e	enum:__anon16	file:
s5_req_cmd	s5.c	/^  s5_req_cmd,$/;"	e	enum:__anon16	file:
s5_req_daddr	s5.c	/^  s5_req_daddr,$/;"	e	enum:__anon16	file:
s5_req_dport0	s5.c	/^  s5_req_dport0,$/;"	e	enum:__anon16	file:
s5_req_dport1	s5.c	/^  s5_req_dport1,$/;"	e	enum:__anon16	file:
s5_req_reserved	s5.c	/^  s5_req_reserved,$/;"	e	enum:__anon16	file:
s5_req_version	s5.c	/^  s5_req_version,$/;"	e	enum:__anon16	file:
s5_select_auth	s5.c	/^int s5_select_auth(s5_ctx *cx, s5_auth_method method) {$/;"	f
s5_status	s5.c	/^char *s5_status[] = {$/;"	v
s5_strerror	s5.c	/^const char *s5_strerror(s5_err err) {$/;"	f
s5_version	s5.c	/^  s5_version,$/;"	e	enum:__anon16	file:
s_almost_dead_0	client.c	/^  s_almost_dead_0,    \/* Waiting for finalizers to complete. *\/$/;"	e	enum:sess_state	file:
s_almost_dead_1	client.c	/^  s_almost_dead_1,    \/* Waiting for finalizers to complete. *\/$/;"	e	enum:sess_state	file:
s_almost_dead_2	client.c	/^  s_almost_dead_2,    \/* Waiting for finalizers to complete. *\/$/;"	e	enum:sess_state	file:
s_almost_dead_3	client.c	/^  s_almost_dead_3,    \/* Waiting for finalizers to complete. *\/$/;"	e	enum:sess_state	file:
s_almost_dead_4	client.c	/^  s_almost_dead_4,    \/* Waiting for finalizers to complete. *\/$/;"	e	enum:sess_state	file:
s_dead	client.c	/^  s_dead              \/* Dead. Safe to free now. *\/$/;"	e	enum:sess_state	file:
s_handshake	client.c	/^  s_handshake,        \/* Wait for client handshake. *\/$/;"	e	enum:sess_state	file:
s_handshake_auth	client.c	/^  s_handshake_auth,   \/* Wait for client authentication data. *\/$/;"	e	enum:sess_state	file:
s_kill	client.c	/^  s_kill,             \/* Tear down session. *\/$/;"	e	enum:sess_state	file:
s_proxy	client.c	/^  s_proxy,            \/* Connected. Pipe data back and forth. *\/$/;"	e	enum:sess_state	file:
s_proxy_start	client.c	/^  s_proxy_start,      \/* Connected. Start piping data. *\/$/;"	e	enum:sess_state	file:
s_req_connect	client.c	/^  s_req_connect,      \/* Wait for uv_tcp_connect() to complete. *\/$/;"	e	enum:sess_state	file:
s_req_lookup	client.c	/^  s_req_lookup,       \/* Wait for upstream hostname DNS lookup to complete. *\/$/;"	e	enum:sess_state	file:
s_req_parse	client.c	/^  s_req_parse,        \/* Wait for request data. *\/$/;"	e	enum:sess_state	file:
s_req_start	client.c	/^  s_req_start,        \/* Start waiting for request data. *\/$/;"	e	enum:sess_state	file:
send_handle	include/uv.h	/^  uv_stream_t* send_handle;$/;"	m	struct:uv_write_s
send_queue_count	include/uv.h	/^  size_t send_queue_count;$/;"	m	struct:uv_udp_s
send_queue_size	include/uv.h	/^  size_t send_queue_size;$/;"	m	struct:uv_udp_s
server_config	defs.h	/^} server_config;$/;"	t	typeref:struct:__anon40
server_ctx	defs.h	/^} server_ctx;$/;"	t	typeref:struct:__anon41
server_run	server.c	/^int server_run(const server_config *cf, uv_loop_t *loop) {$/;"	f
server_state	server.c	/^} server_state;$/;"	t	typeref:struct:__anon15	file:
servers	server.c	/^  server_ctx *servers;$/;"	m	struct:__anon15	file:
sess_state	client.c	/^enum sess_state {$/;"	g	file:
signal_cb	include/uv.h	/^  uv_signal_cb signal_cb;$/;"	m	struct:uv_signal_s
signal_source	uv/unix/fsevents.c	/^  CFRunLoopSourceRef signal_source;$/;"	m	struct:uv__cf_loop_state_s	file:
signum	include/uv.h	/^  int signum;$/;"	m	struct:uv_signal_s
signum	uv/unix/signal.c	/^  int signum;$/;"	m	struct:__anon5	file:
size	uv/unix/internal.h	/^  unsigned int size;$/;"	m	struct:uv__stream_queued_fds_s
sizeof	uv/unix/core.c	/^STATIC_ASSERT(sizeof(uv_buf_t) == sizeof(struct iovec));$/;"	v
speed	include/uv.h	/^  int speed;$/;"	m	struct:uv_cpu_info_s
sread	uv/unix/stream.c	/^  fd_set* sread;$/;"	m	struct:uv__stream_select_s	file:
sread_sz	uv/unix/stream.c	/^  size_t sread_sz;$/;"	m	struct:uv__stream_select_s	file:
st_atim	include/uv.h	/^  uv_timespec_t st_atim;$/;"	m	struct:__anon27
st_birthtim	include/uv.h	/^  uv_timespec_t st_birthtim;$/;"	m	struct:__anon27
st_blksize	include/uv.h	/^  uint64_t st_blksize;$/;"	m	struct:__anon27
st_blocks	include/uv.h	/^  uint64_t st_blocks;$/;"	m	struct:__anon27
st_ctim	include/uv.h	/^  uv_timespec_t st_ctim;$/;"	m	struct:__anon27
st_dev	include/uv.h	/^  uint64_t st_dev;$/;"	m	struct:__anon27
st_flags	include/uv.h	/^  uint64_t st_flags;$/;"	m	struct:__anon27
st_gen	include/uv.h	/^  uint64_t st_gen;$/;"	m	struct:__anon27
st_gid	include/uv.h	/^  uint64_t st_gid;$/;"	m	struct:__anon27
st_ino	include/uv.h	/^  uint64_t st_ino;$/;"	m	struct:__anon27
st_mode	include/uv.h	/^  uint64_t st_mode;$/;"	m	struct:__anon27
st_mtim	include/uv.h	/^  uv_timespec_t st_mtim;$/;"	m	struct:__anon27
st_nlink	include/uv.h	/^  uint64_t st_nlink;$/;"	m	struct:__anon27
st_rdev	include/uv.h	/^  uint64_t st_rdev;$/;"	m	struct:__anon27
st_size	include/uv.h	/^  uint64_t st_size;$/;"	m	struct:__anon27
st_uid	include/uv.h	/^  uint64_t st_uid;$/;"	m	struct:__anon27
start_time	uv/fs-poll.c	/^  uint64_t start_time;$/;"	m	struct:poll_ctx	file:
statbuf	include/uv.h	/^  uv_stat_t statbuf;  \/* Stores the result of uv_fs_stat() and uv_fs_fstat(). *\/$/;"	m	struct:uv_fs_s
statbuf	uv/fs-poll.c	/^  uv_stat_t statbuf;$/;"	m	struct:poll_ctx	file:
statbuf_eq	uv/fs-poll.c	/^static int statbuf_eq(const uv_stat_t* a, const uv_stat_t* b) {$/;"	f	file:
state	defs.h	/^  unsigned int state;$/;"	m	struct:client_ctx
state	s5.h	/^  uint8_t state;$/;"	m	struct:__anon14
stdio	include/uv.h	/^  uv_stdio_container_t* stdio;$/;"	m	struct:uv_process_options_s
stdio_count	include/uv.h	/^  int stdio_count;$/;"	m	struct:uv_process_options_s
step	include/b64/cdecode.h	/^	base64_decodestep step;$/;"	m	struct:__anon20
step	include/b64/cencode.h	/^	base64_encodestep step;$/;"	m	struct:__anon18
step_A	include/b64/cencode.h	/^	step_A, step_B, step_C$/;"	e	enum:__anon17
step_B	include/b64/cencode.h	/^	step_A, step_B, step_C$/;"	e	enum:__anon17
step_C	include/b64/cencode.h	/^	step_A, step_B, step_C$/;"	e	enum:__anon17
step_a	include/b64/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon19
step_b	include/b64/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon19
step_c	include/b64/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon19
step_d	include/b64/cdecode.h	/^	step_a, step_b, step_c, step_d$/;"	e	enum:__anon19
stepcount	include/b64/cencode.h	/^	int stepcount;$/;"	m	struct:__anon18
stop_flag	include/uv.h	/^  unsigned int stop_flag;$/;"	m	struct:uv_loop_s
str	uv/unix/proctitle.c	/^  char* str;$/;"	m	struct:__anon4	file:
stream	defs.h	/^    uv_stream_t stream;$/;"	m	union:__anon42::__anon43
stream	include/uv.h	/^    uv_stream_t* stream;$/;"	m	union:uv_stdio_container_s::__anon31
stream	uv/unix/stream.c	/^  uv_stream_t* stream;$/;"	m	struct:uv__stream_select_s	file:
swrite	uv/unix/stream.c	/^  fd_set* swrite;$/;"	m	struct:uv__stream_select_s	file:
swrite_sz	uv/unix/stream.c	/^  size_t swrite_sz;$/;"	m	struct:uv__stream_select_s	file:
sx	defs.h	/^  server_ctx *sx;  \/* Backlink to owning server context. *\/$/;"	m	struct:client_ctx
sys	include/uv.h	/^    uint64_t sys;$/;"	m	struct:uv_cpu_info_s::uv_cpu_times_s
t	defs.h	/^  } t;$/;"	m	struct:__anon42	typeref:union:__anon42::__anon44
tcp	defs.h	/^    uv_tcp_t tcp;$/;"	m	union:__anon42::__anon43
tcp_handle	defs.h	/^  uv_tcp_t tcp_handle;$/;"	m	struct:__anon41
termios_spinlock	uv/unix/tty.c	/^static uv_spinlock_t termios_spinlock = UV_SPINLOCK_INITIALIZER;$/;"	v	file:
thread	uv/unix/stream.c	/^  uv_thread_t thread;$/;"	m	struct:uv__stream_select_s	file:
thread_ctx	uv/unix/thread.c	/^struct thread_ctx {$/;"	s	file:
threads	uv/threadpool.c	/^static uv_thread_t* threads;$/;"	v	file:
timer_cb	uv/fs-poll.c	/^static void timer_cb(uv_timer_t* timer) {$/;"	f	file:
timer_close_cb	uv/fs-poll.c	/^static void timer_close_cb(uv_handle_t* handle) {$/;"	f	file:
timer_handle	defs.h	/^  uv_timer_t timer_handle;  \/* For detecting timeouts. *\/$/;"	m	struct:__anon42
timer_handle	uv/fs-poll.c	/^  uv_timer_t timer_handle;$/;"	m	struct:poll_ctx	file:
timer_less_than	uv/unix/timer.c	/^static int timer_less_than(const struct heap_node* ha,$/;"	f	file:
turnstile1	include/uv-unix.h	/^  uv_sem_t turnstile1;$/;"	m	struct:__anon38
turnstile2	include/uv-unix.h	/^  uv_sem_t turnstile2;$/;"	m	struct:__anon38
tv_nsec	include/uv.h	/^  long tv_nsec;$/;"	m	struct:__anon26
tv_sec	include/uv.h	/^  long tv_sec;$/;"	m	struct:__anon26
tv_sec	include/uv.h	/^  long tv_sec;$/;"	m	struct:__anon35
tv_usec	include/uv.h	/^  long tv_usec;$/;"	m	struct:__anon35
type	include/uv.h	/^  uv_dirent_type_t type;$/;"	m	struct:uv_dirent_s
type	uv/unix/fsevents.c	/^  uv__cf_loop_signal_type_t type;$/;"	m	struct:uv__cf_loop_signal_s	file:
udp	defs.h	/^    uv_udp_t udp;$/;"	m	union:__anon42::__anon43
uid	include/uv.h	/^  uv_uid_t uid;$/;"	m	struct:uv_process_options_s
usage	main.c	/^static void usage(void) {$/;"	f	file:
user	include/uv.h	/^    uint64_t user;$/;"	m	struct:uv_cpu_info_s::uv_cpu_times_s
userlen	s5.h	/^  uint8_t userlen;$/;"	m	struct:__anon14
username	s5.h	/^  uint8_t username[257];$/;"	m	struct:__anon14
uv___stream_fd	uv/unix/stream.c	/^int uv___stream_fd(const uv_stream_t* handle) {$/;"	f
uv__accept	uv/unix/core.c	/^int uv__accept(int sockfd) {$/;"	f
uv__accept4	uv/unix/core.c	65;"	d	file:
uv__accept4	uv/unix/linux-syscalls.c	/^int uv__accept4(int fd, struct sockaddr* addr, socklen_t* addrlen, int flags) {$/;"	f
uv__active_handle_add	uv/uv-common.h	145;"	d
uv__active_handle_rm	uv/uv-common.h	151;"	d
uv__ahafs_event	uv/unix/aix.c	/^static void uv__ahafs_event(uv_loop_t* loop, uv__io_t* event_watch, unsigned int fflags) {$/;"	f	file:
uv__allocator	uv/uv-common.c	/^static uv__allocator_t uv__allocator = {$/;"	v	file:
uv__allocator_t	uv/uv-common.c	/^} uv__allocator_t;$/;"	t	typeref:struct:__anon8	file:
uv__async	include/uv-unix.h	/^struct uv__async {$/;"	s
uv__async_cb	include/uv-unix.h	/^typedef void (*uv__async_cb)(struct uv_loop_s* loop,$/;"	t
uv__async_close	uv/unix/async.c	/^void uv__async_close(uv_async_t* handle) {$/;"	f
uv__async_event	uv/unix/async.c	/^static void uv__async_event(uv_loop_t* loop,$/;"	f	file:
uv__async_eventfd	uv/unix/async.c	/^static int uv__async_eventfd() {$/;"	f	file:
uv__async_init	uv/unix/async.c	/^void uv__async_init(struct uv__async* wa) {$/;"	f
uv__async_io	uv/unix/async.c	/^static void uv__async_io(uv_loop_t* loop, uv__io_t* w, unsigned int events) {$/;"	f	file:
uv__async_send	uv/unix/async.c	/^void uv__async_send(struct uv__async* wa) {$/;"	f
uv__async_start	uv/unix/async.c	/^int uv__async_start(uv_loop_t* loop, struct uv__async* wa, uv__async_cb cb) {$/;"	f
uv__async_stop	uv/unix/async.c	/^void uv__async_stop(uv_loop_t* loop, struct uv__async* wa) {$/;"	f
uv__calloc	uv/uv-common.c	/^void* uv__calloc(size_t count, size_t size) {$/;"	f
uv__cancelled	uv/threadpool.c	/^static void uv__cancelled(struct uv__work* w) {$/;"	f	file:
uv__cf_loop_cb	uv/unix/fsevents.c	/^static void uv__cf_loop_cb(void* arg) {$/;"	f	file:
uv__cf_loop_runner	uv/unix/fsevents.c	/^static void* uv__cf_loop_runner(void* arg) {$/;"	f	file:
uv__cf_loop_signal	uv/unix/fsevents.c	/^int uv__cf_loop_signal(uv_loop_t* loop,$/;"	f
uv__cf_loop_signal_s	uv/unix/fsevents.c	/^struct uv__cf_loop_signal_s {$/;"	s	file:
uv__cf_loop_signal_t	uv/unix/fsevents.c	/^typedef struct uv__cf_loop_signal_s uv__cf_loop_signal_t;$/;"	t	typeref:struct:uv__cf_loop_signal_s	file:
uv__cf_loop_signal_type_e	uv/unix/fsevents.c	/^enum uv__cf_loop_signal_type_e {$/;"	g	file:
uv__cf_loop_signal_type_t	uv/unix/fsevents.c	/^typedef enum uv__cf_loop_signal_type_e uv__cf_loop_signal_type_t;$/;"	t	typeref:enum:uv__cf_loop_signal_type_e	file:
uv__cf_loop_state_s	uv/unix/fsevents.c	/^struct uv__cf_loop_state_s {$/;"	s	file:
uv__cf_loop_state_t	uv/unix/fsevents.c	/^typedef struct uv__cf_loop_state_s uv__cf_loop_state_t;$/;"	t	typeref:struct:uv__cf_loop_state_s	file:
uv__chld	uv/unix/process.c	/^static void uv__chld(uv_signal_t* handle, int signum) {$/;"	f	file:
uv__cloexec	uv/unix/core.c	/^int uv__cloexec(int fd, int set) {$/;"	f
uv__close	uv/unix/core.c	/^int uv__close(int fd) {$/;"	f
uv__count_bufs	uv/uv-common.c	/^size_t uv__count_bufs(const uv_buf_t bufs[], unsigned int nbufs) {$/;"	f
uv__dirent_t	include/uv-unix.h	/^typedef struct dirent uv__dirent_t;$/;"	t	typeref:struct:dirent
uv__dlerror	uv/unix/dl.c	/^static int uv__dlerror(uv_lib_t* lib) {$/;"	f	file:
uv__drain	uv/unix/stream.c	/^static void uv__drain(uv_stream_t* stream) {$/;"	f	file:
uv__dup	uv/unix/core.c	/^int uv__dup(int fd) {$/;"	f
uv__dup2_cloexec	uv/unix/core.c	/^int uv__dup2_cloexec(int oldfd, int newfd) {$/;"	f
uv__dup3	uv/unix/linux-syscalls.c	/^int uv__dup3(int oldfd, int newfd, int flags) {$/;"	f
uv__emfile_trick	uv/unix/stream.c	/^static int uv__emfile_trick(uv_loop_t* loop, int accept_fd) {$/;"	f	file:
uv__epoll_create	uv/unix/linux-syscalls.c	/^int uv__epoll_create(int size) {$/;"	f
uv__epoll_create1	uv/unix/linux-syscalls.c	/^int uv__epoll_create1(int flags) {$/;"	f
uv__epoll_ctl	uv/unix/linux-syscalls.c	/^int uv__epoll_ctl(int epfd, int op, int fd, struct uv__epoll_event* events) {$/;"	f
uv__epoll_event	uv/unix/linux-syscalls.h	/^struct uv__epoll_event {$/;"	s
uv__epoll_pwait	uv/unix/linux-syscalls.c	/^int uv__epoll_pwait(int epfd,$/;"	f
uv__epoll_wait	uv/unix/linux-syscalls.c	/^int uv__epoll_wait(int epfd,$/;"	f
uv__eventfd	uv/unix/linux-syscalls.c	/^int uv__eventfd(unsigned int count) {$/;"	f
uv__eventfd2	uv/unix/linux-syscalls.c	/^int uv__eventfd2(unsigned int count, int flags) {$/;"	f
uv__finish_close	uv/unix/core.c	/^static void uv__finish_close(uv_handle_t* handle) {$/;"	f	file:
uv__free	uv/uv-common.c	/^void uv__free(void* ptr) {$/;"	f
uv__fs_buf_iter	uv/unix/fs.c	/^static ssize_t uv__fs_buf_iter(uv_fs_t* req, uv__fs_buf_iter_processor process) {$/;"	f	file:
uv__fs_buf_iter_processor	uv/unix/fs.c	/^typedef ssize_t (*uv__fs_buf_iter_processor)(uv_fs_t* req);$/;"	t	file:
uv__fs_done	uv/unix/fs.c	/^static void uv__fs_done(struct uv__work* w, int status) {$/;"	f	file:
uv__fs_event	uv/unix/kqueue.c	/^static void uv__fs_event(uv_loop_t* loop, uv__io_t* w, unsigned int fflags) {$/;"	f	file:
uv__fs_event_close	uv/unix/aix.c	/^void uv__fs_event_close(uv_fs_event_t* handle) {$/;"	f
uv__fs_event_close	uv/unix/kqueue.c	/^void uv__fs_event_close(uv_fs_event_t* handle) {$/;"	f
uv__fs_event_close	uv/unix/linux-inotify.c	/^void uv__fs_event_close(uv_fs_event_t* handle) {$/;"	f
uv__fs_event_close	uv/unix/sunos.c	/^void uv__fs_event_close(uv_fs_event_t* handle) {$/;"	f
uv__fs_event_read	uv/unix/sunos.c	/^static void uv__fs_event_read(uv_loop_t* loop,$/;"	f	file:
uv__fs_event_rearm	uv/unix/sunos.c	/^static int uv__fs_event_rearm(uv_fs_event_t *handle) {$/;"	f	file:
uv__fs_fdatasync	uv/unix/fs.c	/^static ssize_t uv__fs_fdatasync(uv_fs_t* req) {$/;"	f	file:
uv__fs_fstat	uv/unix/fs.c	/^static int uv__fs_fstat(int fd, uv_stat_t *buf) {$/;"	f	file:
uv__fs_futime	uv/unix/fs.c	/^static ssize_t uv__fs_futime(uv_fs_t* req) {$/;"	f	file:
uv__fs_lstat	uv/unix/fs.c	/^static int uv__fs_lstat(const char *path, uv_stat_t *buf) {$/;"	f	file:
uv__fs_mkdtemp	uv/unix/fs.c	/^static ssize_t uv__fs_mkdtemp(uv_fs_t* req) {$/;"	f	file:
uv__fs_open	uv/unix/fs.c	/^static ssize_t uv__fs_open(uv_fs_t* req) {$/;"	f	file:
uv__fs_pathmax_size	uv/unix/fs.c	/^static ssize_t uv__fs_pathmax_size(const char* path) {$/;"	f	file:
uv__fs_poll_close	uv/fs-poll.c	/^void uv__fs_poll_close(uv_fs_poll_t* handle) {$/;"	f
uv__fs_poll_endgame	uv/fs-poll.c	/^void uv__fs_poll_endgame(uv_loop_t* loop, uv_fs_poll_t* handle) {$/;"	f
uv__fs_read	uv/unix/fs.c	/^static ssize_t uv__fs_read(uv_fs_t* req) {$/;"	f	file:
uv__fs_readlink	uv/unix/fs.c	/^static ssize_t uv__fs_readlink(uv_fs_t* req) {$/;"	f	file:
uv__fs_realpath	uv/unix/fs.c	/^static ssize_t uv__fs_realpath(uv_fs_t* req) {$/;"	f	file:
uv__fs_scandir	uv/unix/fs.c	/^static ssize_t uv__fs_scandir(uv_fs_t* req) {$/;"	f	file:
uv__fs_scandir_cleanup	uv/uv-common.c	/^void uv__fs_scandir_cleanup(uv_fs_t* req) {$/;"	f
uv__fs_scandir_filter	uv/unix/fs.c	/^static int uv__fs_scandir_filter(uv__dirent_t* dent) {$/;"	f	file:
uv__fs_sendfile	uv/unix/fs.c	/^static ssize_t uv__fs_sendfile(uv_fs_t* req) {$/;"	f	file:
uv__fs_sendfile_emul	uv/unix/fs.c	/^static ssize_t uv__fs_sendfile_emul(uv_fs_t* req) {$/;"	f	file:
uv__fs_stat	uv/unix/fs.c	/^static int uv__fs_stat(const char *path, uv_stat_t *buf) {$/;"	f	file:
uv__fs_utime	uv/unix/fs.c	/^static ssize_t uv__fs_utime(uv_fs_t* req) {$/;"	f	file:
uv__fs_work	uv/unix/fs.c	/^static void uv__fs_work(struct uv__work* w) {$/;"	f	file:
uv__fs_write	uv/unix/fs.c	/^static ssize_t uv__fs_write(uv_fs_t* req) {$/;"	f	file:
uv__fsevents_cb	uv/unix/fsevents.c	/^static void uv__fsevents_cb(uv_async_t* cb) {$/;"	f	file:
uv__fsevents_close	uv/unix/fsevents.c	/^int uv__fsevents_close(uv_fs_event_t* handle) {$/;"	f
uv__fsevents_create_stream	uv/unix/fsevents.c	/^static int uv__fsevents_create_stream(uv_loop_t* loop, CFArrayRef paths) {$/;"	f	file:
uv__fsevents_destroy_stream	uv/unix/fsevents.c	/^static void uv__fsevents_destroy_stream(uv_loop_t* loop) {$/;"	f	file:
uv__fsevents_event_cb	uv/unix/fsevents.c	/^static void uv__fsevents_event_cb(ConstFSEventStreamRef streamRef,$/;"	f	file:
uv__fsevents_event_s	uv/unix/fsevents.c	/^struct uv__fsevents_event_s {$/;"	s	file:
uv__fsevents_event_t	uv/unix/fsevents.c	/^typedef struct uv__fsevents_event_s uv__fsevents_event_t;$/;"	t	typeref:struct:uv__fsevents_event_s	file:
uv__fsevents_global_init	uv/unix/fsevents.c	/^static int uv__fsevents_global_init(void) {$/;"	f	file:
uv__fsevents_init	uv/unix/fsevents.c	/^int uv__fsevents_init(uv_fs_event_t* handle) {$/;"	f
uv__fsevents_loop_delete	uv/unix/fsevents.c	/^void uv__fsevents_loop_delete(uv_loop_t* loop) {$/;"	f
uv__fsevents_loop_init	uv/unix/fsevents.c	/^static int uv__fsevents_loop_init(uv_loop_t* loop) {$/;"	f	file:
uv__fsevents_push_event	uv/unix/fsevents.c	/^static void uv__fsevents_push_event(uv_fs_event_t* handle,$/;"	f	file:
uv__fsevents_reschedule	uv/unix/fsevents.c	/^static void uv__fsevents_reschedule(uv_fs_event_t* handle,$/;"	f	file:
uv__get_nbufs	uv/uv-common.c	/^static unsigned int* uv__get_nbufs(uv_fs_t* req) {$/;"	f	file:
uv__getaddrinfo_done	uv/unix/getaddrinfo.c	/^static void uv__getaddrinfo_done(struct uv__work* w, int status) {$/;"	f	file:
uv__getaddrinfo_translate_error	uv/unix/getaddrinfo.c	/^int uv__getaddrinfo_translate_error(int sys_err) {$/;"	f
uv__getaddrinfo_work	uv/unix/getaddrinfo.c	/^static void uv__getaddrinfo_work(struct uv__work* w) {$/;"	f	file:
uv__getiovmax	uv/unix/core.c	/^int uv__getiovmax(void) {$/;"	f
uv__getnameinfo_done	uv/unix/getnameinfo.c	/^static void uv__getnameinfo_done(struct uv__work* w, int status) {$/;"	f	file:
uv__getnameinfo_work	uv/unix/getnameinfo.c	/^static void uv__getnameinfo_work(struct uv__work* w) {$/;"	f	file:
uv__handle_fd	uv/unix/stream.c	/^static int uv__handle_fd(uv_handle_t* handle) {$/;"	f	file:
uv__handle_init	uv/uv-common.h	208;"	d
uv__handle_platform_init	uv/uv-common.h	203;"	d
uv__handle_platform_init	uv/uv-common.h	205;"	d
uv__handle_ref	uv/uv-common.h	181;"	d
uv__handle_start	uv/uv-common.h	163;"	d
uv__handle_stop	uv/uv-common.h	172;"	d
uv__handle_type	uv/unix/stream.c	/^uv_handle_type uv__handle_type(int fd) {$/;"	f
uv__handle_unref	uv/uv-common.h	190;"	d
uv__has_active_handles	uv/uv-common.h	142;"	d
uv__has_active_reqs	uv/uv-common.h	126;"	d
uv__has_ref	uv/uv-common.h	199;"	d
uv__hrtime	uv/unix/aix.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__hrtime	uv/unix/darwin.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__hrtime	uv/unix/freebsd.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__hrtime	uv/unix/linux-core.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__hrtime	uv/unix/netbsd.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__hrtime	uv/unix/openbsd.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__hrtime	uv/unix/sunos.c	/^uint64_t uv__hrtime(uv_clocktype_t type) {$/;"	f
uv__inotify_add_watch	uv/unix/linux-syscalls.c	/^int uv__inotify_add_watch(int fd, const char* path, uint32_t mask) {$/;"	f
uv__inotify_event	uv/unix/linux-syscalls.h	/^struct uv__inotify_event {$/;"	s
uv__inotify_init	uv/unix/linux-syscalls.c	/^int uv__inotify_init(void) {$/;"	f
uv__inotify_init1	uv/unix/linux-syscalls.c	/^int uv__inotify_init1(int flags) {$/;"	f
uv__inotify_read	uv/unix/linux-inotify.c	/^static void uv__inotify_read(uv_loop_t* loop,$/;"	f	file:
uv__inotify_rm_watch	uv/unix/linux-syscalls.c	/^int uv__inotify_rm_watch(int fd, int32_t wd) {$/;"	f
uv__io_active	uv/unix/core.c	/^int uv__io_active(const uv__io_t* w, unsigned int events) {$/;"	f
uv__io_cb	include/uv-unix.h	/^typedef void (*uv__io_cb)(struct uv_loop_s* loop,$/;"	t
uv__io_close	uv/unix/core.c	/^void uv__io_close(uv_loop_t* loop, uv__io_t* w) {$/;"	f
uv__io_feed	uv/unix/core.c	/^void uv__io_feed(uv_loop_t* loop, uv__io_t* w) {$/;"	f
uv__io_init	uv/unix/core.c	/^void uv__io_init(uv__io_t* w, uv__io_cb cb, int fd) {$/;"	f
uv__io_poll	uv/unix/aix.c	/^void uv__io_poll(uv_loop_t* loop, int timeout) {$/;"	f
uv__io_poll	uv/unix/kqueue.c	/^void uv__io_poll(uv_loop_t* loop, int timeout) {$/;"	f
uv__io_poll	uv/unix/linux-core.c	/^void uv__io_poll(uv_loop_t* loop, int timeout) {$/;"	f
uv__io_poll	uv/unix/sunos.c	/^void uv__io_poll(uv_loop_t* loop, int timeout) {$/;"	f
uv__io_s	include/uv-unix.h	/^struct uv__io_s {$/;"	s
uv__io_start	uv/unix/core.c	/^void uv__io_start(uv_loop_t* loop, uv__io_t* w, unsigned int events) {$/;"	f
uv__io_stop	uv/unix/core.c	/^void uv__io_stop(uv_loop_t* loop, uv__io_t* w, unsigned int events) {$/;"	f
uv__io_t	include/uv-unix.h	/^typedef struct uv__io_s uv__io_t;$/;"	t	typeref:struct:uv__io_s
uv__is_active	uv/uv-common.h	157;"	d
uv__is_ahafs_mounted	uv/unix/aix.c	/^static int uv__is_ahafs_mounted(void){$/;"	f	file:
uv__is_closing	uv/uv-common.h	160;"	d
uv__kqueue_init	uv/unix/kqueue.c	/^int uv__kqueue_init(uv_loop_t* loop) {$/;"	f
uv__loop_alive	uv/unix/core.c	/^static int uv__loop_alive(const uv_loop_t* loop) {$/;"	f	file:
uv__loop_close	uv/unix/loop.c	/^void uv__loop_close(uv_loop_t* loop) {$/;"	f
uv__loop_configure	uv/unix/loop.c	/^int uv__loop_configure(uv_loop_t* loop, uv_loop_option option, va_list ap) {$/;"	f
uv__make_close_pending	uv/unix/core.c	/^void uv__make_close_pending(uv_handle_t* handle) {$/;"	f
uv__make_pipe	uv/unix/process.c	/^int uv__make_pipe(int fds[2], int flags) {$/;"	f
uv__make_socketpair	uv/unix/process.c	/^int uv__make_socketpair(int fds[2], int flags) {$/;"	f
uv__make_subdirs_p	uv/unix/aix.c	/^static int uv__make_subdirs_p(const char *filename) {$/;"	f	file:
uv__makedir_p	uv/unix/aix.c	/^static int uv__makedir_p(const char *dir) {$/;"	f	file:
uv__malloc	uv/uv-common.c	/^void* uv__malloc(size_t size) {$/;"	f
uv__mmsghdr	uv/unix/linux-syscalls.h	/^struct uv__mmsghdr {$/;"	s
uv__next_timeout	uv/unix/timer.c	/^int uv__next_timeout(const uv_loop_t* loop) {$/;"	f
uv__nonblock	uv/unix/core.c	/^int uv__nonblock(int fd, int set) {$/;"	f
uv__open_cloexec	uv/unix/core.c	/^int uv__open_cloexec(const char* path, int flags) {$/;"	f
uv__parse_data	uv/unix/aix.c	/^static int uv__parse_data(char *buf, int *events, uv_fs_event_t* handle) {$/;"	f	file:
uv__path_is_a_directory	uv/unix/aix.c	/^static int uv__path_is_a_directory(char* filename) {$/;"	f	file:
uv__peersockfunc	uv/unix/pipe.c	/^typedef int (*uv__peersockfunc)(int, struct sockaddr*, socklen_t*);$/;"	t	file:
uv__pipe2	uv/unix/linux-syscalls.c	/^int uv__pipe2(int pipefd[2], int flags) {$/;"	f
uv__pipe_close	uv/unix/pipe.c	/^void uv__pipe_close(uv_pipe_t* handle) {$/;"	f
uv__pipe_getsockpeername	uv/unix/pipe.c	/^static int uv__pipe_getsockpeername(const uv_pipe_t* handle,$/;"	f	file:
uv__platform_invalidate_fd	uv/unix/aix.c	/^void uv__platform_invalidate_fd(uv_loop_t* loop, int fd) {$/;"	f
uv__platform_invalidate_fd	uv/unix/kqueue.c	/^void uv__platform_invalidate_fd(uv_loop_t* loop, int fd) {$/;"	f
uv__platform_invalidate_fd	uv/unix/linux-core.c	/^void uv__platform_invalidate_fd(uv_loop_t* loop, int fd) {$/;"	f
uv__platform_invalidate_fd	uv/unix/sunos.c	/^void uv__platform_invalidate_fd(uv_loop_t* loop, int fd) {$/;"	f
uv__platform_loop_delete	uv/unix/aix.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_delete	uv/unix/darwin.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_delete	uv/unix/freebsd.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_delete	uv/unix/linux-core.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_delete	uv/unix/netbsd.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_delete	uv/unix/openbsd.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_delete	uv/unix/sunos.c	/^void uv__platform_loop_delete(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/aix.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/darwin.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/freebsd.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/linux-core.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/netbsd.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/openbsd.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__platform_loop_init	uv/unix/sunos.c	/^int uv__platform_loop_init(uv_loop_t* loop) {$/;"	f
uv__poll_close	uv/unix/poll.c	/^void uv__poll_close(uv_poll_t* handle) {$/;"	f
uv__poll_io	uv/unix/poll.c	/^static void uv__poll_io(uv_loop_t* loop, uv__io_t* w, unsigned int events) {$/;"	f	file:
uv__poll_stop	uv/unix/poll.c	/^static void uv__poll_stop(uv_poll_t* handle) {$/;"	f	file:
uv__preadv	uv/unix/linux-syscalls.c	/^ssize_t uv__preadv(int fd, const struct iovec *iov, int iovcnt, int64_t offset) {$/;"	f
uv__print_handles	uv/uv-common.c	/^static void uv__print_handles(uv_loop_t* loop, int only_active, FILE* stream) {$/;"	f	file:
uv__process_child_init	uv/unix/process.c	/^static void uv__process_child_init(const uv_process_options_t* options,$/;"	f	file:
uv__process_close	uv/unix/process.c	/^void uv__process_close(uv_process_t* handle) {$/;"	f
uv__process_close_stream	uv/unix/process.c	/^static void uv__process_close_stream(uv_stdio_container_t* container) {$/;"	f	file:
uv__process_init_stdio	uv/unix/process.c	/^static int uv__process_init_stdio(uv_stdio_container_t* container, int fds[2]) {$/;"	f	file:
uv__process_open_stream	uv/unix/process.c	/^static int uv__process_open_stream(uv_stdio_container_t* container,$/;"	f	file:
uv__pthread_setname_np	uv/unix/darwin-proctitle.c	/^static int uv__pthread_setname_np(const char* name) {$/;"	f	file:
uv__pthread_sigmask	uv/unix/pthread-fixes.c	/^int uv__pthread_sigmask(int how, const sigset_t* set, sigset_t* oset) {$/;"	f
uv__pwritev	uv/unix/linux-syscalls.c	/^ssize_t uv__pwritev(int fd, const struct iovec *iov, int iovcnt, int64_t offset) {$/;"	f
uv__queue_done	uv/threadpool.c	/^static void uv__queue_done(struct uv__work* w, int err) {$/;"	f	file:
uv__queue_work	uv/threadpool.c	/^static void uv__queue_work(struct uv__work* w) {$/;"	f	file:
uv__rawname	uv/unix/aix.c	/^static char *uv__rawname(char *cp) {$/;"	f	file:
uv__read	uv/unix/stream.c	/^static void uv__read(uv_stream_t* stream) {$/;"	f	file:
uv__realloc	uv/uv-common.c	/^void* uv__realloc(void* ptr, size_t size) {$/;"	f
uv__recvmmsg	uv/unix/linux-syscalls.c	/^int uv__recvmmsg(int fd,$/;"	f
uv__recvmsg	uv/unix/core.c	/^ssize_t uv__recvmsg(int fd, struct msghdr* msg, int flags) {$/;"	f
uv__req_init	uv/threadpool.c	/^static void uv__req_init(uv_loop_t* loop,$/;"	f	file:
uv__req_init	uv/threadpool.c	36;"	d	file:
uv__req_init	uv/unix/internal.h	297;"	d
uv__req_register	uv/uv-common.h	129;"	d
uv__req_unregister	uv/uv-common.h	135;"	d
uv__run_closing_handles	uv/unix/core.c	/^static void uv__run_closing_handles(uv_loop_t* loop) {$/;"	f	file:
uv__run_pending	uv/unix/core.c	/^static int uv__run_pending(uv_loop_t* loop) {$/;"	f	file:
uv__run_timers	uv/unix/timer.c	/^void uv__run_timers(uv_loop_t* loop) {$/;"	f
uv__sendmmsg	uv/unix/linux-syscalls.c	/^int uv__sendmmsg(int fd,$/;"	f
uv__server_io	uv/unix/stream.c	/^void uv__server_io(uv_loop_t* loop, uv__io_t* w, unsigned int events) {$/;"	f
uv__set_process_title	uv/unix/darwin-proctitle.c	/^int uv__set_process_title(const char* title) {$/;"	f
uv__set_process_title	uv/unix/linux-core.c	/^void uv__set_process_title(const char* title) {$/;"	f
uv__set_reuse	uv/unix/udp.c	/^static int uv__set_reuse(int fd) {$/;"	f	file:
uv__setsockopt	uv/unix/udp.c	/^static int uv__setsockopt(uv_udp_t* handle,$/;"	f	file:
uv__setsockopt_maybe_char	uv/unix/udp.c	/^static int uv__setsockopt_maybe_char(uv_udp_t* handle,$/;"	f	file:
uv__setup_ahafs	uv/unix/aix.c	/^static int uv__setup_ahafs(const char* filename, int *fd) {$/;"	f	file:
uv__signal_block_and_lock	uv/unix/signal.c	/^static void uv__signal_block_and_lock(sigset_t* saved_sigmask) {$/;"	f	file:
uv__signal_close	uv/unix/signal.c	/^void uv__signal_close(uv_signal_t* handle) {$/;"	f
uv__signal_compare	uv/unix/signal.c	/^static int uv__signal_compare(uv_signal_t* w1, uv_signal_t* w2) {$/;"	f	file:
uv__signal_event	uv/unix/signal.c	/^static void uv__signal_event(uv_loop_t* loop,$/;"	f	file:
uv__signal_first_handle	uv/unix/signal.c	/^static uv_signal_t* uv__signal_first_handle(int signum) {$/;"	f	file:
uv__signal_global_init	uv/unix/signal.c	/^static void uv__signal_global_init(void) {$/;"	f	file:
uv__signal_global_init_guard	uv/unix/signal.c	/^static pthread_once_t uv__signal_global_init_guard = PTHREAD_ONCE_INIT;$/;"	v	file:
uv__signal_global_once_init	uv/unix/signal.c	/^void uv__signal_global_once_init(void) {$/;"	f
uv__signal_handler	uv/unix/signal.c	/^static void uv__signal_handler(int signum) {$/;"	f	file:
uv__signal_lock	uv/unix/signal.c	/^static int uv__signal_lock(void) {$/;"	f	file:
uv__signal_lock_pipefd	uv/unix/signal.c	/^static int uv__signal_lock_pipefd[2];$/;"	v	file:
uv__signal_loop_cleanup	uv/unix/signal.c	/^void uv__signal_loop_cleanup(uv_loop_t* loop) {$/;"	f
uv__signal_loop_once_init	uv/unix/signal.c	/^static int uv__signal_loop_once_init(uv_loop_t* loop) {$/;"	f	file:
uv__signal_msg_t	uv/unix/signal.c	/^} uv__signal_msg_t;$/;"	t	typeref:struct:__anon5	file:
uv__signal_register_handler	uv/unix/signal.c	/^static int uv__signal_register_handler(int signum) {$/;"	f	file:
uv__signal_stop	uv/unix/signal.c	/^static void uv__signal_stop(uv_signal_t* handle) {$/;"	f	file:
uv__signal_tree	uv/unix/signal.c	/^static struct uv__signal_tree_s uv__signal_tree =$/;"	v	typeref:struct:uv__signal_tree_s	file:
uv__signal_unlock	uv/unix/signal.c	/^static int uv__signal_unlock(void) {$/;"	f	file:
uv__signal_unlock_and_unblock	uv/unix/signal.c	/^static void uv__signal_unlock_and_unblock(sigset_t* saved_sigmask) {$/;"	f	file:
uv__signal_unregister_handler	uv/unix/signal.c	/^static void uv__signal_unregister_handler(int signum) {$/;"	f	file:
uv__skip_lines	uv/unix/aix.c	/^static int uv__skip_lines(char **p, int n) {$/;"	f	file:
uv__socket	uv/unix/core.c	/^int uv__socket(int domain, int type, int protocol) {$/;"	f
uv__socket_sockopt	uv/unix/core.c	/^int uv__socket_sockopt(uv_handle_t* handle, int optname, int* value) {$/;"	f
uv__strdup	uv/uv-common.c	/^char* uv__strdup(const char* s) {$/;"	f
uv__stream_close	uv/unix/stream.c	/^void uv__stream_close(uv_stream_t* handle) {$/;"	f
uv__stream_connect	uv/unix/stream.c	/^static void uv__stream_connect(uv_stream_t* stream) {$/;"	f	file:
uv__stream_destroy	uv/unix/stream.c	/^void uv__stream_destroy(uv_stream_t* stream) {$/;"	f
uv__stream_eof	uv/unix/stream.c	/^static void uv__stream_eof(uv_stream_t* stream, const uv_buf_t* buf) {$/;"	f	file:
uv__stream_fd	uv/unix/internal.h	251;"	d
uv__stream_fd	uv/unix/internal.h	253;"	d
uv__stream_flush_write_queue	uv/unix/stream.c	/^void uv__stream_flush_write_queue(uv_stream_t* stream, int error) {$/;"	f
uv__stream_init	uv/unix/stream.c	/^void uv__stream_init(uv_loop_t* loop,$/;"	f
uv__stream_io	uv/unix/stream.c	/^static void uv__stream_io(uv_loop_t* loop, uv__io_t* w, unsigned int events) {$/;"	f	file:
uv__stream_open	uv/unix/stream.c	/^int uv__stream_open(uv_stream_t* stream, int fd, int flags) {$/;"	f
uv__stream_osx_cb_close	uv/unix/stream.c	/^static void uv__stream_osx_cb_close(uv_handle_t* async) {$/;"	f	file:
uv__stream_osx_interrupt_select	uv/unix/stream.c	/^static void uv__stream_osx_interrupt_select(uv_stream_t* stream) {$/;"	f	file:
uv__stream_osx_select	uv/unix/stream.c	/^static void uv__stream_osx_select(void* arg) {$/;"	f	file:
uv__stream_osx_select_cb	uv/unix/stream.c	/^static void uv__stream_osx_select_cb(uv_async_t* handle) {$/;"	f	file:
uv__stream_queue_fd	uv/unix/stream.c	/^static int uv__stream_queue_fd(uv_stream_t* stream, int fd) {$/;"	f	file:
uv__stream_queued_fds_s	uv/unix/internal.h	/^struct uv__stream_queued_fds_s {$/;"	s
uv__stream_queued_fds_t	uv/unix/internal.h	/^typedef struct uv__stream_queued_fds_s uv__stream_queued_fds_t;$/;"	t	typeref:struct:uv__stream_queued_fds_s
uv__stream_recv_cmsg	uv/unix/stream.c	/^static int uv__stream_recv_cmsg(uv_stream_t* stream, struct msghdr* msg) {$/;"	f	file:
uv__stream_select_s	uv/unix/stream.c	/^struct uv__stream_select_s {$/;"	s	file:
uv__stream_select_t	uv/unix/stream.c	/^typedef struct uv__stream_select_s uv__stream_select_t;$/;"	t	typeref:struct:uv__stream_select_s	file:
uv__stream_try_select	uv/unix/stream.c	/^int uv__stream_try_select(uv_stream_t* stream, int* fd) {$/;"	f
uv__strndup	uv/uv-common.c	/^char* uv__strndup(const char* s, size_t n) {$/;"	f
uv__tcp_bind	uv/unix/tcp.c	/^int uv__tcp_bind(uv_tcp_t* tcp,$/;"	f
uv__tcp_close	uv/unix/tcp.c	/^void uv__tcp_close(uv_tcp_t* handle) {$/;"	f
uv__tcp_connect	uv/unix/tcp.c	/^int uv__tcp_connect(uv_connect_t* req,$/;"	f
uv__tcp_keepalive	uv/unix/tcp.c	/^int uv__tcp_keepalive(int fd, int on, unsigned int delay) {$/;"	f
uv__tcp_nodelay	uv/unix/tcp.c	/^int uv__tcp_nodelay(int fd, int on) {$/;"	f
uv__thread_start	uv/unix/thread.c	/^static void* uv__thread_start(void *arg)$/;"	f	file:
uv__timer_close	uv/unix/timer.c	/^void uv__timer_close(uv_timer_t* handle) {$/;"	f
uv__to_stat	uv/unix/fs.c	/^static void uv__to_stat(struct stat* src, uv_stat_t* dst) {$/;"	f	file:
uv__tty_make_raw	uv/unix/tty.c	/^static void uv__tty_make_raw(struct termios* tio) {$/;"	f	file:
uv__udp_bind	uv/unix/udp.c	/^int uv__udp_bind(uv_udp_t* handle,$/;"	f
uv__udp_close	uv/unix/udp.c	/^void uv__udp_close(uv_udp_t* handle) {$/;"	f
uv__udp_finish_close	uv/unix/udp.c	/^void uv__udp_finish_close(uv_udp_t* handle) {$/;"	f
uv__udp_io	uv/unix/udp.c	/^static void uv__udp_io(uv_loop_t* loop, uv__io_t* w, unsigned int revents) {$/;"	f	file:
uv__udp_maybe_deferred_bind	uv/unix/udp.c	/^static int uv__udp_maybe_deferred_bind(uv_udp_t* handle,$/;"	f	file:
uv__udp_recv_start	uv/unix/udp.c	/^int uv__udp_recv_start(uv_udp_t* handle,$/;"	f
uv__udp_recv_stop	uv/unix/udp.c	/^int uv__udp_recv_stop(uv_udp_t* handle) {$/;"	f
uv__udp_recvmsg	uv/unix/udp.c	/^static void uv__udp_recvmsg(uv_udp_t* handle) {$/;"	f	file:
uv__udp_run_completed	uv/unix/udp.c	/^static void uv__udp_run_completed(uv_udp_t* handle) {$/;"	f	file:
uv__udp_send	uv/unix/udp.c	/^int uv__udp_send(uv_udp_send_t* req,$/;"	f
uv__udp_sendmsg	uv/unix/udp.c	/^static void uv__udp_sendmsg(uv_udp_t* handle) {$/;"	f	file:
uv__udp_set_membership4	uv/unix/udp.c	/^static int uv__udp_set_membership4(uv_udp_t* handle,$/;"	f	file:
uv__udp_set_membership6	uv/unix/udp.c	/^static int uv__udp_set_membership6(uv_udp_t* handle,$/;"	f	file:
uv__udp_try_send	uv/unix/udp.c	/^int uv__udp_try_send(uv_udp_t* handle,$/;"	f
uv__unknown_err_code	uv/uv-common.c	/^static const char* uv__unknown_err_code(int err) {$/;"	f	file:
uv__utimesat	uv/unix/linux-syscalls.c	/^int uv__utimesat(int dirfd,$/;"	f
uv__work	include/uv-threadpool.h	/^struct uv__work {$/;"	s
uv__work_cancel	uv/threadpool.c	/^static int uv__work_cancel(uv_loop_t* loop, uv_req_t* req, struct uv__work* w) {$/;"	f	file:
uv__work_done	uv/threadpool.c	/^void uv__work_done(uv_async_t* handle) {$/;"	f
uv__work_submit	uv/threadpool.c	/^void uv__work_submit(uv_loop_t* loop,$/;"	f
uv__write	uv/unix/stream.c	/^static void uv__write(uv_stream_t* stream) {$/;"	f	file:
uv__write_callbacks	uv/unix/stream.c	/^static void uv__write_callbacks(uv_stream_t* stream) {$/;"	f	file:
uv__write_int	uv/unix/process.c	/^static void uv__write_int(int fd, int val) {$/;"	f	file:
uv__write_req_finish	uv/unix/stream.c	/^static void uv__write_req_finish(uv_write_t* req) {$/;"	f	file:
uv__write_req_size	uv/unix/stream.c	/^static size_t uv__write_req_size(uv_write_t* req) {$/;"	f	file:
uv_accept	uv/unix/stream.c	/^int uv_accept(uv_stream_t* server, uv_stream_t* client) {$/;"	f
uv_after_work_cb	include/uv.h	/^typedef void (*uv_after_work_cb)(uv_work_t* req, int status);$/;"	t
uv_alloc_cb	include/uv.h	/^typedef void (*uv_alloc_cb)(uv_handle_t* handle,$/;"	t
uv_any_handle	include/uv.h	/^union uv_any_handle {$/;"	u
uv_any_req	include/uv.h	/^union uv_any_req {$/;"	u
uv_async_cb	include/uv.h	/^typedef void (*uv_async_cb)(uv_async_t* handle);$/;"	t
uv_async_init	uv/unix/async.c	/^int uv_async_init(uv_loop_t* loop, uv_async_t* handle, uv_async_cb async_cb) {$/;"	f
uv_async_s	include/uv.h	/^struct uv_async_s {$/;"	s
uv_async_send	uv/unix/async.c	/^int uv_async_send(uv_async_t* handle) {$/;"	f
uv_async_t	include/uv.h	/^typedef struct uv_async_s uv_async_t;$/;"	t	typeref:struct:uv_async_s
uv_backend_fd	uv/unix/core.c	/^int uv_backend_fd(const uv_loop_t* loop) {$/;"	f
uv_backend_timeout	uv/unix/core.c	/^int uv_backend_timeout(const uv_loop_t* loop) {$/;"	f
uv_barrier_destroy	uv/unix/thread.c	/^void uv_barrier_destroy(uv_barrier_t* barrier) {$/;"	f
uv_barrier_init	uv/unix/thread.c	/^int uv_barrier_init(uv_barrier_t* barrier, unsigned int count) {$/;"	f
uv_barrier_t	include/uv-unix.h	/^typedef pthread_barrier_t uv_barrier_t;$/;"	t
uv_barrier_t	include/uv-unix.h	/^} uv_barrier_t;$/;"	t	typeref:struct:__anon38
uv_barrier_wait	uv/unix/thread.c	/^int uv_barrier_wait(uv_barrier_t* barrier) {$/;"	f
uv_buf_init	uv/uv-common.c	/^uv_buf_t uv_buf_init(char* base, unsigned int len) {$/;"	f
uv_buf_t	include/uv-unix.h	/^typedef struct uv_buf_t {$/;"	s
uv_buf_t	include/uv-unix.h	/^} uv_buf_t;$/;"	t	typeref:struct:uv_buf_t
uv_calloc_func	include/uv.h	/^typedef void* (*uv_calloc_func)(size_t count, size_t size);$/;"	t
uv_cancel	uv/threadpool.c	/^int uv_cancel(uv_req_t* req) {$/;"	f
uv_chdir	uv/unix/core.c	/^int uv_chdir(const char* dir) {$/;"	f
uv_check_cb	include/uv.h	/^typedef void (*uv_check_cb)(uv_check_t* handle);$/;"	t
uv_check_s	include/uv.h	/^struct uv_check_s {$/;"	s
uv_check_t	include/uv.h	/^typedef struct uv_check_s uv_check_t;$/;"	t	typeref:struct:uv_check_s
uv_clocktype_t	uv/unix/internal.h	/^} uv_clocktype_t;$/;"	t	typeref:enum:__anon3
uv_close	uv/unix/core.c	/^void uv_close(uv_handle_t* handle, uv_close_cb close_cb) {$/;"	f
uv_close_cb	include/uv.h	/^typedef void (*uv_close_cb)(uv_handle_t* handle);$/;"	t
uv_cond_broadcast	uv/unix/thread.c	/^void uv_cond_broadcast(uv_cond_t* cond) {$/;"	f
uv_cond_destroy	uv/unix/thread.c	/^void uv_cond_destroy(uv_cond_t* cond) {$/;"	f
uv_cond_init	uv/unix/thread.c	/^int uv_cond_init(uv_cond_t* cond) {$/;"	f
uv_cond_signal	uv/unix/thread.c	/^void uv_cond_signal(uv_cond_t* cond) {$/;"	f
uv_cond_t	include/uv-unix.h	/^typedef pthread_cond_t uv_cond_t;$/;"	t
uv_cond_timedwait	uv/unix/thread.c	/^int uv_cond_timedwait(uv_cond_t* cond, uv_mutex_t* mutex, uint64_t timeout) {$/;"	f
uv_cond_wait	uv/unix/thread.c	/^void uv_cond_wait(uv_cond_t* cond, uv_mutex_t* mutex) {$/;"	f
uv_connect_cb	include/uv.h	/^typedef void (*uv_connect_cb)(uv_connect_t* req, int status);$/;"	t
uv_connect_s	include/uv.h	/^struct uv_connect_s {$/;"	s
uv_connect_t	include/uv.h	/^typedef struct uv_connect_s uv_connect_t;$/;"	t	typeref:struct:uv_connect_s
uv_connection_cb	include/uv.h	/^typedef void (*uv_connection_cb)(uv_stream_t* server, int status);$/;"	t
uv_cpu_info	uv/unix/aix.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info	uv/unix/darwin.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info	uv/unix/freebsd.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info	uv/unix/linux-core.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info	uv/unix/netbsd.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info	uv/unix/openbsd.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info	uv/unix/sunos.c	/^int uv_cpu_info(uv_cpu_info_t** cpu_infos, int* count) {$/;"	f
uv_cpu_info_s	include/uv.h	/^struct uv_cpu_info_s {$/;"	s
uv_cpu_info_t	include/uv.h	/^typedef struct uv_cpu_info_s uv_cpu_info_t;$/;"	t	typeref:struct:uv_cpu_info_s
uv_cpu_times_s	include/uv.h	/^  struct uv_cpu_times_s {$/;"	s	struct:uv_cpu_info_s
uv_cwd	uv/unix/core.c	/^int uv_cwd(char* buffer, size_t* size) {$/;"	f
uv_default_loop	uv/uv-common.c	/^uv_loop_t* uv_default_loop(void) {$/;"	f
uv_dirent_s	include/uv.h	/^struct uv_dirent_s {$/;"	s
uv_dirent_t	include/uv.h	/^typedef struct uv_dirent_s uv_dirent_t;$/;"	t	typeref:struct:uv_dirent_s
uv_dirent_type_t	include/uv.h	/^} uv_dirent_type_t;$/;"	t	typeref:enum:__anon34
uv_disable_stdio_inheritance	uv/unix/core.c	/^void uv_disable_stdio_inheritance(void) {$/;"	f
uv_dlclose	uv/unix/dl.c	/^void uv_dlclose(uv_lib_t* lib) {$/;"	f
uv_dlerror	uv/unix/dl.c	/^const char* uv_dlerror(const uv_lib_t* lib) {$/;"	f
uv_dlopen	uv/unix/dl.c	/^int uv_dlopen(const char* filename, uv_lib_t* lib) {$/;"	f
uv_dlsym	uv/unix/dl.c	/^int uv_dlsym(uv_lib_t* lib, const char* name, void** ptr) {$/;"	f
uv_err_name	uv/uv-common.c	/^const char* uv_err_name(int err) {$/;"	f
uv_errno_t	include/uv.h	/^} uv_errno_t;$/;"	t	typeref:enum:__anon21
uv_exepath	uv/unix/aix.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exepath	uv/unix/darwin.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exepath	uv/unix/freebsd.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exepath	uv/unix/linux-core.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exepath	uv/unix/netbsd.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exepath	uv/unix/openbsd.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exepath	uv/unix/sunos.c	/^int uv_exepath(char* buffer, size_t* size) {$/;"	f
uv_exit_cb	include/uv.h	/^typedef void (*uv_exit_cb)(uv_process_t*, int64_t exit_status, int term_signal);$/;"	t
uv_file	include/uv-unix.h	/^typedef int uv_file;$/;"	t
uv_fileno	uv/unix/core.c	/^int uv_fileno(const uv_handle_t* handle, uv_os_fd_t* fd) {$/;"	f
uv_free_cpu_info	uv/unix/aix.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_cpu_info	uv/unix/darwin.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_cpu_info	uv/unix/freebsd.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_cpu_info	uv/unix/linux-core.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_cpu_info	uv/unix/netbsd.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_cpu_info	uv/unix/openbsd.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_cpu_info	uv/unix/sunos.c	/^void uv_free_cpu_info(uv_cpu_info_t* cpu_infos, int count) {$/;"	f
uv_free_func	include/uv.h	/^typedef void (*uv_free_func)(void* ptr);$/;"	t
uv_free_interface_addresses	uv/unix/aix.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses,$/;"	f
uv_free_interface_addresses	uv/unix/darwin.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses,$/;"	f
uv_free_interface_addresses	uv/unix/freebsd.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses,$/;"	f
uv_free_interface_addresses	uv/unix/linux-core.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses,$/;"	f
uv_free_interface_addresses	uv/unix/netbsd.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses, int count) {$/;"	f
uv_free_interface_addresses	uv/unix/openbsd.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses,$/;"	f
uv_free_interface_addresses	uv/unix/sunos.c	/^void uv_free_interface_addresses(uv_interface_address_t* addresses,$/;"	f
uv_freeaddrinfo	uv/unix/getaddrinfo.c	/^void uv_freeaddrinfo(struct addrinfo* ai) {$/;"	f
uv_fs_access	uv/unix/fs.c	/^int uv_fs_access(uv_loop_t* loop,$/;"	f
uv_fs_cb	include/uv.h	/^typedef void (*uv_fs_cb)(uv_fs_t* req);$/;"	t
uv_fs_chmod	uv/unix/fs.c	/^int uv_fs_chmod(uv_loop_t* loop,$/;"	f
uv_fs_chown	uv/unix/fs.c	/^int uv_fs_chown(uv_loop_t* loop,$/;"	f
uv_fs_close	uv/unix/fs.c	/^int uv_fs_close(uv_loop_t* loop, uv_fs_t* req, uv_file file, uv_fs_cb cb) {$/;"	f
uv_fs_event	include/uv.h	/^enum uv_fs_event {$/;"	g
uv_fs_event_cb	include/uv.h	/^typedef void (*uv_fs_event_cb)(uv_fs_event_t* handle,$/;"	t
uv_fs_event_flags	include/uv.h	/^enum uv_fs_event_flags {$/;"	g
uv_fs_event_getpath	uv/uv-common.c	/^int uv_fs_event_getpath(uv_fs_event_t* handle, char* buffer, size_t* size) {$/;"	f
uv_fs_event_init	uv/unix/aix.c	/^int uv_fs_event_init(uv_loop_t* loop, uv_fs_event_t* handle) {$/;"	f
uv_fs_event_init	uv/unix/kqueue.c	/^int uv_fs_event_init(uv_loop_t* loop, uv_fs_event_t* handle) {$/;"	f
uv_fs_event_init	uv/unix/linux-inotify.c	/^int uv_fs_event_init(uv_loop_t* loop, uv_fs_event_t* handle) {$/;"	f
uv_fs_event_init	uv/unix/sunos.c	/^int uv_fs_event_init(uv_loop_t* loop, uv_fs_event_t* handle) {$/;"	f
uv_fs_event_s	include/uv.h	/^struct uv_fs_event_s {$/;"	s
uv_fs_event_start	uv/unix/aix.c	/^int uv_fs_event_start(uv_fs_event_t* handle,$/;"	f
uv_fs_event_start	uv/unix/kqueue.c	/^int uv_fs_event_start(uv_fs_event_t* handle,$/;"	f
uv_fs_event_start	uv/unix/linux-inotify.c	/^int uv_fs_event_start(uv_fs_event_t* handle,$/;"	f
uv_fs_event_start	uv/unix/sunos.c	/^int uv_fs_event_start(uv_fs_event_t* handle,$/;"	f
uv_fs_event_stop	uv/unix/aix.c	/^int uv_fs_event_stop(uv_fs_event_t* handle) {$/;"	f
uv_fs_event_stop	uv/unix/kqueue.c	/^int uv_fs_event_stop(uv_fs_event_t* handle) {$/;"	f
uv_fs_event_stop	uv/unix/linux-inotify.c	/^int uv_fs_event_stop(uv_fs_event_t* handle) {$/;"	f
uv_fs_event_stop	uv/unix/sunos.c	/^int uv_fs_event_stop(uv_fs_event_t* handle) {$/;"	f
uv_fs_event_t	include/uv.h	/^typedef struct uv_fs_event_s uv_fs_event_t;$/;"	t	typeref:struct:uv_fs_event_s
uv_fs_fchmod	uv/unix/fs.c	/^int uv_fs_fchmod(uv_loop_t* loop,$/;"	f
uv_fs_fchown	uv/unix/fs.c	/^int uv_fs_fchown(uv_loop_t* loop,$/;"	f
uv_fs_fdatasync	uv/unix/fs.c	/^int uv_fs_fdatasync(uv_loop_t* loop, uv_fs_t* req, uv_file file, uv_fs_cb cb) {$/;"	f
uv_fs_fstat	uv/unix/fs.c	/^int uv_fs_fstat(uv_loop_t* loop, uv_fs_t* req, uv_file file, uv_fs_cb cb) {$/;"	f
uv_fs_fsync	uv/unix/fs.c	/^int uv_fs_fsync(uv_loop_t* loop, uv_fs_t* req, uv_file file, uv_fs_cb cb) {$/;"	f
uv_fs_ftruncate	uv/unix/fs.c	/^int uv_fs_ftruncate(uv_loop_t* loop,$/;"	f
uv_fs_futime	uv/unix/fs.c	/^int uv_fs_futime(uv_loop_t* loop,$/;"	f
uv_fs_link	uv/unix/fs.c	/^int uv_fs_link(uv_loop_t* loop,$/;"	f
uv_fs_lstat	uv/unix/fs.c	/^int uv_fs_lstat(uv_loop_t* loop, uv_fs_t* req, const char* path, uv_fs_cb cb) {$/;"	f
uv_fs_mkdir	uv/unix/fs.c	/^int uv_fs_mkdir(uv_loop_t* loop,$/;"	f
uv_fs_mkdtemp	uv/unix/fs.c	/^int uv_fs_mkdtemp(uv_loop_t* loop,$/;"	f
uv_fs_open	uv/unix/fs.c	/^int uv_fs_open(uv_loop_t* loop,$/;"	f
uv_fs_poll_cb	include/uv.h	/^typedef void (*uv_fs_poll_cb)(uv_fs_poll_t* handle,$/;"	t
uv_fs_poll_getpath	uv/fs-poll.c	/^int uv_fs_poll_getpath(uv_fs_poll_t* handle, char* buffer, size_t* size) {$/;"	f
uv_fs_poll_init	uv/fs-poll.c	/^int uv_fs_poll_init(uv_loop_t* loop, uv_fs_poll_t* handle) {$/;"	f
uv_fs_poll_s	include/uv.h	/^struct uv_fs_poll_s {$/;"	s
uv_fs_poll_start	uv/fs-poll.c	/^int uv_fs_poll_start(uv_fs_poll_t* handle,$/;"	f
uv_fs_poll_stop	uv/fs-poll.c	/^int uv_fs_poll_stop(uv_fs_poll_t* handle) {$/;"	f
uv_fs_poll_t	include/uv.h	/^typedef struct uv_fs_poll_s uv_fs_poll_t;$/;"	t	typeref:struct:uv_fs_poll_s
uv_fs_read	uv/unix/fs.c	/^int uv_fs_read(uv_loop_t* loop, uv_fs_t* req,$/;"	f
uv_fs_readlink	uv/unix/fs.c	/^int uv_fs_readlink(uv_loop_t* loop,$/;"	f
uv_fs_realpath	uv/unix/fs.c	/^int uv_fs_realpath(uv_loop_t* loop,$/;"	f
uv_fs_rename	uv/unix/fs.c	/^int uv_fs_rename(uv_loop_t* loop,$/;"	f
uv_fs_req_cleanup	uv/unix/fs.c	/^void uv_fs_req_cleanup(uv_fs_t* req) {$/;"	f
uv_fs_rmdir	uv/unix/fs.c	/^int uv_fs_rmdir(uv_loop_t* loop, uv_fs_t* req, const char* path, uv_fs_cb cb) {$/;"	f
uv_fs_s	include/uv.h	/^struct uv_fs_s {$/;"	s
uv_fs_scandir	uv/unix/fs.c	/^int uv_fs_scandir(uv_loop_t* loop,$/;"	f
uv_fs_scandir_next	uv/uv-common.c	/^int uv_fs_scandir_next(uv_fs_t* req, uv_dirent_t* ent) {$/;"	f
uv_fs_sendfile	uv/unix/fs.c	/^int uv_fs_sendfile(uv_loop_t* loop,$/;"	f
uv_fs_stat	uv/unix/fs.c	/^int uv_fs_stat(uv_loop_t* loop, uv_fs_t* req, const char* path, uv_fs_cb cb) {$/;"	f
uv_fs_symlink	uv/unix/fs.c	/^int uv_fs_symlink(uv_loop_t* loop,$/;"	f
uv_fs_t	include/uv.h	/^typedef struct uv_fs_s uv_fs_t;$/;"	t	typeref:struct:uv_fs_s
uv_fs_type	include/uv.h	/^} uv_fs_type;$/;"	t	typeref:enum:__anon37
uv_fs_unlink	uv/unix/fs.c	/^int uv_fs_unlink(uv_loop_t* loop, uv_fs_t* req, const char* path, uv_fs_cb cb) {$/;"	f
uv_fs_utime	uv/unix/fs.c	/^int uv_fs_utime(uv_loop_t* loop,$/;"	f
uv_fs_write	uv/unix/fs.c	/^int uv_fs_write(uv_loop_t* loop,$/;"	f
uv_get_free_memory	uv/unix/aix.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_free_memory	uv/unix/darwin.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_free_memory	uv/unix/freebsd.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_free_memory	uv/unix/linux-core.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_free_memory	uv/unix/netbsd.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_free_memory	uv/unix/openbsd.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_free_memory	uv/unix/sunos.c	/^uint64_t uv_get_free_memory(void) {$/;"	f
uv_get_process_title	uv/unix/aix.c	/^int uv_get_process_title(char* buffer, size_t size) {$/;"	f
uv_get_process_title	uv/unix/freebsd.c	/^int uv_get_process_title(char* buffer, size_t size) {$/;"	f
uv_get_process_title	uv/unix/netbsd.c	/^int uv_get_process_title(char* buffer, size_t size) {$/;"	f
uv_get_process_title	uv/unix/openbsd.c	/^int uv_get_process_title(char* buffer, size_t size) {$/;"	f
uv_get_process_title	uv/unix/proctitle.c	/^int uv_get_process_title(char* buffer, size_t size) {$/;"	f
uv_get_process_title	uv/unix/sunos.c	/^int uv_get_process_title(char* buffer, size_t size) {$/;"	f
uv_get_total_memory	uv/unix/aix.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_get_total_memory	uv/unix/darwin.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_get_total_memory	uv/unix/freebsd.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_get_total_memory	uv/unix/linux-core.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_get_total_memory	uv/unix/netbsd.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_get_total_memory	uv/unix/openbsd.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_get_total_memory	uv/unix/sunos.c	/^uint64_t uv_get_total_memory(void) {$/;"	f
uv_getaddrinfo	uv/unix/getaddrinfo.c	/^int uv_getaddrinfo(uv_loop_t* loop,$/;"	f
uv_getaddrinfo_cb	include/uv.h	/^typedef void (*uv_getaddrinfo_cb)(uv_getaddrinfo_t* req,$/;"	t
uv_getaddrinfo_s	include/uv.h	/^struct uv_getaddrinfo_s {$/;"	s
uv_getaddrinfo_t	include/uv.h	/^typedef struct uv_getaddrinfo_s uv_getaddrinfo_t;$/;"	t	typeref:struct:uv_getaddrinfo_s
uv_getnameinfo	uv/unix/getnameinfo.c	/^int uv_getnameinfo(uv_loop_t* loop,$/;"	f
uv_getnameinfo_cb	include/uv.h	/^typedef void (*uv_getnameinfo_cb)(uv_getnameinfo_t* req,$/;"	t
uv_getnameinfo_s	include/uv.h	/^struct uv_getnameinfo_s {$/;"	s
uv_getnameinfo_t	include/uv.h	/^typedef struct uv_getnameinfo_s uv_getnameinfo_t;$/;"	t	typeref:struct:uv_getnameinfo_s
uv_getrusage	uv/unix/core.c	/^int uv_getrusage(uv_rusage_t* rusage) {$/;"	f
uv_gid_t	include/uv-unix.h	/^typedef gid_t uv_gid_t;$/;"	t
uv_guess_handle	uv/unix/tty.c	/^uv_handle_type uv_guess_handle(uv_file file) {$/;"	f
uv_handle_s	include/uv.h	/^struct uv_handle_s {$/;"	s
uv_handle_size	uv/uv-common.c	/^size_t uv_handle_size(uv_handle_type type) {$/;"	f
uv_handle_t	include/uv.h	/^typedef struct uv_handle_s uv_handle_t;$/;"	t	typeref:struct:uv_handle_s
uv_handle_type	include/uv.h	/^} uv_handle_type;$/;"	t	typeref:enum:__anon22
uv_has_ref	uv/uv-common.c	/^int uv_has_ref(const uv_handle_t* handle) {$/;"	f
uv_hrtime	uv/unix/core.c	/^uint64_t uv_hrtime(void) {$/;"	f
uv_idle_cb	include/uv.h	/^typedef void (*uv_idle_cb)(uv_idle_t* handle);$/;"	t
uv_idle_s	include/uv.h	/^struct uv_idle_s {$/;"	s
uv_idle_t	include/uv.h	/^typedef struct uv_idle_s uv_idle_t;$/;"	t	typeref:struct:uv_idle_s
uv_inet_ntop	uv/inet.c	/^int uv_inet_ntop(int af, const void* src, char* dst, size_t size) {$/;"	f
uv_inet_pton	uv/inet.c	/^int uv_inet_pton(int af, const char* src, void* dst) {$/;"	f
uv_interface_address_s	include/uv.h	/^struct uv_interface_address_s {$/;"	s
uv_interface_address_t	include/uv.h	/^typedef struct uv_interface_address_s uv_interface_address_t;$/;"	t	typeref:struct:uv_interface_address_s
uv_interface_addresses	uv/unix/aix.c	/^int uv_interface_addresses(uv_interface_address_t** addresses,$/;"	f
uv_interface_addresses	uv/unix/darwin.c	/^int uv_interface_addresses(uv_interface_address_t** addresses, int* count) {$/;"	f
uv_interface_addresses	uv/unix/freebsd.c	/^int uv_interface_addresses(uv_interface_address_t** addresses, int* count) {$/;"	f
uv_interface_addresses	uv/unix/linux-core.c	/^int uv_interface_addresses(uv_interface_address_t** addresses,$/;"	f
uv_interface_addresses	uv/unix/netbsd.c	/^int uv_interface_addresses(uv_interface_address_t** addresses, int* count) {$/;"	f
uv_interface_addresses	uv/unix/openbsd.c	/^int uv_interface_addresses(uv_interface_address_t** addresses,$/;"	f
uv_interface_addresses	uv/unix/sunos.c	/^int uv_interface_addresses(uv_interface_address_t** addresses, int* count) {$/;"	f
uv_ip4_addr	uv/uv-common.c	/^int uv_ip4_addr(const char* ip, int port, struct sockaddr_in* addr) {$/;"	f
uv_ip4_name	uv/uv-common.c	/^int uv_ip4_name(const struct sockaddr_in* src, char* dst, size_t size) {$/;"	f
uv_ip6_addr	uv/uv-common.c	/^int uv_ip6_addr(const char* ip, int port, struct sockaddr_in6* addr) {$/;"	f
uv_ip6_name	uv/uv-common.c	/^int uv_ip6_name(const struct sockaddr_in6* src, char* dst, size_t size) {$/;"	f
uv_is_active	uv/unix/core.c	/^int uv_is_active(const uv_handle_t* handle) {$/;"	f
uv_is_closing	uv/unix/core.c	/^int uv_is_closing(const uv_handle_t* handle) {$/;"	f
uv_is_readable	uv/unix/stream.c	/^int uv_is_readable(const uv_stream_t* stream) {$/;"	f
uv_is_writable	uv/unix/stream.c	/^int uv_is_writable(const uv_stream_t* stream) {$/;"	f
uv_key_create	uv/unix/thread.c	/^int uv_key_create(uv_key_t* key) {$/;"	f
uv_key_delete	uv/unix/thread.c	/^void uv_key_delete(uv_key_t* key) {$/;"	f
uv_key_get	uv/unix/thread.c	/^void* uv_key_get(uv_key_t* key) {$/;"	f
uv_key_set	uv/unix/thread.c	/^void uv_key_set(uv_key_t* key, void* value) {$/;"	f
uv_key_t	include/uv-unix.h	/^typedef pthread_key_t uv_key_t;$/;"	t
uv_kill	uv/unix/process.c	/^int uv_kill(int pid, int signum) {$/;"	f
uv_lib_t	include/uv-unix.h	/^} uv_lib_t;$/;"	t	typeref:struct:__anon39
uv_listen	uv/unix/stream.c	/^int uv_listen(uv_stream_t* stream, int backlog, uv_connection_cb cb) {$/;"	f
uv_loadavg	uv/unix/aix.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loadavg	uv/unix/darwin.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loadavg	uv/unix/freebsd.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loadavg	uv/unix/linux-core.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loadavg	uv/unix/netbsd.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loadavg	uv/unix/openbsd.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loadavg	uv/unix/sunos.c	/^void uv_loadavg(double avg[3]) {$/;"	f
uv_loop_alive	uv/unix/core.c	/^int uv_loop_alive(const uv_loop_t* loop) {$/;"	f
uv_loop_close	uv/uv-common.c	/^int uv_loop_close(uv_loop_t* loop) {$/;"	f
uv_loop_configure	uv/uv-common.c	/^int uv_loop_configure(uv_loop_t* loop, uv_loop_option option, ...) {$/;"	f
uv_loop_delete	uv/uv-common.c	/^void uv_loop_delete(uv_loop_t* loop) {$/;"	f
uv_loop_init	uv/unix/loop.c	/^int uv_loop_init(uv_loop_t* loop) {$/;"	f
uv_loop_new	uv/uv-common.c	/^uv_loop_t* uv_loop_new(void) {$/;"	f
uv_loop_option	include/uv.h	/^} uv_loop_option;$/;"	t	typeref:enum:__anon24
uv_loop_s	include/uv.h	/^struct uv_loop_s {$/;"	s
uv_loop_size	uv/uv-common.c	/^size_t uv_loop_size(void) {$/;"	f
uv_loop_t	include/uv.h	/^typedef struct uv_loop_s uv_loop_t;$/;"	t	typeref:struct:uv_loop_s
uv_malloc_func	include/uv.h	/^typedef void* (*uv_malloc_func)(size_t size);$/;"	t
uv_membership	include/uv.h	/^} uv_membership;$/;"	t	typeref:enum:__anon28
uv_mutex_destroy	uv/unix/thread.c	/^void uv_mutex_destroy(uv_mutex_t* mutex) {$/;"	f
uv_mutex_init	uv/unix/thread.c	/^int uv_mutex_init(uv_mutex_t* mutex) {$/;"	f
uv_mutex_lock	uv/unix/thread.c	/^void uv_mutex_lock(uv_mutex_t* mutex) {$/;"	f
uv_mutex_t	include/uv-unix.h	/^typedef pthread_mutex_t uv_mutex_t;$/;"	t
uv_mutex_trylock	uv/unix/thread.c	/^int uv_mutex_trylock(uv_mutex_t* mutex) {$/;"	f
uv_mutex_unlock	uv/unix/thread.c	/^void uv_mutex_unlock(uv_mutex_t* mutex) {$/;"	f
uv_now	uv/uv-common.c	/^uint64_t uv_now(const uv_loop_t* loop) {$/;"	f
uv_once	uv/unix/thread.c	/^void uv_once(uv_once_t* guard, void (*callback)(void)) {$/;"	f
uv_once_t	include/uv-unix.h	/^typedef pthread_once_t uv_once_t;$/;"	t
uv_os_fd_t	include/uv-unix.h	/^typedef int uv_os_fd_t;$/;"	t
uv_os_homedir	uv/unix/core.c	/^int uv_os_homedir(char* buffer, size_t* size) {$/;"	f
uv_os_sock_t	include/uv-unix.h	/^typedef int uv_os_sock_t;$/;"	t
uv_pipe_bind	uv/unix/pipe.c	/^int uv_pipe_bind(uv_pipe_t* handle, const char* name) {$/;"	f
uv_pipe_connect	uv/unix/pipe.c	/^void uv_pipe_connect(uv_connect_t* req,$/;"	f
uv_pipe_getpeername	uv/unix/pipe.c	/^int uv_pipe_getpeername(const uv_pipe_t* handle, char* buffer, size_t* size) {$/;"	f
uv_pipe_getsockname	uv/unix/pipe.c	/^int uv_pipe_getsockname(const uv_pipe_t* handle, char* buffer, size_t* size) {$/;"	f
uv_pipe_init	uv/unix/pipe.c	/^int uv_pipe_init(uv_loop_t* loop, uv_pipe_t* handle, int ipc) {$/;"	f
uv_pipe_listen	uv/unix/pipe.c	/^int uv_pipe_listen(uv_pipe_t* handle, int backlog, uv_connection_cb cb) {$/;"	f
uv_pipe_open	uv/unix/pipe.c	/^int uv_pipe_open(uv_pipe_t* handle, uv_file fd) {$/;"	f
uv_pipe_pending_count	uv/unix/pipe.c	/^int uv_pipe_pending_count(uv_pipe_t* handle) {$/;"	f
uv_pipe_pending_instances	uv/unix/pipe.c	/^void uv_pipe_pending_instances(uv_pipe_t* handle, int count) {$/;"	f
uv_pipe_pending_type	uv/unix/pipe.c	/^uv_handle_type uv_pipe_pending_type(uv_pipe_t* handle) {$/;"	f
uv_pipe_s	include/uv.h	/^struct uv_pipe_s {$/;"	s
uv_pipe_t	include/uv.h	/^typedef struct uv_pipe_s uv_pipe_t;$/;"	t	typeref:struct:uv_pipe_s
uv_poll_cb	include/uv.h	/^typedef void (*uv_poll_cb)(uv_poll_t* handle, int status, int events);$/;"	t
uv_poll_event	include/uv.h	/^enum uv_poll_event {$/;"	g
uv_poll_init	uv/unix/poll.c	/^int uv_poll_init(uv_loop_t* loop, uv_poll_t* handle, int fd) {$/;"	f
uv_poll_init_socket	uv/unix/poll.c	/^int uv_poll_init_socket(uv_loop_t* loop, uv_poll_t* handle,$/;"	f
uv_poll_s	include/uv.h	/^struct uv_poll_s {$/;"	s
uv_poll_start	uv/unix/poll.c	/^int uv_poll_start(uv_poll_t* handle, int pevents, uv_poll_cb poll_cb) {$/;"	f
uv_poll_stop	uv/unix/poll.c	/^int uv_poll_stop(uv_poll_t* handle) {$/;"	f
uv_poll_t	include/uv.h	/^typedef struct uv_poll_s uv_poll_t;$/;"	t	typeref:struct:uv_poll_s
uv_prepare_cb	include/uv.h	/^typedef void (*uv_prepare_cb)(uv_prepare_t* handle);$/;"	t
uv_prepare_s	include/uv.h	/^struct uv_prepare_s {$/;"	s
uv_prepare_t	include/uv.h	/^typedef struct uv_prepare_s uv_prepare_t;$/;"	t	typeref:struct:uv_prepare_s
uv_print_active_handles	uv/uv-common.c	/^void uv_print_active_handles(uv_loop_t* loop, FILE* stream) {$/;"	f
uv_print_all_handles	uv/uv-common.c	/^void uv_print_all_handles(uv_loop_t* loop, FILE* stream) {$/;"	f
uv_process_flags	include/uv.h	/^enum uv_process_flags {$/;"	g
uv_process_kill	uv/unix/process.c	/^int uv_process_kill(uv_process_t* process, int signum) {$/;"	f
uv_process_options_s	include/uv.h	/^typedef struct uv_process_options_s {$/;"	s
uv_process_options_t	include/uv.h	/^} uv_process_options_t;$/;"	t	typeref:struct:uv_process_options_s
uv_process_s	include/uv.h	/^struct uv_process_s {$/;"	s
uv_process_t	include/uv.h	/^typedef struct uv_process_s uv_process_t;$/;"	t	typeref:struct:uv_process_s
uv_queue_work	uv/threadpool.c	/^int uv_queue_work(uv_loop_t* loop,$/;"	f
uv_read_cb	include/uv.h	/^typedef void (*uv_read_cb)(uv_stream_t* stream,$/;"	t
uv_read_start	uv/unix/stream.c	/^int uv_read_start(uv_stream_t* stream,$/;"	f
uv_read_stop	uv/unix/stream.c	/^int uv_read_stop(uv_stream_t* stream) {$/;"	f
uv_realloc_func	include/uv.h	/^typedef void* (*uv_realloc_func)(void* ptr, size_t size);$/;"	t
uv_recv_buffer_size	uv/uv-common.c	/^int uv_recv_buffer_size(uv_handle_t* handle, int* value) {$/;"	f
uv_ref	uv/uv-common.c	/^void uv_ref(uv_handle_t* handle) {$/;"	f
uv_replace_allocator	uv/uv-common.c	/^int uv_replace_allocator(uv_malloc_func malloc_func,$/;"	f
uv_req_s	include/uv.h	/^struct uv_req_s {$/;"	s
uv_req_size	uv/uv-common.c	/^size_t uv_req_size(uv_req_type type) {$/;"	f
uv_req_t	include/uv.h	/^typedef struct uv_req_s uv_req_t;$/;"	t	typeref:struct:uv_req_s
uv_req_type	include/uv.h	/^} uv_req_type;$/;"	t	typeref:enum:__anon23
uv_resident_set_memory	uv/unix/aix.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_resident_set_memory	uv/unix/darwin.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_resident_set_memory	uv/unix/freebsd.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_resident_set_memory	uv/unix/linux-core.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_resident_set_memory	uv/unix/netbsd.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_resident_set_memory	uv/unix/openbsd.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_resident_set_memory	uv/unix/sunos.c	/^int uv_resident_set_memory(size_t* rss) {$/;"	f
uv_run	uv/unix/core.c	/^int uv_run(uv_loop_t* loop, uv_run_mode mode) {$/;"	f
uv_run_mode	include/uv.h	/^} uv_run_mode;$/;"	t	typeref:enum:__anon25
uv_rusage_t	include/uv.h	/^} uv_rusage_t;$/;"	t	typeref:struct:__anon36
uv_rwlock_destroy	uv/unix/thread.c	/^void uv_rwlock_destroy(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_init	uv/unix/thread.c	/^int uv_rwlock_init(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_rdlock	uv/unix/thread.c	/^void uv_rwlock_rdlock(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_rdunlock	uv/unix/thread.c	/^void uv_rwlock_rdunlock(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_t	include/uv-unix.h	/^typedef pthread_rwlock_t uv_rwlock_t;$/;"	t
uv_rwlock_tryrdlock	uv/unix/thread.c	/^int uv_rwlock_tryrdlock(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_trywrlock	uv/unix/thread.c	/^int uv_rwlock_trywrlock(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_wrlock	uv/unix/thread.c	/^void uv_rwlock_wrlock(uv_rwlock_t* rwlock) {$/;"	f
uv_rwlock_wrunlock	uv/unix/thread.c	/^void uv_rwlock_wrunlock(uv_rwlock_t* rwlock) {$/;"	f
uv_sem_destroy	uv/unix/thread.c	/^void uv_sem_destroy(uv_sem_t* sem) {$/;"	f
uv_sem_init	uv/unix/thread.c	/^int uv_sem_init(uv_sem_t* sem, unsigned int value) {$/;"	f
uv_sem_post	uv/unix/thread.c	/^void uv_sem_post(uv_sem_t* sem) {$/;"	f
uv_sem_t	include/uv-unix.h	/^typedef UV_PLATFORM_SEM_T uv_sem_t;$/;"	t
uv_sem_trywait	uv/unix/thread.c	/^int uv_sem_trywait(uv_sem_t* sem) {$/;"	f
uv_sem_wait	uv/unix/thread.c	/^void uv_sem_wait(uv_sem_t* sem) {$/;"	f
uv_send_buffer_size	uv/uv-common.c	/^int uv_send_buffer_size(uv_handle_t* handle, int *value) {$/;"	f
uv_set_process_title	uv/unix/aix.c	/^int uv_set_process_title(const char* title) {$/;"	f
uv_set_process_title	uv/unix/freebsd.c	/^int uv_set_process_title(const char* title) {$/;"	f
uv_set_process_title	uv/unix/netbsd.c	/^int uv_set_process_title(const char* title) {$/;"	f
uv_set_process_title	uv/unix/openbsd.c	/^int uv_set_process_title(const char* title) {$/;"	f
uv_set_process_title	uv/unix/proctitle.c	/^int uv_set_process_title(const char* title) {$/;"	f
uv_set_process_title	uv/unix/sunos.c	/^int uv_set_process_title(const char* title) {$/;"	f
uv_setup_args	uv/unix/aix.c	/^char** uv_setup_args(int argc, char** argv) {$/;"	f
uv_setup_args	uv/unix/freebsd.c	/^char** uv_setup_args(int argc, char** argv) {$/;"	f
uv_setup_args	uv/unix/netbsd.c	/^char** uv_setup_args(int argc, char** argv) {$/;"	f
uv_setup_args	uv/unix/openbsd.c	/^char** uv_setup_args(int argc, char** argv) {$/;"	f
uv_setup_args	uv/unix/proctitle.c	/^char** uv_setup_args(int argc, char** argv) {$/;"	f
uv_setup_args	uv/unix/sunos.c	/^char** uv_setup_args(int argc, char** argv) {$/;"	f
uv_shutdown	uv/unix/stream.c	/^int uv_shutdown(uv_shutdown_t* req, uv_stream_t* stream, uv_shutdown_cb cb) {$/;"	f
uv_shutdown_cb	include/uv.h	/^typedef void (*uv_shutdown_cb)(uv_shutdown_t* req, int status);$/;"	t
uv_shutdown_s	include/uv.h	/^struct uv_shutdown_s {$/;"	s
uv_shutdown_t	include/uv.h	/^typedef struct uv_shutdown_s uv_shutdown_t;$/;"	t	typeref:struct:uv_shutdown_s
uv_signal_cb	include/uv.h	/^typedef void (*uv_signal_cb)(uv_signal_t* handle, int signum);$/;"	t
uv_signal_init	uv/unix/signal.c	/^int uv_signal_init(uv_loop_t* loop, uv_signal_t* handle) {$/;"	f
uv_signal_s	include/uv.h	/^struct uv_signal_s {$/;"	s
uv_signal_start	uv/unix/signal.c	/^int uv_signal_start(uv_signal_t* handle, uv_signal_cb signal_cb, int signum) {$/;"	f
uv_signal_stop	uv/unix/signal.c	/^int uv_signal_stop(uv_signal_t* handle) {$/;"	f
uv_signal_t	include/uv.h	/^typedef struct uv_signal_s uv_signal_t;$/;"	t	typeref:struct:uv_signal_s
uv_spawn	uv/unix/process.c	/^int uv_spawn(uv_loop_t* loop,$/;"	f
uv_spinlock_t	uv/unix/spinlock.h	/^} uv_spinlock_t;$/;"	t	typeref:struct:__anon6
uv_stat_t	include/uv.h	/^} uv_stat_t;$/;"	t	typeref:struct:__anon27
uv_stdio_container_s	include/uv.h	/^typedef struct uv_stdio_container_s {$/;"	s
uv_stdio_container_t	include/uv.h	/^} uv_stdio_container_t;$/;"	t	typeref:struct:uv_stdio_container_s
uv_stdio_flags	include/uv.h	/^} uv_stdio_flags;$/;"	t	typeref:enum:__anon30
uv_stop	uv/uv-common.c	/^void uv_stop(uv_loop_t* loop) {$/;"	f
uv_stream_s	include/uv.h	/^struct uv_stream_s {$/;"	s
uv_stream_set_blocking	uv/unix/stream.c	/^int uv_stream_set_blocking(uv_stream_t* handle, int blocking) {$/;"	f
uv_stream_t	include/uv.h	/^typedef struct uv_stream_s uv_stream_t;$/;"	t	typeref:struct:uv_stream_s
uv_strerror	uv/uv-common.c	/^const char* uv_strerror(int err) {$/;"	f
uv_tcp_bind	uv/uv-common.c	/^int uv_tcp_bind(uv_tcp_t* handle,$/;"	f
uv_tcp_connect	uv/uv-common.c	/^int uv_tcp_connect(uv_connect_t* req,$/;"	f
uv_tcp_flags	include/uv.h	/^enum uv_tcp_flags {$/;"	g
uv_tcp_getpeername	uv/unix/tcp.c	/^int uv_tcp_getpeername(const uv_tcp_t* handle,$/;"	f
uv_tcp_getsockname	uv/unix/tcp.c	/^int uv_tcp_getsockname(const uv_tcp_t* handle,$/;"	f
uv_tcp_init	uv/unix/tcp.c	/^int uv_tcp_init(uv_loop_t* loop, uv_tcp_t* tcp) {$/;"	f
uv_tcp_init_ex	uv/unix/tcp.c	/^int uv_tcp_init_ex(uv_loop_t* loop, uv_tcp_t* tcp, unsigned int flags) {$/;"	f
uv_tcp_keepalive	uv/unix/tcp.c	/^int uv_tcp_keepalive(uv_tcp_t* handle, int on, unsigned int delay) {$/;"	f
uv_tcp_listen	uv/unix/tcp.c	/^int uv_tcp_listen(uv_tcp_t* tcp, int backlog, uv_connection_cb cb) {$/;"	f
uv_tcp_nodelay	uv/unix/tcp.c	/^int uv_tcp_nodelay(uv_tcp_t* handle, int on) {$/;"	f
uv_tcp_open	uv/unix/tcp.c	/^int uv_tcp_open(uv_tcp_t* handle, uv_os_sock_t sock) {$/;"	f
uv_tcp_s	include/uv.h	/^struct uv_tcp_s {$/;"	s
uv_tcp_simultaneous_accepts	uv/unix/tcp.c	/^int uv_tcp_simultaneous_accepts(uv_tcp_t* handle, int enable) {$/;"	f
uv_tcp_t	include/uv.h	/^typedef struct uv_tcp_s uv_tcp_t;$/;"	t	typeref:struct:uv_tcp_s
uv_thread_cb	include/uv.h	/^typedef void (*uv_thread_cb)(void* arg);$/;"	t
uv_thread_create	uv/unix/thread.c	/^int uv_thread_create(uv_thread_t *tid, void (*entry)(void *arg), void *arg) {$/;"	f
uv_thread_equal	uv/unix/thread.c	/^int uv_thread_equal(const uv_thread_t* t1, const uv_thread_t* t2) {$/;"	f
uv_thread_join	uv/unix/thread.c	/^int uv_thread_join(uv_thread_t *tid) {$/;"	f
uv_thread_self	uv/unix/thread.c	/^uv_thread_t uv_thread_self(void) {$/;"	f
uv_thread_t	include/uv-unix.h	/^typedef pthread_t uv_thread_t;$/;"	t
uv_timer_again	uv/unix/timer.c	/^int uv_timer_again(uv_timer_t* handle) {$/;"	f
uv_timer_cb	include/uv.h	/^typedef void (*uv_timer_cb)(uv_timer_t* handle);$/;"	t
uv_timer_get_repeat	uv/unix/timer.c	/^uint64_t uv_timer_get_repeat(const uv_timer_t* handle) {$/;"	f
uv_timer_init	uv/unix/timer.c	/^int uv_timer_init(uv_loop_t* loop, uv_timer_t* handle) {$/;"	f
uv_timer_s	include/uv.h	/^struct uv_timer_s {$/;"	s
uv_timer_set_repeat	uv/unix/timer.c	/^void uv_timer_set_repeat(uv_timer_t* handle, uint64_t repeat) {$/;"	f
uv_timer_start	uv/unix/timer.c	/^int uv_timer_start(uv_timer_t* handle,$/;"	f
uv_timer_stop	uv/unix/timer.c	/^int uv_timer_stop(uv_timer_t* handle) {$/;"	f
uv_timer_t	include/uv.h	/^typedef struct uv_timer_s uv_timer_t;$/;"	t	typeref:struct:uv_timer_s
uv_timespec_t	include/uv.h	/^} uv_timespec_t;$/;"	t	typeref:struct:__anon26
uv_timeval_t	include/uv.h	/^} uv_timeval_t;$/;"	t	typeref:struct:__anon35
uv_try_write	uv/unix/stream.c	/^int uv_try_write(uv_stream_t* stream,$/;"	f
uv_try_write_cb	uv/unix/stream.c	/^void uv_try_write_cb(uv_write_t* req, int status) {$/;"	f
uv_tty_get_winsize	uv/unix/tty.c	/^int uv_tty_get_winsize(uv_tty_t* tty, int* width, int* height) {$/;"	f
uv_tty_init	uv/unix/tty.c	/^int uv_tty_init(uv_loop_t* loop, uv_tty_t* tty, int fd, int readable) {$/;"	f
uv_tty_mode_t	include/uv.h	/^} uv_tty_mode_t;$/;"	t	typeref:enum:__anon29
uv_tty_reset_mode	uv/unix/tty.c	/^int uv_tty_reset_mode(void) {$/;"	f
uv_tty_s	include/uv.h	/^struct uv_tty_s {$/;"	s
uv_tty_set_mode	include/uv.h	/^inline int uv_tty_set_mode(uv_tty_t* handle, int mode) {$/;"	f
uv_tty_set_mode	uv/unix/tty.c	/^int uv_tty_set_mode(uv_tty_t* tty, uv_tty_mode_t mode) {$/;"	f
uv_tty_t	include/uv.h	/^typedef struct uv_tty_s uv_tty_t;$/;"	t	typeref:struct:uv_tty_s
uv_udp_bind	uv/uv-common.c	/^int uv_udp_bind(uv_udp_t* handle,$/;"	f
uv_udp_flags	include/uv.h	/^enum uv_udp_flags {$/;"	g
uv_udp_getsockname	uv/unix/udp.c	/^int uv_udp_getsockname(const uv_udp_t* handle,$/;"	f
uv_udp_init	uv/unix/udp.c	/^int uv_udp_init(uv_loop_t* loop, uv_udp_t* handle) {$/;"	f
uv_udp_init_ex	uv/unix/udp.c	/^int uv_udp_init_ex(uv_loop_t* loop, uv_udp_t* handle, unsigned int flags) {$/;"	f
uv_udp_open	uv/unix/udp.c	/^int uv_udp_open(uv_udp_t* handle, uv_os_sock_t sock) {$/;"	f
uv_udp_recv_cb	include/uv.h	/^typedef void (*uv_udp_recv_cb)(uv_udp_t* handle,$/;"	t
uv_udp_recv_start	uv/uv-common.c	/^int uv_udp_recv_start(uv_udp_t* handle,$/;"	f
uv_udp_recv_stop	uv/uv-common.c	/^int uv_udp_recv_stop(uv_udp_t* handle) {$/;"	f
uv_udp_s	include/uv.h	/^struct uv_udp_s {$/;"	s
uv_udp_send	uv/uv-common.c	/^int uv_udp_send(uv_udp_send_t* req,$/;"	f
uv_udp_send_cb	include/uv.h	/^typedef void (*uv_udp_send_cb)(uv_udp_send_t* req, int status);$/;"	t
uv_udp_send_s	include/uv.h	/^struct uv_udp_send_s {$/;"	s
uv_udp_send_t	include/uv.h	/^typedef struct uv_udp_send_s uv_udp_send_t;$/;"	t	typeref:struct:uv_udp_send_s
uv_udp_set_broadcast	uv/unix/udp.c	/^int uv_udp_set_broadcast(uv_udp_t* handle, int on) {$/;"	f
uv_udp_set_membership	uv/unix/udp.c	/^int uv_udp_set_membership(uv_udp_t* handle,$/;"	f
uv_udp_set_multicast_interface	uv/unix/udp.c	/^int uv_udp_set_multicast_interface(uv_udp_t* handle, const char* interface_addr) {$/;"	f
uv_udp_set_multicast_loop	uv/unix/udp.c	/^int uv_udp_set_multicast_loop(uv_udp_t* handle, int on) {$/;"	f
uv_udp_set_multicast_ttl	uv/unix/udp.c	/^int uv_udp_set_multicast_ttl(uv_udp_t* handle, int ttl) {$/;"	f
uv_udp_set_ttl	uv/unix/udp.c	/^int uv_udp_set_ttl(uv_udp_t* handle, int ttl) {$/;"	f
uv_udp_t	include/uv.h	/^typedef struct uv_udp_s uv_udp_t;$/;"	t	typeref:struct:uv_udp_s
uv_udp_try_send	uv/uv-common.c	/^int uv_udp_try_send(uv_udp_t* handle,$/;"	f
uv_uid_t	include/uv-unix.h	/^typedef uid_t uv_uid_t;$/;"	t
uv_unref	uv/uv-common.c	/^void uv_unref(uv_handle_t* handle) {$/;"	f
uv_update_time	uv/unix/core.c	/^void uv_update_time(uv_loop_t* loop) {$/;"	f
uv_uptime	uv/unix/aix.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_uptime	uv/unix/darwin.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_uptime	uv/unix/freebsd.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_uptime	uv/unix/linux-core.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_uptime	uv/unix/netbsd.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_uptime	uv/unix/openbsd.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_uptime	uv/unix/sunos.c	/^int uv_uptime(double* uptime) {$/;"	f
uv_version	uv/version.c	/^unsigned int uv_version(void) {$/;"	f
uv_version_string	uv/version.c	/^const char* uv_version_string(void) {$/;"	f
uv_walk	uv/uv-common.c	/^void uv_walk(uv_loop_t* loop, uv_walk_cb walk_cb, void* arg) {$/;"	f
uv_walk_cb	include/uv.h	/^typedef void (*uv_walk_cb)(uv_handle_t* handle, void* arg);$/;"	t
uv_work_cb	include/uv.h	/^typedef void (*uv_work_cb)(uv_work_t* req);$/;"	t
uv_work_s	include/uv.h	/^struct uv_work_s {$/;"	s
uv_work_t	include/uv.h	/^typedef struct uv_work_s uv_work_t;$/;"	t	typeref:struct:uv_work_s
uv_write	uv/unix/stream.c	/^int uv_write(uv_write_t* req,$/;"	f
uv_write2	uv/unix/stream.c	/^int uv_write2(uv_write_t* req,$/;"	f
uv_write_cb	include/uv.h	/^typedef void (*uv_write_cb)(uv_write_t* req, int status);$/;"	t
uv_write_s	include/uv.h	/^struct uv_write_s {$/;"	s
uv_write_t	include/uv.h	/^typedef struct uv_write_s uv_write_t;$/;"	t	typeref:struct:uv_write_s
watcher_list	uv/unix/linux-inotify.c	/^struct watcher_list {$/;"	s	file:
watcher_queue	include/uv-unix.h	/^  void* watcher_queue[2];$/;"	m	struct:uv__io_s
watcher_root	uv/unix/linux-inotify.c	/^struct watcher_root {$/;"	s	file:
watchers	uv/unix/linux-inotify.c	/^  QUEUE watchers;$/;"	m	struct:watcher_list	file:
wd	uv/unix/linux-inotify.c	/^  int wd;$/;"	m	struct:watcher_list	file:
wd	uv/unix/linux-syscalls.h	/^  int32_t wd;$/;"	m	struct:uv__inotify_event
wfd	include/uv-unix.h	/^  int wfd;$/;"	m	struct:uv__async
work	include/uv-threadpool.h	/^  void (*work)(struct uv__work *w);$/;"	m	struct:uv__work
work_cb	include/uv.h	/^  uv_work_cb work_cb;$/;"	m	struct:uv_work_s
worker	uv/threadpool.c	/^static void worker(void* arg) {$/;"	f	file:
wq	include/uv-threadpool.h	/^  void* wq[2];$/;"	m	struct:uv__work
wq	uv/threadpool.c	/^static QUEUE wq;$/;"	v	file:
write_req	defs.h	/^  uv_write_t write_req;$/;"	m	struct:__anon42
wrstate	defs.h	/^  unsigned char wrstate;$/;"	m	struct:__anon42
xmalloc	util.c	/^void *xmalloc(size_t size) {$/;"	f
zero_statbuf	uv/fs-poll.c	/^static uv_stat_t zero_statbuf;$/;"	v	file:
